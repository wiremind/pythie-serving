"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _ForeignEnum:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _ForeignEnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_ForeignEnum.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    FOREIGN_ZERO: _ForeignEnum.ValueType  # 0
    FOREIGN_FOO: _ForeignEnum.ValueType  # 4
    FOREIGN_BAR: _ForeignEnum.ValueType  # 5
    FOREIGN_BAZ: _ForeignEnum.ValueType  # 6

class ForeignEnum(_ForeignEnum, metaclass=_ForeignEnumEnumTypeWrapper): ...

FOREIGN_ZERO: ForeignEnum.ValueType  # 0
FOREIGN_FOO: ForeignEnum.ValueType  # 4
FOREIGN_BAR: ForeignEnum.ValueType  # 5
FOREIGN_BAZ: ForeignEnum.ValueType  # 6
global___ForeignEnum = ForeignEnum

@typing_extensions.final
class TestAllTypes(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _NestedEnum:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _NestedEnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TestAllTypes._NestedEnum.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        ZERO: TestAllTypes._NestedEnum.ValueType  # 0
        FOO: TestAllTypes._NestedEnum.ValueType  # 1
        BAR: TestAllTypes._NestedEnum.ValueType  # 2
        BAZ: TestAllTypes._NestedEnum.ValueType  # 3
        NEG: TestAllTypes._NestedEnum.ValueType  # -1
        """Intentionally negative."""

    class NestedEnum(_NestedEnum, metaclass=_NestedEnumEnumTypeWrapper): ...
    ZERO: TestAllTypes.NestedEnum.ValueType  # 0
    FOO: TestAllTypes.NestedEnum.ValueType  # 1
    BAR: TestAllTypes.NestedEnum.ValueType  # 2
    BAZ: TestAllTypes.NestedEnum.ValueType  # 3
    NEG: TestAllTypes.NestedEnum.ValueType  # -1
    """Intentionally negative."""

    @typing_extensions.final
    class NestedMessage(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class DoubleNestedMessage(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            OPTIONAL_STRING_FIELD_NUMBER: builtins.int
            optional_string: builtins.str
            def __init__(
                self,
                *,
                optional_string: builtins.str = ...,
            ) -> None: ...
            def ClearField(self, field_name: typing_extensions.Literal["optional_string", b"optional_string"]) -> None: ...

        OPTIONAL_INT32_FIELD_NUMBER: builtins.int
        REPEATED_INT32_FIELD_NUMBER: builtins.int
        MSG_FIELD_NUMBER: builtins.int
        OPTIONAL_INT64_FIELD_NUMBER: builtins.int
        optional_int32: builtins.int
        @property
        def repeated_int32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
        @property
        def msg(self) -> global___TestAllTypes.NestedMessage.DoubleNestedMessage: ...
        optional_int64: builtins.int
        def __init__(
            self,
            *,
            optional_int32: builtins.int = ...,
            repeated_int32: collections.abc.Iterable[builtins.int] | None = ...,
            msg: global___TestAllTypes.NestedMessage.DoubleNestedMessage | None = ...,
            optional_int64: builtins.int = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["msg", b"msg"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["msg", b"msg", "optional_int32", b"optional_int32", "optional_int64", b"optional_int64", "repeated_int32", b"repeated_int32"]) -> None: ...

    @typing_extensions.final
    class MapStringToMessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___TestAllTypes.NestedMessage: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___TestAllTypes.NestedMessage | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class MapInt32ToMessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___TestAllTypes.NestedMessage: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___TestAllTypes.NestedMessage | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class MapInt64ToMessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___TestAllTypes.NestedMessage: ...
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: global___TestAllTypes.NestedMessage | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class MapBoolToMessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.bool
        @property
        def value(self) -> global___TestAllTypes.NestedMessage: ...
        def __init__(
            self,
            *,
            key: builtins.bool = ...,
            value: global___TestAllTypes.NestedMessage | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class MapStringToInt64Entry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class MapInt64ToStringEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class AnotherMapStringToMessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___TestAllTypes.NestedMessage: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___TestAllTypes.NestedMessage | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    OPTIONAL_INT32_FIELD_NUMBER: builtins.int
    OPTIONAL_INT64_FIELD_NUMBER: builtins.int
    OPTIONAL_UINT32_FIELD_NUMBER: builtins.int
    OPTIONAL_UINT64_FIELD_NUMBER: builtins.int
    OPTIONAL_SINT32_FIELD_NUMBER: builtins.int
    OPTIONAL_SINT64_FIELD_NUMBER: builtins.int
    OPTIONAL_FIXED32_FIELD_NUMBER: builtins.int
    OPTIONAL_FIXED64_FIELD_NUMBER: builtins.int
    OPTIONAL_SFIXED32_FIELD_NUMBER: builtins.int
    OPTIONAL_SFIXED64_FIELD_NUMBER: builtins.int
    OPTIONAL_FLOAT_FIELD_NUMBER: builtins.int
    OPTIONAL_DOUBLE_FIELD_NUMBER: builtins.int
    OPTIONAL_BOOL_FIELD_NUMBER: builtins.int
    OPTIONAL_STRING_FIELD_NUMBER: builtins.int
    OPTIONAL_BYTES_FIELD_NUMBER: builtins.int
    OPTIONAL_NESTED_MESSAGE_FIELD_NUMBER: builtins.int
    OPTIONAL_FOREIGN_MESSAGE_FIELD_NUMBER: builtins.int
    OPTIONAL_NESTED_ENUM_FIELD_NUMBER: builtins.int
    OPTIONAL_FOREIGN_ENUM_FIELD_NUMBER: builtins.int
    OPTIONAL_CORD_FIELD_NUMBER: builtins.int
    REPEATED_INT32_FIELD_NUMBER: builtins.int
    REPEATED_INT64_FIELD_NUMBER: builtins.int
    REPEATED_UINT32_FIELD_NUMBER: builtins.int
    REPEATED_UINT64_FIELD_NUMBER: builtins.int
    REPEATED_SINT32_FIELD_NUMBER: builtins.int
    REPEATED_SINT64_FIELD_NUMBER: builtins.int
    REPEATED_FIXED32_FIELD_NUMBER: builtins.int
    REPEATED_FIXED64_FIELD_NUMBER: builtins.int
    REPEATED_SFIXED32_FIELD_NUMBER: builtins.int
    REPEATED_SFIXED64_FIELD_NUMBER: builtins.int
    REPEATED_FLOAT_FIELD_NUMBER: builtins.int
    REPEATED_DOUBLE_FIELD_NUMBER: builtins.int
    REPEATED_BOOL_FIELD_NUMBER: builtins.int
    REPEATED_STRING_FIELD_NUMBER: builtins.int
    REPEATED_BYTES_FIELD_NUMBER: builtins.int
    REPEATED_NESTED_MESSAGE_FIELD_NUMBER: builtins.int
    REPEATED_NESTED_ENUM_FIELD_NUMBER: builtins.int
    REPEATED_CORD_FIELD_NUMBER: builtins.int
    ONEOF_UINT32_FIELD_NUMBER: builtins.int
    ONEOF_NESTED_MESSAGE_FIELD_NUMBER: builtins.int
    ONEOF_STRING_FIELD_NUMBER: builtins.int
    ONEOF_BYTES_FIELD_NUMBER: builtins.int
    ONEOF_ENUM_FIELD_NUMBER: builtins.int
    MAP_STRING_TO_MESSAGE_FIELD_NUMBER: builtins.int
    MAP_INT32_TO_MESSAGE_FIELD_NUMBER: builtins.int
    MAP_INT64_TO_MESSAGE_FIELD_NUMBER: builtins.int
    MAP_BOOL_TO_MESSAGE_FIELD_NUMBER: builtins.int
    MAP_STRING_TO_INT64_FIELD_NUMBER: builtins.int
    MAP_INT64_TO_STRING_FIELD_NUMBER: builtins.int
    ANOTHER_MAP_STRING_TO_MESSAGE_FIELD_NUMBER: builtins.int
    PACKED_REPEATED_INT64_FIELD_NUMBER: builtins.int
    optional_int32: builtins.int
    """Singular
    use large tag to test output order.
    """
    optional_int64: builtins.int
    optional_uint32: builtins.int
    optional_uint64: builtins.int
    """use large tag to test output order."""
    optional_sint32: builtins.int
    optional_sint64: builtins.int
    optional_fixed32: builtins.int
    optional_fixed64: builtins.int
    optional_sfixed32: builtins.int
    optional_sfixed64: builtins.int
    optional_float: builtins.float
    optional_double: builtins.float
    optional_bool: builtins.bool
    optional_string: builtins.str
    optional_bytes: builtins.bytes
    @property
    def optional_nested_message(self) -> global___TestAllTypes.NestedMessage: ...
    @property
    def optional_foreign_message(self) -> global___ForeignMessage: ...
    optional_nested_enum: global___TestAllTypes.NestedEnum.ValueType
    optional_foreign_enum: global___ForeignEnum.ValueType
    optional_cord: builtins.str
    @property
    def repeated_int32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Repeated"""
    @property
    def repeated_int64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_uint32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_uint64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_sint32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_sint64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_fixed32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_fixed64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_sfixed32(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_sfixed64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def repeated_float(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def repeated_double(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def repeated_bool(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bool]: ...
    @property
    def repeated_string(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def repeated_bytes(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.bytes]: ...
    @property
    def repeated_nested_message(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___TestAllTypes.NestedMessage]: ...
    @property
    def repeated_nested_enum(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[global___TestAllTypes.NestedEnum.ValueType]: ...
    @property
    def repeated_cord(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    oneof_uint32: builtins.int
    @property
    def oneof_nested_message(self) -> global___TestAllTypes.NestedMessage: ...
    oneof_string: builtins.str
    oneof_bytes: builtins.bytes
    oneof_enum: global___TestAllTypes.NestedEnum.ValueType
    @property
    def map_string_to_message(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___TestAllTypes.NestedMessage]: ...
    @property
    def map_int32_to_message(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___TestAllTypes.NestedMessage]: ...
    @property
    def map_int64_to_message(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___TestAllTypes.NestedMessage]: ...
    @property
    def map_bool_to_message(self) -> google.protobuf.internal.containers.MessageMap[builtins.bool, global___TestAllTypes.NestedMessage]: ...
    @property
    def map_string_to_int64(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    @property
    def map_int64_to_string(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.str]: ...
    @property
    def another_map_string_to_message(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___TestAllTypes.NestedMessage]: ...
    @property
    def packed_repeated_int64(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        optional_int32: builtins.int = ...,
        optional_int64: builtins.int = ...,
        optional_uint32: builtins.int = ...,
        optional_uint64: builtins.int = ...,
        optional_sint32: builtins.int = ...,
        optional_sint64: builtins.int = ...,
        optional_fixed32: builtins.int = ...,
        optional_fixed64: builtins.int = ...,
        optional_sfixed32: builtins.int = ...,
        optional_sfixed64: builtins.int = ...,
        optional_float: builtins.float = ...,
        optional_double: builtins.float = ...,
        optional_bool: builtins.bool = ...,
        optional_string: builtins.str = ...,
        optional_bytes: builtins.bytes = ...,
        optional_nested_message: global___TestAllTypes.NestedMessage | None = ...,
        optional_foreign_message: global___ForeignMessage | None = ...,
        optional_nested_enum: global___TestAllTypes.NestedEnum.ValueType = ...,
        optional_foreign_enum: global___ForeignEnum.ValueType = ...,
        optional_cord: builtins.str = ...,
        repeated_int32: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_int64: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_uint32: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_uint64: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_sint32: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_sint64: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_fixed32: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_fixed64: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_sfixed32: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_sfixed64: collections.abc.Iterable[builtins.int] | None = ...,
        repeated_float: collections.abc.Iterable[builtins.float] | None = ...,
        repeated_double: collections.abc.Iterable[builtins.float] | None = ...,
        repeated_bool: collections.abc.Iterable[builtins.bool] | None = ...,
        repeated_string: collections.abc.Iterable[builtins.str] | None = ...,
        repeated_bytes: collections.abc.Iterable[builtins.bytes] | None = ...,
        repeated_nested_message: collections.abc.Iterable[global___TestAllTypes.NestedMessage] | None = ...,
        repeated_nested_enum: collections.abc.Iterable[global___TestAllTypes.NestedEnum.ValueType] | None = ...,
        repeated_cord: collections.abc.Iterable[builtins.str] | None = ...,
        oneof_uint32: builtins.int = ...,
        oneof_nested_message: global___TestAllTypes.NestedMessage | None = ...,
        oneof_string: builtins.str = ...,
        oneof_bytes: builtins.bytes = ...,
        oneof_enum: global___TestAllTypes.NestedEnum.ValueType = ...,
        map_string_to_message: collections.abc.Mapping[builtins.str, global___TestAllTypes.NestedMessage] | None = ...,
        map_int32_to_message: collections.abc.Mapping[builtins.int, global___TestAllTypes.NestedMessage] | None = ...,
        map_int64_to_message: collections.abc.Mapping[builtins.int, global___TestAllTypes.NestedMessage] | None = ...,
        map_bool_to_message: collections.abc.Mapping[builtins.bool, global___TestAllTypes.NestedMessage] | None = ...,
        map_string_to_int64: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
        map_int64_to_string: collections.abc.Mapping[builtins.int, builtins.str] | None = ...,
        another_map_string_to_message: collections.abc.Mapping[builtins.str, global___TestAllTypes.NestedMessage] | None = ...,
        packed_repeated_int64: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["oneof_bytes", b"oneof_bytes", "oneof_enum", b"oneof_enum", "oneof_field", b"oneof_field", "oneof_nested_message", b"oneof_nested_message", "oneof_string", b"oneof_string", "oneof_uint32", b"oneof_uint32", "optional_foreign_message", b"optional_foreign_message", "optional_nested_message", b"optional_nested_message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["another_map_string_to_message", b"another_map_string_to_message", "map_bool_to_message", b"map_bool_to_message", "map_int32_to_message", b"map_int32_to_message", "map_int64_to_message", b"map_int64_to_message", "map_int64_to_string", b"map_int64_to_string", "map_string_to_int64", b"map_string_to_int64", "map_string_to_message", b"map_string_to_message", "oneof_bytes", b"oneof_bytes", "oneof_enum", b"oneof_enum", "oneof_field", b"oneof_field", "oneof_nested_message", b"oneof_nested_message", "oneof_string", b"oneof_string", "oneof_uint32", b"oneof_uint32", "optional_bool", b"optional_bool", "optional_bytes", b"optional_bytes", "optional_cord", b"optional_cord", "optional_double", b"optional_double", "optional_fixed32", b"optional_fixed32", "optional_fixed64", b"optional_fixed64", "optional_float", b"optional_float", "optional_foreign_enum", b"optional_foreign_enum", "optional_foreign_message", b"optional_foreign_message", "optional_int32", b"optional_int32", "optional_int64", b"optional_int64", "optional_nested_enum", b"optional_nested_enum", "optional_nested_message", b"optional_nested_message", "optional_sfixed32", b"optional_sfixed32", "optional_sfixed64", b"optional_sfixed64", "optional_sint32", b"optional_sint32", "optional_sint64", b"optional_sint64", "optional_string", b"optional_string", "optional_uint32", b"optional_uint32", "optional_uint64", b"optional_uint64", "packed_repeated_int64", b"packed_repeated_int64", "repeated_bool", b"repeated_bool", "repeated_bytes", b"repeated_bytes", "repeated_cord", b"repeated_cord", "repeated_double", b"repeated_double", "repeated_fixed32", b"repeated_fixed32", "repeated_fixed64", b"repeated_fixed64", "repeated_float", b"repeated_float", "repeated_int32", b"repeated_int32", "repeated_int64", b"repeated_int64", "repeated_nested_enum", b"repeated_nested_enum", "repeated_nested_message", b"repeated_nested_message", "repeated_sfixed32", b"repeated_sfixed32", "repeated_sfixed64", b"repeated_sfixed64", "repeated_sint32", b"repeated_sint32", "repeated_sint64", b"repeated_sint64", "repeated_string", b"repeated_string", "repeated_uint32", b"repeated_uint32", "repeated_uint64", b"repeated_uint64"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["oneof_field", b"oneof_field"]) -> typing_extensions.Literal["oneof_uint32", "oneof_nested_message", "oneof_string", "oneof_bytes", "oneof_enum"] | None: ...

global___TestAllTypes = TestAllTypes

@typing_extensions.final
class NestedTestAllTypes(google.protobuf.message.Message):
    """A recursive message."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class MapStringToInt64Entry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    CHILD_FIELD_NUMBER: builtins.int
    PAYLOAD_FIELD_NUMBER: builtins.int
    MAP_STRING_TO_INT64_FIELD_NUMBER: builtins.int
    @property
    def child(self) -> global___NestedTestAllTypes: ...
    @property
    def payload(self) -> global___TestAllTypes: ...
    @property
    def map_string_to_int64(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.int]: ...
    def __init__(
        self,
        *,
        child: global___NestedTestAllTypes | None = ...,
        payload: global___TestAllTypes | None = ...,
        map_string_to_int64: collections.abc.Mapping[builtins.str, builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["child", b"child", "payload", b"payload"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["child", b"child", "map_string_to_int64", b"map_string_to_int64", "payload", b"payload"]) -> None: ...

global___NestedTestAllTypes = NestedTestAllTypes

@typing_extensions.final
class ForeignMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    C_FIELD_NUMBER: builtins.int
    c: builtins.int
    def __init__(
        self,
        *,
        c: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["c", b"c"]) -> None: ...

global___ForeignMessage = ForeignMessage

@typing_extensions.final
class TestEmptyMessage(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    def __init__(
        self,
    ) -> None: ...

global___TestEmptyMessage = TestEmptyMessage
