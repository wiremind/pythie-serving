# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/tools/proto_text/test.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n&tensorflow/tools/proto_text/test.proto\x12\x0ftensorflow.test\"\xd1\x17\n\x0cTestAllTypes\x12\x17\n\x0eoptional_int32\x18\xe8\x07 \x01(\x05\x12\x16\n\x0eoptional_int64\x18\x02 \x01(\x03\x12\x17\n\x0foptional_uint32\x18\x03 \x01(\r\x12\x18\n\x0foptional_uint64\x18\xe7\x07 \x01(\x04\x12\x17\n\x0foptional_sint32\x18\x05 \x01(\x11\x12\x17\n\x0foptional_sint64\x18\x06 \x01(\x12\x12\x18\n\x10optional_fixed32\x18\x07 \x01(\x07\x12\x18\n\x10optional_fixed64\x18\x08 \x01(\x06\x12\x19\n\x11optional_sfixed32\x18\t \x01(\x0f\x12\x19\n\x11optional_sfixed64\x18\n \x01(\x10\x12\x16\n\x0eoptional_float\x18\x0b \x01(\x02\x12\x17\n\x0foptional_double\x18\x0c \x01(\x01\x12\x15\n\roptional_bool\x18\r \x01(\x08\x12\x17\n\x0foptional_string\x18\x0e \x01(\t\x12\x16\n\x0eoptional_bytes\x18\x0f \x01(\x0c\x12L\n\x17optional_nested_message\x18\x12 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage\x12\x41\n\x18optional_foreign_message\x18\x13 \x01(\x0b\x32\x1f.tensorflow.test.ForeignMessage\x12\x46\n\x14optional_nested_enum\x18\x15 \x01(\x0e\x32(.tensorflow.test.TestAllTypes.NestedEnum\x12;\n\x15optional_foreign_enum\x18\x16 \x01(\x0e\x32\x1c.tensorflow.test.ForeignEnum\x12\x15\n\roptional_cord\x18\x19 \x01(\t\x12\x16\n\x0erepeated_int32\x18\x1f \x03(\x05\x12\x16\n\x0erepeated_int64\x18  \x03(\x03\x12\x17\n\x0frepeated_uint32\x18! \x03(\r\x12\x17\n\x0frepeated_uint64\x18\" \x03(\x04\x12\x17\n\x0frepeated_sint32\x18# \x03(\x11\x12\x17\n\x0frepeated_sint64\x18$ \x03(\x12\x12\x18\n\x10repeated_fixed32\x18% \x03(\x07\x12\x18\n\x10repeated_fixed64\x18& \x03(\x06\x12\x19\n\x11repeated_sfixed32\x18\' \x03(\x0f\x12\x19\n\x11repeated_sfixed64\x18( \x03(\x10\x12\x16\n\x0erepeated_float\x18) \x03(\x02\x12\x17\n\x0frepeated_double\x18* \x03(\x01\x12\x15\n\rrepeated_bool\x18+ \x03(\x08\x12\x17\n\x0frepeated_string\x18, \x03(\t\x12\x16\n\x0erepeated_bytes\x18- \x03(\x0c\x12L\n\x17repeated_nested_message\x18\x30 \x03(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage\x12\x46\n\x14repeated_nested_enum\x18\x33 \x03(\x0e\x32(.tensorflow.test.TestAllTypes.NestedEnum\x12\x15\n\rrepeated_cord\x18\x37 \x03(\t\x12\x16\n\x0coneof_uint32\x18o \x01(\rH\x00\x12K\n\x14oneof_nested_message\x18p \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessageH\x00\x12\x16\n\x0coneof_string\x18q \x01(\tH\x00\x12\x15\n\x0boneof_bytes\x18r \x01(\x0cH\x00\x12>\n\noneof_enum\x18\x64 \x01(\x0e\x32(.tensorflow.test.TestAllTypes.NestedEnumH\x00\x12T\n\x15map_string_to_message\x18: \x03(\x0b\x32\x35.tensorflow.test.TestAllTypes.MapStringToMessageEntry\x12R\n\x14map_int32_to_message\x18; \x03(\x0b\x32\x34.tensorflow.test.TestAllTypes.MapInt32ToMessageEntry\x12R\n\x14map_int64_to_message\x18< \x03(\x0b\x32\x34.tensorflow.test.TestAllTypes.MapInt64ToMessageEntry\x12P\n\x13map_bool_to_message\x18= \x03(\x0b\x32\x33.tensorflow.test.TestAllTypes.MapBoolToMessageEntry\x12P\n\x13map_string_to_int64\x18> \x03(\x0b\x32\x33.tensorflow.test.TestAllTypes.MapStringToInt64Entry\x12P\n\x13map_int64_to_string\x18? \x03(\x0b\x32\x33.tensorflow.test.TestAllTypes.MapInt64ToStringEntry\x12\x63\n\x1d\x61nother_map_string_to_message\x18\x41 \x03(\x0b\x32<.tensorflow.test.TestAllTypes.AnotherMapStringToMessageEntry\x12!\n\x15packed_repeated_int64\x18@ \x03(\x03\x42\x02\x10\x01\x1a\xd5\x01\n\rNestedMessage\x12\x16\n\x0eoptional_int32\x18\x01 \x01(\x05\x12\x16\n\x0erepeated_int32\x18\x02 \x03(\x05\x12L\n\x03msg\x18\x03 \x01(\x0b\x32?.tensorflow.test.TestAllTypes.NestedMessage.DoubleNestedMessage\x12\x16\n\x0eoptional_int64\x18\x04 \x01(\x03\x1a.\n\x13\x44oubleNestedMessage\x12\x17\n\x0foptional_string\x18\x01 \x01(\t\x1a\x66\n\x17MapStringToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\x1a\x65\n\x16MapInt32ToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\x1a\x65\n\x16MapInt64ToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\x1a\x64\n\x15MapBoolToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\x08\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\x1a\x37\n\x15MapStringToInt64Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\x1a\x37\n\x15MapInt64ToStringEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x1am\n\x1e\x41notherMapStringToMessageEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12:\n\x05value\x18\x02 \x01(\x0b\x32+.tensorflow.test.TestAllTypes.NestedMessage:\x02\x38\x01\"C\n\nNestedEnum\x12\x08\n\x04ZERO\x10\x00\x12\x07\n\x03\x46OO\x10\x01\x12\x07\n\x03\x42\x41R\x10\x02\x12\x07\n\x03\x42\x41Z\x10\x03\x12\x10\n\x03NEG\x10\xff\xff\xff\xff\xff\xff\xff\xff\xff\x01\x42\r\n\x0boneof_field\"\x89\x02\n\x12NestedTestAllTypes\x12\x32\n\x05\x63hild\x18\x01 \x01(\x0b\x32#.tensorflow.test.NestedTestAllTypes\x12.\n\x07payload\x18\x02 \x01(\x0b\x32\x1d.tensorflow.test.TestAllTypes\x12V\n\x13map_string_to_int64\x18\x03 \x03(\x0b\x32\x39.tensorflow.test.NestedTestAllTypes.MapStringToInt64Entry\x1a\x37\n\x15MapStringToInt64Entry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"\x1b\n\x0e\x46oreignMessage\x12\t\n\x01\x63\x18\x01 \x01(\x05\"\x12\n\x10TestEmptyMessage*R\n\x0b\x46oreignEnum\x12\x10\n\x0c\x46OREIGN_ZERO\x10\x00\x12\x0f\n\x0b\x46OREIGN_FOO\x10\x04\x12\x0f\n\x0b\x46OREIGN_BAR\x10\x05\x12\x0f\n\x0b\x46OREIGN_BAZ\x10\x06\x62\x06proto3')

_FOREIGNENUM = DESCRIPTOR.enum_types_by_name['ForeignEnum']
ForeignEnum = enum_type_wrapper.EnumTypeWrapper(_FOREIGNENUM)
FOREIGN_ZERO = 0
FOREIGN_FOO = 4
FOREIGN_BAR = 5
FOREIGN_BAZ = 6


_TESTALLTYPES = DESCRIPTOR.message_types_by_name['TestAllTypes']
_TESTALLTYPES_NESTEDMESSAGE = _TESTALLTYPES.nested_types_by_name['NestedMessage']
_TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE = _TESTALLTYPES_NESTEDMESSAGE.nested_types_by_name['DoubleNestedMessage']
_TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY = _TESTALLTYPES.nested_types_by_name['MapStringToMessageEntry']
_TESTALLTYPES_MAPINT32TOMESSAGEENTRY = _TESTALLTYPES.nested_types_by_name['MapInt32ToMessageEntry']
_TESTALLTYPES_MAPINT64TOMESSAGEENTRY = _TESTALLTYPES.nested_types_by_name['MapInt64ToMessageEntry']
_TESTALLTYPES_MAPBOOLTOMESSAGEENTRY = _TESTALLTYPES.nested_types_by_name['MapBoolToMessageEntry']
_TESTALLTYPES_MAPSTRINGTOINT64ENTRY = _TESTALLTYPES.nested_types_by_name['MapStringToInt64Entry']
_TESTALLTYPES_MAPINT64TOSTRINGENTRY = _TESTALLTYPES.nested_types_by_name['MapInt64ToStringEntry']
_TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY = _TESTALLTYPES.nested_types_by_name['AnotherMapStringToMessageEntry']
_NESTEDTESTALLTYPES = DESCRIPTOR.message_types_by_name['NestedTestAllTypes']
_NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY = _NESTEDTESTALLTYPES.nested_types_by_name['MapStringToInt64Entry']
_FOREIGNMESSAGE = DESCRIPTOR.message_types_by_name['ForeignMessage']
_TESTEMPTYMESSAGE = DESCRIPTOR.message_types_by_name['TestEmptyMessage']
_TESTALLTYPES_NESTEDENUM = _TESTALLTYPES.enum_types_by_name['NestedEnum']
TestAllTypes = _reflection.GeneratedProtocolMessageType('TestAllTypes', (_message.Message,), {

  'NestedMessage' : _reflection.GeneratedProtocolMessageType('NestedMessage', (_message.Message,), {

    'DoubleNestedMessage' : _reflection.GeneratedProtocolMessageType('DoubleNestedMessage', (_message.Message,), {
      'DESCRIPTOR' : _TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE,
      '__module__' : 'tensorflow.tools.proto_text.test_pb2'
      # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.NestedMessage.DoubleNestedMessage)
      })
    ,
    'DESCRIPTOR' : _TESTALLTYPES_NESTEDMESSAGE,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.NestedMessage)
    })
  ,

  'MapStringToMessageEntry' : _reflection.GeneratedProtocolMessageType('MapStringToMessageEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapStringToMessageEntry)
    })
  ,

  'MapInt32ToMessageEntry' : _reflection.GeneratedProtocolMessageType('MapInt32ToMessageEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTALLTYPES_MAPINT32TOMESSAGEENTRY,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapInt32ToMessageEntry)
    })
  ,

  'MapInt64ToMessageEntry' : _reflection.GeneratedProtocolMessageType('MapInt64ToMessageEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTALLTYPES_MAPINT64TOMESSAGEENTRY,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapInt64ToMessageEntry)
    })
  ,

  'MapBoolToMessageEntry' : _reflection.GeneratedProtocolMessageType('MapBoolToMessageEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTALLTYPES_MAPBOOLTOMESSAGEENTRY,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapBoolToMessageEntry)
    })
  ,

  'MapStringToInt64Entry' : _reflection.GeneratedProtocolMessageType('MapStringToInt64Entry', (_message.Message,), {
    'DESCRIPTOR' : _TESTALLTYPES_MAPSTRINGTOINT64ENTRY,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapStringToInt64Entry)
    })
  ,

  'MapInt64ToStringEntry' : _reflection.GeneratedProtocolMessageType('MapInt64ToStringEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTALLTYPES_MAPINT64TOSTRINGENTRY,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.MapInt64ToStringEntry)
    })
  ,

  'AnotherMapStringToMessageEntry' : _reflection.GeneratedProtocolMessageType('AnotherMapStringToMessageEntry', (_message.Message,), {
    'DESCRIPTOR' : _TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes.AnotherMapStringToMessageEntry)
    })
  ,
  'DESCRIPTOR' : _TESTALLTYPES,
  '__module__' : 'tensorflow.tools.proto_text.test_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.test.TestAllTypes)
  })
_sym_db.RegisterMessage(TestAllTypes)
_sym_db.RegisterMessage(TestAllTypes.NestedMessage)
_sym_db.RegisterMessage(TestAllTypes.NestedMessage.DoubleNestedMessage)
_sym_db.RegisterMessage(TestAllTypes.MapStringToMessageEntry)
_sym_db.RegisterMessage(TestAllTypes.MapInt32ToMessageEntry)
_sym_db.RegisterMessage(TestAllTypes.MapInt64ToMessageEntry)
_sym_db.RegisterMessage(TestAllTypes.MapBoolToMessageEntry)
_sym_db.RegisterMessage(TestAllTypes.MapStringToInt64Entry)
_sym_db.RegisterMessage(TestAllTypes.MapInt64ToStringEntry)
_sym_db.RegisterMessage(TestAllTypes.AnotherMapStringToMessageEntry)

NestedTestAllTypes = _reflection.GeneratedProtocolMessageType('NestedTestAllTypes', (_message.Message,), {

  'MapStringToInt64Entry' : _reflection.GeneratedProtocolMessageType('MapStringToInt64Entry', (_message.Message,), {
    'DESCRIPTOR' : _NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY,
    '__module__' : 'tensorflow.tools.proto_text.test_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.test.NestedTestAllTypes.MapStringToInt64Entry)
    })
  ,
  'DESCRIPTOR' : _NESTEDTESTALLTYPES,
  '__module__' : 'tensorflow.tools.proto_text.test_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.test.NestedTestAllTypes)
  })
_sym_db.RegisterMessage(NestedTestAllTypes)
_sym_db.RegisterMessage(NestedTestAllTypes.MapStringToInt64Entry)

ForeignMessage = _reflection.GeneratedProtocolMessageType('ForeignMessage', (_message.Message,), {
  'DESCRIPTOR' : _FOREIGNMESSAGE,
  '__module__' : 'tensorflow.tools.proto_text.test_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.test.ForeignMessage)
  })
_sym_db.RegisterMessage(ForeignMessage)

TestEmptyMessage = _reflection.GeneratedProtocolMessageType('TestEmptyMessage', (_message.Message,), {
  'DESCRIPTOR' : _TESTEMPTYMESSAGE,
  '__module__' : 'tensorflow.tools.proto_text.test_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.test.TestEmptyMessage)
  })
_sym_db.RegisterMessage(TestEmptyMessage)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY._options = None
  _TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY._serialized_options = b'8\001'
  _TESTALLTYPES_MAPINT32TOMESSAGEENTRY._options = None
  _TESTALLTYPES_MAPINT32TOMESSAGEENTRY._serialized_options = b'8\001'
  _TESTALLTYPES_MAPINT64TOMESSAGEENTRY._options = None
  _TESTALLTYPES_MAPINT64TOMESSAGEENTRY._serialized_options = b'8\001'
  _TESTALLTYPES_MAPBOOLTOMESSAGEENTRY._options = None
  _TESTALLTYPES_MAPBOOLTOMESSAGEENTRY._serialized_options = b'8\001'
  _TESTALLTYPES_MAPSTRINGTOINT64ENTRY._options = None
  _TESTALLTYPES_MAPSTRINGTOINT64ENTRY._serialized_options = b'8\001'
  _TESTALLTYPES_MAPINT64TOSTRINGENTRY._options = None
  _TESTALLTYPES_MAPINT64TOSTRINGENTRY._serialized_options = b'8\001'
  _TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY._options = None
  _TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY._serialized_options = b'8\001'
  _TESTALLTYPES.fields_by_name['packed_repeated_int64']._options = None
  _TESTALLTYPES.fields_by_name['packed_repeated_int64']._serialized_options = b'\020\001'
  _NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY._options = None
  _NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY._serialized_options = b'8\001'
  _FOREIGNENUM._serialized_start=3404
  _FOREIGNENUM._serialized_end=3486
  _TESTALLTYPES._serialized_start=60
  _TESTALLTYPES._serialized_end=3085
  _TESTALLTYPES_NESTEDMESSAGE._serialized_start=2151
  _TESTALLTYPES_NESTEDMESSAGE._serialized_end=2364
  _TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE._serialized_start=2318
  _TESTALLTYPES_NESTEDMESSAGE_DOUBLENESTEDMESSAGE._serialized_end=2364
  _TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY._serialized_start=2366
  _TESTALLTYPES_MAPSTRINGTOMESSAGEENTRY._serialized_end=2468
  _TESTALLTYPES_MAPINT32TOMESSAGEENTRY._serialized_start=2470
  _TESTALLTYPES_MAPINT32TOMESSAGEENTRY._serialized_end=2571
  _TESTALLTYPES_MAPINT64TOMESSAGEENTRY._serialized_start=2573
  _TESTALLTYPES_MAPINT64TOMESSAGEENTRY._serialized_end=2674
  _TESTALLTYPES_MAPBOOLTOMESSAGEENTRY._serialized_start=2676
  _TESTALLTYPES_MAPBOOLTOMESSAGEENTRY._serialized_end=2776
  _TESTALLTYPES_MAPSTRINGTOINT64ENTRY._serialized_start=2778
  _TESTALLTYPES_MAPSTRINGTOINT64ENTRY._serialized_end=2833
  _TESTALLTYPES_MAPINT64TOSTRINGENTRY._serialized_start=2835
  _TESTALLTYPES_MAPINT64TOSTRINGENTRY._serialized_end=2890
  _TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY._serialized_start=2892
  _TESTALLTYPES_ANOTHERMAPSTRINGTOMESSAGEENTRY._serialized_end=3001
  _TESTALLTYPES_NESTEDENUM._serialized_start=3003
  _TESTALLTYPES_NESTEDENUM._serialized_end=3070
  _NESTEDTESTALLTYPES._serialized_start=3088
  _NESTEDTESTALLTYPES._serialized_end=3353
  _NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY._serialized_start=2778
  _NESTEDTESTALLTYPES_MAPSTRINGTOINT64ENTRY._serialized_end=2833
  _FOREIGNMESSAGE._serialized_start=3355
  _FOREIGNMESSAGE._serialized_end=3382
  _TESTEMPTYMESSAGE._serialized_start=3384
  _TESTEMPTYMESSAGE._serialized_end=3402
# @@protoc_insertion_point(module_scope)
