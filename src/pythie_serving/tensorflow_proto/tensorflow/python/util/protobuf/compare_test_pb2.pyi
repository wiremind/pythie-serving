"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Enum:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _EnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Enum.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    A: _Enum.ValueType  # 0
    B: _Enum.ValueType  # 1
    C: _Enum.ValueType  # 2
class Enum(_Enum, metaclass=_EnumEnumTypeWrapper):
    pass

A: Enum.ValueType  # 0
B: Enum.ValueType  # 1
C: Enum.ValueType  # 2
global___Enum = Enum


class Small(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STRINGS_FIELD_NUMBER: builtins.int
    @property
    def strings(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        strings: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["strings",b"strings"]) -> None: ...
global___Small = Small

class Medium(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class GroupA(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        class GroupB(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor
            STRINGS_FIELD_NUMBER: builtins.int
            strings: typing.Text
            def __init__(self,
                *,
                strings: typing.Optional[typing.Text] = ...,
                ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["strings",b"strings"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["strings",b"strings"]) -> None: ...

        GROUPB_FIELD_NUMBER: builtins.int
        @property
        def groupb(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Medium.GroupA.GroupB]: ...
        def __init__(self,
            *,
            groupb: typing.Optional[typing.Iterable[global___Medium.GroupA.GroupB]] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["groupb",b"groupb"]) -> None: ...

    INT32S_FIELD_NUMBER: builtins.int
    SMALLS_FIELD_NUMBER: builtins.int
    GROUPA_FIELD_NUMBER: builtins.int
    FLOATS_FIELD_NUMBER: builtins.int
    @property
    def int32s(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def smalls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Small]: ...
    @property
    def groupa(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Medium.GroupA]: ...
    @property
    def floats(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(self,
        *,
        int32s: typing.Optional[typing.Iterable[builtins.int]] = ...,
        smalls: typing.Optional[typing.Iterable[global___Small]] = ...,
        groupa: typing.Optional[typing.Iterable[global___Medium.GroupA]] = ...,
        floats: typing.Optional[typing.Iterable[builtins.float]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["floats",b"floats","groupa",b"groupa","int32s",b"int32s","smalls",b"smalls"]) -> None: ...
global___Medium = Medium

class Large(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STRING__FIELD_NUMBER: builtins.int
    INT64__FIELD_NUMBER: builtins.int
    FLOAT__FIELD_NUMBER: builtins.int
    BOOL__FIELD_NUMBER: builtins.int
    ENUM__FIELD_NUMBER: builtins.int
    INT64S_FIELD_NUMBER: builtins.int
    MEDIUM_FIELD_NUMBER: builtins.int
    SMALL_FIELD_NUMBER: builtins.int
    DOUBLE__FIELD_NUMBER: builtins.int
    WITH_MAP_FIELD_NUMBER: builtins.int
    string_: typing.Text
    int64_: builtins.int
    float_: builtins.float
    bool_: builtins.bool
    enum_: global___Enum.ValueType
    @property
    def int64s(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def medium(self) -> global___Medium: ...
    @property
    def small(self) -> global___Small: ...
    double_: builtins.float
    @property
    def with_map(self) -> global___WithMap: ...
    def __init__(self,
        *,
        string_: typing.Optional[typing.Text] = ...,
        int64_: typing.Optional[builtins.int] = ...,
        float_: typing.Optional[builtins.float] = ...,
        bool_: typing.Optional[builtins.bool] = ...,
        enum_: typing.Optional[global___Enum.ValueType] = ...,
        int64s: typing.Optional[typing.Iterable[builtins.int]] = ...,
        medium: typing.Optional[global___Medium] = ...,
        small: typing.Optional[global___Small] = ...,
        double_: typing.Optional[builtins.float] = ...,
        with_map: typing.Optional[global___WithMap] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bool_",b"bool_","double_",b"double_","enum_",b"enum_","float_",b"float_","int64_",b"int64_","medium",b"medium","small",b"small","string_",b"string_","with_map",b"with_map"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bool_",b"bool_","double_",b"double_","enum_",b"enum_","float_",b"float_","int64_",b"int64_","int64s",b"int64s","medium",b"medium","small",b"small","string_",b"string_","with_map",b"with_map"]) -> None: ...
global___Large = Large

class Labeled(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUIRED_FIELD_NUMBER: builtins.int
    OPTIONAL_FIELD_NUMBER: builtins.int
    required: builtins.int
    optional: builtins.int
    def __init__(self,
        *,
        required: typing.Optional[builtins.int] = ...,
        optional: typing.Optional[builtins.int] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["optional",b"optional","required",b"required"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["optional",b"optional","required",b"required"]) -> None: ...
global___Labeled = Labeled

class WithMap(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class ValueMessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___Small: ...
        def __init__(self,
            *,
            key: typing.Optional[builtins.int] = ...,
            value: typing.Optional[global___Small] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class ValueStringEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Optional[typing.Text] = ...,
            value: typing.Optional[typing.Text] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    VALUE_MESSAGE_FIELD_NUMBER: builtins.int
    VALUE_STRING_FIELD_NUMBER: builtins.int
    @property
    def value_message(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___Small]: ...
    @property
    def value_string(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]: ...
    def __init__(self,
        *,
        value_message: typing.Optional[typing.Mapping[builtins.int, global___Small]] = ...,
        value_string: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["value_message",b"value_message","value_string",b"value_string"]) -> None: ...
global___WithMap = WithMap
