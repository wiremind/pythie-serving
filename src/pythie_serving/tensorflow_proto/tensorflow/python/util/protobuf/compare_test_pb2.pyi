"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Test messages used in compare_test.py."""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Enum:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _EnumEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Enum.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    A: _Enum.ValueType  # 0
    B: _Enum.ValueType  # 1
    C: _Enum.ValueType  # 2

class Enum(_Enum, metaclass=_EnumEnumTypeWrapper): ...

A: Enum.ValueType  # 0
B: Enum.ValueType  # 1
C: Enum.ValueType  # 2
global___Enum = Enum

@typing_extensions.final
class Small(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STRINGS_FIELD_NUMBER: builtins.int
    @property
    def strings(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    def __init__(
        self,
        *,
        strings: collections.abc.Iterable[builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["strings", b"strings"]) -> None: ...

global___Small = Small

@typing_extensions.final
class Medium(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class GroupA(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class GroupB(google.protobuf.message.Message):
            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            STRINGS_FIELD_NUMBER: builtins.int
            strings: builtins.str
            def __init__(
                self,
                *,
                strings: builtins.str | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["strings", b"strings"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["strings", b"strings"]) -> None: ...

        GROUPB_FIELD_NUMBER: builtins.int
        @property
        def groupb(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Medium.GroupA.GroupB]: ...
        def __init__(
            self,
            *,
            groupb: collections.abc.Iterable[global___Medium.GroupA.GroupB] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["groupb", b"groupb"]) -> None: ...

    INT32S_FIELD_NUMBER: builtins.int
    SMALLS_FIELD_NUMBER: builtins.int
    GROUPA_FIELD_NUMBER: builtins.int
    FLOATS_FIELD_NUMBER: builtins.int
    @property
    def int32s(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def smalls(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Small]: ...
    @property
    def groupa(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Medium.GroupA]: ...
    @property
    def floats(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    def __init__(
        self,
        *,
        int32s: collections.abc.Iterable[builtins.int] | None = ...,
        smalls: collections.abc.Iterable[global___Small] | None = ...,
        groupa: collections.abc.Iterable[global___Medium.GroupA] | None = ...,
        floats: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["floats", b"floats", "groupa", b"groupa", "int32s", b"int32s", "smalls", b"smalls"]) -> None: ...

global___Medium = Medium

@typing_extensions.final
class Large(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STRING__FIELD_NUMBER: builtins.int
    INT64__FIELD_NUMBER: builtins.int
    FLOAT__FIELD_NUMBER: builtins.int
    BOOL__FIELD_NUMBER: builtins.int
    ENUM__FIELD_NUMBER: builtins.int
    INT64S_FIELD_NUMBER: builtins.int
    MEDIUM_FIELD_NUMBER: builtins.int
    SMALL_FIELD_NUMBER: builtins.int
    DOUBLE__FIELD_NUMBER: builtins.int
    WITH_MAP_FIELD_NUMBER: builtins.int
    string_: builtins.str
    int64_: builtins.int
    float_: builtins.float
    bool_: builtins.bool
    enum_: global___Enum.ValueType
    @property
    def int64s(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def medium(self) -> global___Medium: ...
    @property
    def small(self) -> global___Small: ...
    double_: builtins.float
    @property
    def with_map(self) -> global___WithMap: ...
    def __init__(
        self,
        *,
        string_: builtins.str | None = ...,
        int64_: builtins.int | None = ...,
        float_: builtins.float | None = ...,
        bool_: builtins.bool | None = ...,
        enum_: global___Enum.ValueType | None = ...,
        int64s: collections.abc.Iterable[builtins.int] | None = ...,
        medium: global___Medium | None = ...,
        small: global___Small | None = ...,
        double_: builtins.float | None = ...,
        with_map: global___WithMap | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["bool_", b"bool_", "double_", b"double_", "enum_", b"enum_", "float_", b"float_", "int64_", b"int64_", "medium", b"medium", "small", b"small", "string_", b"string_", "with_map", b"with_map"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["bool_", b"bool_", "double_", b"double_", "enum_", b"enum_", "float_", b"float_", "int64_", b"int64_", "int64s", b"int64s", "medium", b"medium", "small", b"small", "string_", b"string_", "with_map", b"with_map"]) -> None: ...

global___Large = Large

@typing_extensions.final
class Labeled(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REQUIRED_FIELD_NUMBER: builtins.int
    OPTIONAL_FIELD_NUMBER: builtins.int
    required: builtins.int
    optional: builtins.int
    def __init__(
        self,
        *,
        required: builtins.int | None = ...,
        optional: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["optional", b"optional", "required", b"required"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["optional", b"optional", "required", b"required"]) -> None: ...

global___Labeled = Labeled

@typing_extensions.final
class WithMap(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ValueMessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___Small: ...
        def __init__(
            self,
            *,
            key: builtins.int | None = ...,
            value: global___Small | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    @typing_extensions.final
    class ValueStringEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str | None = ...,
            value: builtins.str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    VALUE_MESSAGE_FIELD_NUMBER: builtins.int
    VALUE_STRING_FIELD_NUMBER: builtins.int
    @property
    def value_message(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___Small]: ...
    @property
    def value_string(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]: ...
    def __init__(
        self,
        *,
        value_message: collections.abc.Mapping[builtins.int, global___Small] | None = ...,
        value_string: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["value_message", b"value_message", "value_string", b"value_string"]) -> None: ...

global___WithMap = WithMap
