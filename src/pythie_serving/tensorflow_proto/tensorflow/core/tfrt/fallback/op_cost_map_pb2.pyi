"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class OpCostMapProto(google.protobuf.message.Message):
    """For serializing and restoring the cost of op, see cost_recorder.h for
    details.
    NEXT_ID: 2
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class OpCostMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.int
        def __init__(
            self,
            *,
            key: builtins.int = ...,
            value: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    OP_COST_MAP_FIELD_NUMBER: builtins.int
    @property
    def op_cost_map(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]:
        """Maps an op_key to a cost measured in microseconds."""
    def __init__(
        self,
        *,
        op_cost_map: collections.abc.Mapping[builtins.int, builtins.int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["op_cost_map", b"op_cost_map"]) -> None: ...

global___OpCostMapProto = OpCostMapProto
