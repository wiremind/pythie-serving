# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/core/kernels/boosted_trees/boosted_trees.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n9tensorflow/core/kernels/boosted_trees/boosted_trees.proto\x12\x18tensorflow.boosted_trees\"\xc6\x02\n\x04Node\x12.\n\x04leaf\x18\x01 \x01(\x0b\x32\x1e.tensorflow.boosted_trees.LeafH\x00\x12\x45\n\x10\x62ucketized_split\x18\x02 \x01(\x0b\x32).tensorflow.boosted_trees.BucketizedSplitH\x00\x12G\n\x11\x63\x61tegorical_split\x18\x03 \x01(\x0b\x32*.tensorflow.boosted_trees.CategoricalSplitH\x00\x12;\n\x0b\x64\x65nse_split\x18\x04 \x01(\x0b\x32$.tensorflow.boosted_trees.DenseSplitH\x00\x12\x39\n\x08metadata\x18\x89\x06 \x01(\x0b\x32&.tensorflow.boosted_trees.NodeMetadataB\x06\n\x04node\"S\n\x0cNodeMetadata\x12\x0c\n\x04gain\x18\x01 \x01(\x02\x12\x35\n\roriginal_leaf\x18\x02 \x01(\x0b\x32\x1e.tensorflow.boosted_trees.Leaf\"\x93\x01\n\x04Leaf\x12\x32\n\x06vector\x18\x01 \x01(\x0b\x32 .tensorflow.boosted_trees.VectorH\x00\x12?\n\rsparse_vector\x18\x02 \x01(\x0b\x32&.tensorflow.boosted_trees.SparseVectorH\x00\x12\x0e\n\x06scalar\x18\x03 \x01(\x02\x42\x06\n\x04leaf\"\x17\n\x06Vector\x12\r\n\x05value\x18\x01 \x03(\x02\",\n\x0cSparseVector\x12\r\n\x05index\x18\x01 \x03(\x05\x12\r\n\x05value\x18\x02 \x03(\x02\"\xb8\x01\n\x0f\x42ucketizedSplit\x12\x12\n\nfeature_id\x18\x01 \x01(\x05\x12\x11\n\tthreshold\x18\x02 \x01(\x05\x12\x14\n\x0c\x64imension_id\x18\x05 \x01(\x05\x12\x45\n\x11\x64\x65\x66\x61ult_direction\x18\x06 \x01(\x0e\x32*.tensorflow.boosted_trees.DefaultDirection\x12\x0f\n\x07left_id\x18\x03 \x01(\x05\x12\x10\n\x08right_id\x18\x04 \x01(\x05\"n\n\x10\x43\x61tegoricalSplit\x12\x12\n\nfeature_id\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x05\x12\x14\n\x0c\x64imension_id\x18\x05 \x01(\x05\x12\x0f\n\x07left_id\x18\x03 \x01(\x05\x12\x10\n\x08right_id\x18\x04 \x01(\x05\"V\n\nDenseSplit\x12\x12\n\nfeature_id\x18\x01 \x01(\x05\x12\x11\n\tthreshold\x18\x02 \x01(\x02\x12\x0f\n\x07left_id\x18\x03 \x01(\x05\x12\x10\n\x08right_id\x18\x04 \x01(\x05\"5\n\x04Tree\x12-\n\x05nodes\x18\x01 \x03(\x0b\x32\x1e.tensorflow.boosted_trees.Node\"\xdc\x01\n\x0cTreeMetadata\x12\x18\n\x10num_layers_grown\x18\x02 \x01(\x05\x12\x14\n\x0cis_finalized\x18\x03 \x01(\x08\x12Z\n\x16post_pruned_nodes_meta\x18\x04 \x03(\x0b\x32:.tensorflow.boosted_trees.TreeMetadata.PostPruneNodeUpdate\x1a@\n\x13PostPruneNodeUpdate\x12\x13\n\x0bnew_node_id\x18\x01 \x01(\x05\x12\x14\n\x0clogit_change\x18\x02 \x03(\x02\"\x88\x01\n\x0fGrowingMetadata\x12\x1b\n\x13num_trees_attempted\x18\x01 \x01(\x03\x12\x1c\n\x14num_layers_attempted\x18\x02 \x01(\x03\x12\x1d\n\x15last_layer_node_start\x18\x03 \x01(\x05\x12\x1b\n\x13last_layer_node_end\x18\x04 \x01(\x05\"\xd7\x01\n\x0cTreeEnsemble\x12-\n\x05trees\x18\x01 \x03(\x0b\x32\x1e.tensorflow.boosted_trees.Tree\x12\x14\n\x0ctree_weights\x18\x02 \x03(\x02\x12=\n\rtree_metadata\x18\x03 \x03(\x0b\x32&.tensorflow.boosted_trees.TreeMetadata\x12\x43\n\x10growing_metadata\x18\x04 \x01(\x0b\x32).tensorflow.boosted_trees.GrowingMetadata\"N\n\x0b\x44\x65\x62ugOutput\x12\x13\n\x0b\x66\x65\x61ture_ids\x18\x01 \x03(\x05\x12\x13\n\x0blogits_path\x18\x02 \x03(\x02\x12\x15\n\rleaf_node_ids\x18\x03 \x03(\x05*m\n\x14SplitTypeWithDefault\x12\x1b\n\x17INEQUALITY_DEFAULT_LEFT\x10\x00\x12\x1c\n\x18INEQUALITY_DEFAULT_RIGHT\x10\x01\x12\x1a\n\x16\x45QUALITY_DEFAULT_RIGHT\x10\x03*7\n\x10\x44\x65\x66\x61ultDirection\x12\x10\n\x0c\x44\x45\x46\x41ULT_LEFT\x10\x00\x12\x11\n\rDEFAULT_RIGHT\x10\x01\x42\x33\n\x18org.tensorflow.frameworkB\x12\x42oostedTreesProtosP\x01\xf8\x01\x01\x62\x06proto3')

_SPLITTYPEWITHDEFAULT = DESCRIPTOR.enum_types_by_name['SplitTypeWithDefault']
SplitTypeWithDefault = enum_type_wrapper.EnumTypeWrapper(_SPLITTYPEWITHDEFAULT)
_DEFAULTDIRECTION = DESCRIPTOR.enum_types_by_name['DefaultDirection']
DefaultDirection = enum_type_wrapper.EnumTypeWrapper(_DEFAULTDIRECTION)
INEQUALITY_DEFAULT_LEFT = 0
INEQUALITY_DEFAULT_RIGHT = 1
EQUALITY_DEFAULT_RIGHT = 3
DEFAULT_LEFT = 0
DEFAULT_RIGHT = 1


_NODE = DESCRIPTOR.message_types_by_name['Node']
_NODEMETADATA = DESCRIPTOR.message_types_by_name['NodeMetadata']
_LEAF = DESCRIPTOR.message_types_by_name['Leaf']
_VECTOR = DESCRIPTOR.message_types_by_name['Vector']
_SPARSEVECTOR = DESCRIPTOR.message_types_by_name['SparseVector']
_BUCKETIZEDSPLIT = DESCRIPTOR.message_types_by_name['BucketizedSplit']
_CATEGORICALSPLIT = DESCRIPTOR.message_types_by_name['CategoricalSplit']
_DENSESPLIT = DESCRIPTOR.message_types_by_name['DenseSplit']
_TREE = DESCRIPTOR.message_types_by_name['Tree']
_TREEMETADATA = DESCRIPTOR.message_types_by_name['TreeMetadata']
_TREEMETADATA_POSTPRUNENODEUPDATE = _TREEMETADATA.nested_types_by_name['PostPruneNodeUpdate']
_GROWINGMETADATA = DESCRIPTOR.message_types_by_name['GrowingMetadata']
_TREEENSEMBLE = DESCRIPTOR.message_types_by_name['TreeEnsemble']
_DEBUGOUTPUT = DESCRIPTOR.message_types_by_name['DebugOutput']
Node = _reflection.GeneratedProtocolMessageType('Node', (_message.Message,), {
  'DESCRIPTOR' : _NODE,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.Node)
  })
_sym_db.RegisterMessage(Node)

NodeMetadata = _reflection.GeneratedProtocolMessageType('NodeMetadata', (_message.Message,), {
  'DESCRIPTOR' : _NODEMETADATA,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.NodeMetadata)
  })
_sym_db.RegisterMessage(NodeMetadata)

Leaf = _reflection.GeneratedProtocolMessageType('Leaf', (_message.Message,), {
  'DESCRIPTOR' : _LEAF,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.Leaf)
  })
_sym_db.RegisterMessage(Leaf)

Vector = _reflection.GeneratedProtocolMessageType('Vector', (_message.Message,), {
  'DESCRIPTOR' : _VECTOR,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.Vector)
  })
_sym_db.RegisterMessage(Vector)

SparseVector = _reflection.GeneratedProtocolMessageType('SparseVector', (_message.Message,), {
  'DESCRIPTOR' : _SPARSEVECTOR,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.SparseVector)
  })
_sym_db.RegisterMessage(SparseVector)

BucketizedSplit = _reflection.GeneratedProtocolMessageType('BucketizedSplit', (_message.Message,), {
  'DESCRIPTOR' : _BUCKETIZEDSPLIT,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.BucketizedSplit)
  })
_sym_db.RegisterMessage(BucketizedSplit)

CategoricalSplit = _reflection.GeneratedProtocolMessageType('CategoricalSplit', (_message.Message,), {
  'DESCRIPTOR' : _CATEGORICALSPLIT,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.CategoricalSplit)
  })
_sym_db.RegisterMessage(CategoricalSplit)

DenseSplit = _reflection.GeneratedProtocolMessageType('DenseSplit', (_message.Message,), {
  'DESCRIPTOR' : _DENSESPLIT,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.DenseSplit)
  })
_sym_db.RegisterMessage(DenseSplit)

Tree = _reflection.GeneratedProtocolMessageType('Tree', (_message.Message,), {
  'DESCRIPTOR' : _TREE,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.Tree)
  })
_sym_db.RegisterMessage(Tree)

TreeMetadata = _reflection.GeneratedProtocolMessageType('TreeMetadata', (_message.Message,), {

  'PostPruneNodeUpdate' : _reflection.GeneratedProtocolMessageType('PostPruneNodeUpdate', (_message.Message,), {
    'DESCRIPTOR' : _TREEMETADATA_POSTPRUNENODEUPDATE,
    '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
    # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.TreeMetadata.PostPruneNodeUpdate)
    })
  ,
  'DESCRIPTOR' : _TREEMETADATA,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.TreeMetadata)
  })
_sym_db.RegisterMessage(TreeMetadata)
_sym_db.RegisterMessage(TreeMetadata.PostPruneNodeUpdate)

GrowingMetadata = _reflection.GeneratedProtocolMessageType('GrowingMetadata', (_message.Message,), {
  'DESCRIPTOR' : _GROWINGMETADATA,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.GrowingMetadata)
  })
_sym_db.RegisterMessage(GrowingMetadata)

TreeEnsemble = _reflection.GeneratedProtocolMessageType('TreeEnsemble', (_message.Message,), {
  'DESCRIPTOR' : _TREEENSEMBLE,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.TreeEnsemble)
  })
_sym_db.RegisterMessage(TreeEnsemble)

DebugOutput = _reflection.GeneratedProtocolMessageType('DebugOutput', (_message.Message,), {
  'DESCRIPTOR' : _DEBUGOUTPUT,
  '__module__' : 'tensorflow.core.kernels.boosted_trees.boosted_trees_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.boosted_trees.DebugOutput)
  })
_sym_db.RegisterMessage(DebugOutput)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  DESCRIPTOR._serialized_options = b'\n\030org.tensorflow.frameworkB\022BoostedTreesProtosP\001\370\001\001'
  _SPLITTYPEWITHDEFAULT._serialized_start=1824
  _SPLITTYPEWITHDEFAULT._serialized_end=1933
  _DEFAULTDIRECTION._serialized_start=1935
  _DEFAULTDIRECTION._serialized_end=1990
  _NODE._serialized_start=88
  _NODE._serialized_end=414
  _NODEMETADATA._serialized_start=416
  _NODEMETADATA._serialized_end=499
  _LEAF._serialized_start=502
  _LEAF._serialized_end=649
  _VECTOR._serialized_start=651
  _VECTOR._serialized_end=674
  _SPARSEVECTOR._serialized_start=676
  _SPARSEVECTOR._serialized_end=720
  _BUCKETIZEDSPLIT._serialized_start=723
  _BUCKETIZEDSPLIT._serialized_end=907
  _CATEGORICALSPLIT._serialized_start=909
  _CATEGORICALSPLIT._serialized_end=1019
  _DENSESPLIT._serialized_start=1021
  _DENSESPLIT._serialized_end=1107
  _TREE._serialized_start=1109
  _TREE._serialized_end=1162
  _TREEMETADATA._serialized_start=1165
  _TREEMETADATA._serialized_end=1385
  _TREEMETADATA_POSTPRUNENODEUPDATE._serialized_start=1321
  _TREEMETADATA_POSTPRUNENODEUPDATE._serialized_end=1385
  _GROWINGMETADATA._serialized_start=1388
  _GROWINGMETADATA._serialized_end=1524
  _TREEENSEMBLE._serialized_start=1527
  _TREEENSEMBLE._serialized_end=1742
  _DEBUGOUTPUT._serialized_start=1744
  _DEBUGOUTPUT._serialized_end=1822
# @@protoc_insertion_point(module_scope)
