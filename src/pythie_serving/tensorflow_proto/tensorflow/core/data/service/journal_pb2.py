# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/core/data/service/journal.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from pythie_serving.tensorflow_proto.tensorflow.core.data.service import common_pb2 as tensorflow_dot_core_dot_data_dot_service_dot_common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n*tensorflow/core/data/service/journal.proto\x12\x0ftensorflow.data\x1a)tensorflow/core/data/service/common.proto\"\xa5\x06\n\x06Update\x12\x42\n\x10register_dataset\x18\x01 \x01(\x0b\x32&.tensorflow.data.RegisterDatasetUpdateH\x00\x12@\n\x0fregister_worker\x18\x05 \x01(\x0b\x32%.tensorflow.data.RegisterWorkerUpdateH\x00\x12\x36\n\ncreate_job\x18\x02 \x01(\x0b\x32 .tensorflow.data.CreateJobUpdateH\x00\x12<\n\rproduce_split\x18\x08 \x01(\x0b\x32#.tensorflow.data.ProduceSplitUpdateH\x00\x12\x45\n\x12\x61\x63quire_job_client\x18\x06 \x01(\x0b\x32\'.tensorflow.data.AcquireJobClientUpdateH\x00\x12\x45\n\x12release_job_client\x18\x07 \x01(\x0b\x32\'.tensorflow.data.ReleaseJobClientUpdateH\x00\x12G\n\x13garbage_collect_job\x18\x0c \x01(\x0b\x32(.tensorflow.data.GarbageCollectJobUpdateH\x00\x12\x38\n\x0bremove_task\x18\x0b \x01(\x0b\x32!.tensorflow.data.RemoveTaskUpdateH\x00\x12G\n\x13\x63reate_pending_task\x18\t \x01(\x0b\x32(.tensorflow.data.CreatePendingTaskUpdateH\x00\x12\x42\n\x10\x63lient_heartbeat\x18\n \x01(\x0b\x32&.tensorflow.data.ClientHeartbeatUpdateH\x00\x12\x38\n\x0b\x63reate_task\x18\x03 \x01(\x0b\x32!.tensorflow.data.CreateTaskUpdateH\x00\x12\x38\n\x0b\x66inish_task\x18\x04 \x01(\x0b\x32!.tensorflow.data.FinishTaskUpdateH\x00\x42\r\n\x0bupdate_type\"@\n\x15RegisterDatasetUpdate\x12\x12\n\ndataset_id\x18\x01 \x01(\x03\x12\x13\n\x0b\x66ingerprint\x18\x02 \x01(\x04\"H\n\x14RegisterWorkerUpdate\x12\x16\n\x0eworker_address\x18\x01 \x01(\t\x12\x18\n\x10transfer_address\x18\x02 \x01(\t\"-\n\x0eNamedJobKeyDef\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05index\x18\x02 \x01(\x03\"\x86\x02\n\x0f\x43reateJobUpdate\x12\x0e\n\x06job_id\x18\x01 \x01(\x03\x12\x12\n\ndataset_id\x18\x02 \x01(\x03\x12;\n\x0fprocessing_mode\x18\x03 \x01(\x0e\x32\".tensorflow.data.ProcessingModeDef\x12\x1b\n\x13num_split_providers\x18\x08 \x01(\x03\x12\x36\n\rnamed_job_key\x18\x04 \x01(\x0b\x32\x1f.tensorflow.data.NamedJobKeyDef\x12\x17\n\rnum_consumers\x18\x07 \x01(\x03H\x00\x42\x18\n\x16optional_num_consumersJ\x04\x08\x05\x10\x06J\x04\x08\x06\x10\x07\"h\n\x12ProduceSplitUpdate\x12\x0e\n\x06job_id\x18\x01 \x01(\x03\x12\x12\n\nrepetition\x18\x02 \x01(\x03\x12\x1c\n\x14split_provider_index\x18\x04 \x01(\x03\x12\x10\n\x08\x66inished\x18\x03 \x01(\x08\"?\n\x16\x41\x63quireJobClientUpdate\x12\x0e\n\x06job_id\x18\x01 \x01(\x03\x12\x15\n\rjob_client_id\x18\x02 \x01(\x03\"D\n\x16ReleaseJobClientUpdate\x12\x15\n\rjob_client_id\x18\x01 \x01(\x03\x12\x13\n\x0btime_micros\x18\x02 \x01(\x03\")\n\x17GarbageCollectJobUpdate\x12\x0e\n\x06job_id\x18\x01 \x01(\x03\"#\n\x10RemoveTaskUpdate\x12\x0f\n\x07task_id\x18\x01 \x01(\x03\"(\n\x0cTaskRejected\x12\x18\n\x10new_target_round\x18\x01 \x01(\x03\"{\n\x15\x43lientHeartbeatUpdate\x12\x15\n\rjob_client_id\x18\x01 \x01(\x03\x12\x15\n\rtask_accepted\x18\x02 \x01(\x08\x12\x34\n\rtask_rejected\x18\x03 \x01(\x0b\x32\x1d.tensorflow.data.TaskRejected\"\x84\x01\n\x17\x43reatePendingTaskUpdate\x12\x0f\n\x07task_id\x18\x01 \x01(\x03\x12\x0e\n\x06job_id\x18\x02 \x01(\x03\x12\x16\n\x0eworker_address\x18\x03 \x01(\t\x12\x18\n\x10transfer_address\x18\x04 \x01(\t\x12\x16\n\x0estarting_round\x18\x05 \x01(\x03\"q\n\x10\x43reateTaskUpdate\x12\x0f\n\x07task_id\x18\x01 \x01(\x03\x12\x0e\n\x06job_id\x18\x02 \x01(\x03\x12\x16\n\x0eworker_address\x18\x04 \x01(\t\x12\x18\n\x10transfer_address\x18\x06 \x01(\tJ\x04\x08\x03\x10\x04J\x04\x08\x05\x10\x06\"#\n\x10\x46inishTaskUpdate\x12\x0f\n\x07task_id\x18\x01 \x01(\x03\x62\x06proto3')



_UPDATE = DESCRIPTOR.message_types_by_name['Update']
_REGISTERDATASETUPDATE = DESCRIPTOR.message_types_by_name['RegisterDatasetUpdate']
_REGISTERWORKERUPDATE = DESCRIPTOR.message_types_by_name['RegisterWorkerUpdate']
_NAMEDJOBKEYDEF = DESCRIPTOR.message_types_by_name['NamedJobKeyDef']
_CREATEJOBUPDATE = DESCRIPTOR.message_types_by_name['CreateJobUpdate']
_PRODUCESPLITUPDATE = DESCRIPTOR.message_types_by_name['ProduceSplitUpdate']
_ACQUIREJOBCLIENTUPDATE = DESCRIPTOR.message_types_by_name['AcquireJobClientUpdate']
_RELEASEJOBCLIENTUPDATE = DESCRIPTOR.message_types_by_name['ReleaseJobClientUpdate']
_GARBAGECOLLECTJOBUPDATE = DESCRIPTOR.message_types_by_name['GarbageCollectJobUpdate']
_REMOVETASKUPDATE = DESCRIPTOR.message_types_by_name['RemoveTaskUpdate']
_TASKREJECTED = DESCRIPTOR.message_types_by_name['TaskRejected']
_CLIENTHEARTBEATUPDATE = DESCRIPTOR.message_types_by_name['ClientHeartbeatUpdate']
_CREATEPENDINGTASKUPDATE = DESCRIPTOR.message_types_by_name['CreatePendingTaskUpdate']
_CREATETASKUPDATE = DESCRIPTOR.message_types_by_name['CreateTaskUpdate']
_FINISHTASKUPDATE = DESCRIPTOR.message_types_by_name['FinishTaskUpdate']
Update = _reflection.GeneratedProtocolMessageType('Update', (_message.Message,), {
  'DESCRIPTOR' : _UPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.Update)
  })
_sym_db.RegisterMessage(Update)

RegisterDatasetUpdate = _reflection.GeneratedProtocolMessageType('RegisterDatasetUpdate', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERDATASETUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.RegisterDatasetUpdate)
  })
_sym_db.RegisterMessage(RegisterDatasetUpdate)

RegisterWorkerUpdate = _reflection.GeneratedProtocolMessageType('RegisterWorkerUpdate', (_message.Message,), {
  'DESCRIPTOR' : _REGISTERWORKERUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.RegisterWorkerUpdate)
  })
_sym_db.RegisterMessage(RegisterWorkerUpdate)

NamedJobKeyDef = _reflection.GeneratedProtocolMessageType('NamedJobKeyDef', (_message.Message,), {
  'DESCRIPTOR' : _NAMEDJOBKEYDEF,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.NamedJobKeyDef)
  })
_sym_db.RegisterMessage(NamedJobKeyDef)

CreateJobUpdate = _reflection.GeneratedProtocolMessageType('CreateJobUpdate', (_message.Message,), {
  'DESCRIPTOR' : _CREATEJOBUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.CreateJobUpdate)
  })
_sym_db.RegisterMessage(CreateJobUpdate)

ProduceSplitUpdate = _reflection.GeneratedProtocolMessageType('ProduceSplitUpdate', (_message.Message,), {
  'DESCRIPTOR' : _PRODUCESPLITUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.ProduceSplitUpdate)
  })
_sym_db.RegisterMessage(ProduceSplitUpdate)

AcquireJobClientUpdate = _reflection.GeneratedProtocolMessageType('AcquireJobClientUpdate', (_message.Message,), {
  'DESCRIPTOR' : _ACQUIREJOBCLIENTUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.AcquireJobClientUpdate)
  })
_sym_db.RegisterMessage(AcquireJobClientUpdate)

ReleaseJobClientUpdate = _reflection.GeneratedProtocolMessageType('ReleaseJobClientUpdate', (_message.Message,), {
  'DESCRIPTOR' : _RELEASEJOBCLIENTUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.ReleaseJobClientUpdate)
  })
_sym_db.RegisterMessage(ReleaseJobClientUpdate)

GarbageCollectJobUpdate = _reflection.GeneratedProtocolMessageType('GarbageCollectJobUpdate', (_message.Message,), {
  'DESCRIPTOR' : _GARBAGECOLLECTJOBUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.GarbageCollectJobUpdate)
  })
_sym_db.RegisterMessage(GarbageCollectJobUpdate)

RemoveTaskUpdate = _reflection.GeneratedProtocolMessageType('RemoveTaskUpdate', (_message.Message,), {
  'DESCRIPTOR' : _REMOVETASKUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.RemoveTaskUpdate)
  })
_sym_db.RegisterMessage(RemoveTaskUpdate)

TaskRejected = _reflection.GeneratedProtocolMessageType('TaskRejected', (_message.Message,), {
  'DESCRIPTOR' : _TASKREJECTED,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.TaskRejected)
  })
_sym_db.RegisterMessage(TaskRejected)

ClientHeartbeatUpdate = _reflection.GeneratedProtocolMessageType('ClientHeartbeatUpdate', (_message.Message,), {
  'DESCRIPTOR' : _CLIENTHEARTBEATUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.ClientHeartbeatUpdate)
  })
_sym_db.RegisterMessage(ClientHeartbeatUpdate)

CreatePendingTaskUpdate = _reflection.GeneratedProtocolMessageType('CreatePendingTaskUpdate', (_message.Message,), {
  'DESCRIPTOR' : _CREATEPENDINGTASKUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.CreatePendingTaskUpdate)
  })
_sym_db.RegisterMessage(CreatePendingTaskUpdate)

CreateTaskUpdate = _reflection.GeneratedProtocolMessageType('CreateTaskUpdate', (_message.Message,), {
  'DESCRIPTOR' : _CREATETASKUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.CreateTaskUpdate)
  })
_sym_db.RegisterMessage(CreateTaskUpdate)

FinishTaskUpdate = _reflection.GeneratedProtocolMessageType('FinishTaskUpdate', (_message.Message,), {
  'DESCRIPTOR' : _FINISHTASKUPDATE,
  '__module__' : 'tensorflow.core.data.service.journal_pb2'
  # @@protoc_insertion_point(class_scope:tensorflow.data.FinishTaskUpdate)
  })
_sym_db.RegisterMessage(FinishTaskUpdate)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _UPDATE._serialized_start=107
  _UPDATE._serialized_end=912
  _REGISTERDATASETUPDATE._serialized_start=914
  _REGISTERDATASETUPDATE._serialized_end=978
  _REGISTERWORKERUPDATE._serialized_start=980
  _REGISTERWORKERUPDATE._serialized_end=1052
  _NAMEDJOBKEYDEF._serialized_start=1054
  _NAMEDJOBKEYDEF._serialized_end=1099
  _CREATEJOBUPDATE._serialized_start=1102
  _CREATEJOBUPDATE._serialized_end=1364
  _PRODUCESPLITUPDATE._serialized_start=1366
  _PRODUCESPLITUPDATE._serialized_end=1470
  _ACQUIREJOBCLIENTUPDATE._serialized_start=1472
  _ACQUIREJOBCLIENTUPDATE._serialized_end=1535
  _RELEASEJOBCLIENTUPDATE._serialized_start=1537
  _RELEASEJOBCLIENTUPDATE._serialized_end=1605
  _GARBAGECOLLECTJOBUPDATE._serialized_start=1607
  _GARBAGECOLLECTJOBUPDATE._serialized_end=1648
  _REMOVETASKUPDATE._serialized_start=1650
  _REMOVETASKUPDATE._serialized_end=1685
  _TASKREJECTED._serialized_start=1687
  _TASKREJECTED._serialized_end=1727
  _CLIENTHEARTBEATUPDATE._serialized_start=1729
  _CLIENTHEARTBEATUPDATE._serialized_end=1852
  _CREATEPENDINGTASKUPDATE._serialized_start=1855
  _CREATEPENDINGTASKUPDATE._serialized_end=1987
  _CREATETASKUPDATE._serialized_start=1989
  _CREATETASKUPDATE._serialized_end=2102
  _FINISHTASKUPDATE._serialized_start=2104
  _FINISHTASKUPDATE._serialized_end=2139
# @@protoc_insertion_point(module_scope)
