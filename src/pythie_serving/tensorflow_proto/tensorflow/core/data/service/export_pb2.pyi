"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
import tensorflow.core.data.service.common_pb2
import tensorflow.core.protobuf.data_service_pb2
import tensorflow.core.protobuf.service_config_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class DispatcherStateExport(google.protobuf.message.Message):
    """State of the dispatcher server, exported to improve debuggability.
    Next tag: 4
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Iteration(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        DATASET_ID_FIELD_NUMBER: builtins.int
        ITERATION_ID_FIELD_NUMBER: builtins.int
        ITERATION_KEY_FIELD_NUMBER: builtins.int
        PROCESSING_MODE_FIELD_NUMBER: builtins.int
        NUM_CONSUMERS_FIELD_NUMBER: builtins.int
        NUM_CLIENTS_FIELD_NUMBER: builtins.int
        FINISHED_FIELD_NUMBER: builtins.int
        GARBAGE_COLLECTED_FIELD_NUMBER: builtins.int
        dataset_id: builtins.str
        iteration_id: builtins.int
        @property
        def iteration_key(self) -> tensorflow.core.data.service.common_pb2.IterationKeyDef: ...
        @property
        def processing_mode(self) -> tensorflow.core.protobuf.data_service_pb2.ProcessingModeDef: ...
        num_consumers: builtins.int
        num_clients: builtins.int
        finished: builtins.bool
        garbage_collected: builtins.bool
        def __init__(
            self,
            *,
            dataset_id: builtins.str = ...,
            iteration_id: builtins.int = ...,
            iteration_key: tensorflow.core.data.service.common_pb2.IterationKeyDef | None = ...,
            processing_mode: tensorflow.core.protobuf.data_service_pb2.ProcessingModeDef | None = ...,
            num_consumers: builtins.int = ...,
            num_clients: builtins.int = ...,
            finished: builtins.bool = ...,
            garbage_collected: builtins.bool = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["iteration_key", b"iteration_key", "processing_mode", b"processing_mode"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["dataset_id", b"dataset_id", "finished", b"finished", "garbage_collected", b"garbage_collected", "iteration_id", b"iteration_id", "iteration_key", b"iteration_key", "num_clients", b"num_clients", "num_consumers", b"num_consumers", "processing_mode", b"processing_mode"]) -> None: ...

    DISPATCHER_CONFIG_FIELD_NUMBER: builtins.int
    WORKER_ADDRESSES_FIELD_NUMBER: builtins.int
    ITERATIONS_FIELD_NUMBER: builtins.int
    @property
    def dispatcher_config(self) -> tensorflow.core.protobuf.service_config_pb2.DispatcherConfig: ...
    @property
    def worker_addresses(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]: ...
    @property
    def iterations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DispatcherStateExport.Iteration]: ...
    def __init__(
        self,
        *,
        dispatcher_config: tensorflow.core.protobuf.service_config_pb2.DispatcherConfig | None = ...,
        worker_addresses: collections.abc.Iterable[builtins.str] | None = ...,
        iterations: collections.abc.Iterable[global___DispatcherStateExport.Iteration] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dispatcher_config", b"dispatcher_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dispatcher_config", b"dispatcher_config", "iterations", b"iterations", "worker_addresses", b"worker_addresses"]) -> None: ...

global___DispatcherStateExport = DispatcherStateExport

@typing_extensions.final
class WorkerStateExport(google.protobuf.message.Message):
    """State of the worker server, exported to improve debuggability.
    Next tag: 5
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    WORKER_CONFIG_FIELD_NUMBER: builtins.int
    TASKS_FIELD_NUMBER: builtins.int
    FINISHED_TASK_IDS_FIELD_NUMBER: builtins.int
    DELETED_TASK_IDS_FIELD_NUMBER: builtins.int
    @property
    def worker_config(self) -> tensorflow.core.protobuf.service_config_pb2.WorkerConfig: ...
    @property
    def tasks(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.data.service.common_pb2.TaskDef]: ...
    @property
    def finished_task_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def deleted_task_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        worker_config: tensorflow.core.protobuf.service_config_pb2.WorkerConfig | None = ...,
        tasks: collections.abc.Iterable[tensorflow.core.data.service.common_pb2.TaskDef] | None = ...,
        finished_task_ids: collections.abc.Iterable[builtins.int] | None = ...,
        deleted_task_ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["worker_config", b"worker_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["deleted_task_ids", b"deleted_task_ids", "finished_task_ids", b"finished_task_ids", "tasks", b"tasks", "worker_config", b"worker_config"]) -> None: ...

global___WorkerStateExport = WorkerStateExport

@typing_extensions.final
class ServerStateExport(google.protobuf.message.Message):
    """State of the tf.data service server, exported to improve debuggability.
    The dispatcher and worker servers will populate the corresponding fields.
    Next tag: 3
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DISPATCHER_STATE_EXPORT_FIELD_NUMBER: builtins.int
    WORKER_STATE_EXPORT_FIELD_NUMBER: builtins.int
    @property
    def dispatcher_state_export(self) -> global___DispatcherStateExport: ...
    @property
    def worker_state_export(self) -> global___WorkerStateExport: ...
    def __init__(
        self,
        *,
        dispatcher_state_export: global___DispatcherStateExport | None = ...,
        worker_state_export: global___WorkerStateExport | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["dispatcher_state_export", b"dispatcher_state_export", "worker_state_export", b"worker_state_export"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["dispatcher_state_export", b"dispatcher_state_export", "worker_state_export", b"worker_state_export"]) -> None: ...

global___ServerStateExport = ServerStateExport
