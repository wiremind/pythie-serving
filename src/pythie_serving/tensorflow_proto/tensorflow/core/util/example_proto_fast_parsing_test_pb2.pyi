"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Protocol message for the fast Example parse unit test."""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
import tensorflow.core.example.feature_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ExampleWithExtras(google.protobuf.message.Message):
    """This message is parallel to Example, but with additional fields to test
    unknown fields handling in example_proto_fast_parsing_test.cc.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    FEATURES_FIELD_NUMBER: builtins.int
    EXTRA1_FIELD_NUMBER: builtins.int
    EXTRA2_FIELD_NUMBER: builtins.int
    EXTRA3_FIELD_NUMBER: builtins.int
    EXTRA4_FIELD_NUMBER: builtins.int
    EXTRA5_FIELD_NUMBER: builtins.int
    EXTRA6_FIELD_NUMBER: builtins.int
    EXTRA7_FIELD_NUMBER: builtins.int
    @property
    def features(self) -> tensorflow.core.example.feature_pb2.Features: ...
    extra1: builtins.str
    extra2: builtins.int
    extra3: builtins.int
    extra4: builtins.int
    extra5: builtins.float
    @property
    def extra6(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]: ...
    @property
    def extra7(self) -> tensorflow.core.example.feature_pb2.Features: ...
    def __init__(
        self,
        *,
        features: tensorflow.core.example.feature_pb2.Features | None = ...,
        extra1: builtins.str = ...,
        extra2: builtins.int = ...,
        extra3: builtins.int = ...,
        extra4: builtins.int = ...,
        extra5: builtins.float = ...,
        extra6: collections.abc.Iterable[builtins.float] | None = ...,
        extra7: tensorflow.core.example.feature_pb2.Features | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["extra7", b"extra7", "features", b"features"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["extra1", b"extra1", "extra2", b"extra2", "extra3", b"extra3", "extra4", b"extra4", "extra5", b"extra5", "extra6", b"extra6", "extra7", b"extra7", "features", b"features"]) -> None: ...

global___ExampleWithExtras = ExampleWithExtras
