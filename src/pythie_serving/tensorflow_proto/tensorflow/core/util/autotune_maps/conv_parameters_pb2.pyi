"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Protocol messages for describing parameters of convolution-related
operations.

For Google-internal use only.
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
import tensorflow.compiler.xla.stream_executor.dnn_pb2
import tensorflow.core.framework.types_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ConvParametersProto(google.protobuf.message.Message):
    """LINT.IfChange

    This is the underlying data structure of class ConvParameters, which are used
    as the keys in cuDNN autotuning maps for retrieving corresponding cuDNN
    algorithms. This is used as a serialization format for saving/loading
    autotuning databases.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class Fusion(google.protobuf.message.Message):
        """This stores the information for fused convolution operations where an
        activation and a side input might follow the convolution.
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        IS_CONTRIB_FIELD_NUMBER: builtins.int
        ACTIVATION_MODE_FIELD_NUMBER: builtins.int
        CONV_SCALE_FIELD_NUMBER: builtins.int
        SIDE_INPUT_SCALE_FIELD_NUMBER: builtins.int
        is_contrib: builtins.bool
        """If true, this proto corresponds to a FusedConvBiasActivation operation
        implemented in the contrib library, otherwise this proto corresponds to
        the FusedConv operation implemented in the core library.
        Compared with FusedConv, FusedConvBiasActivation supports more types of
        activation function (including no activation) as well as the side_input.
        For now they have same type of keys in autotune maps, but the semantics
        of some fields (like padding) are different. So we add this field to
        distinguish them.
        TODO(b/177365158) Remove this field once these two operations are merged.
        """
        activation_mode: tensorflow.compiler.xla.stream_executor.dnn_pb2.ActivationMode.ValueType
        conv_scale: builtins.float
        side_input_scale: builtins.float
        def __init__(
            self,
            *,
            is_contrib: builtins.bool = ...,
            activation_mode: tensorflow.compiler.xla.stream_executor.dnn_pb2.ActivationMode.ValueType = ...,
            conv_scale: builtins.float = ...,
            side_input_scale: builtins.float = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["activation_mode", b"activation_mode", "conv_scale", b"conv_scale", "is_contrib", b"is_contrib", "side_input_scale", b"side_input_scale"]) -> None: ...

    BATCH_FIELD_NUMBER: builtins.int
    IN_DEPTHS_FIELD_NUMBER: builtins.int
    OUT_DEPTHS_FIELD_NUMBER: builtins.int
    IN_FIELD_NUMBER: builtins.int
    DATA_FORMAT_FIELD_NUMBER: builtins.int
    FILTER_FIELD_NUMBER: builtins.int
    DILATION_FIELD_NUMBER: builtins.int
    STRIDE_FIELD_NUMBER: builtins.int
    PADDING_FIELD_NUMBER: builtins.int
    DTYPE_FIELD_NUMBER: builtins.int
    GROUP_COUNT_FIELD_NUMBER: builtins.int
    DEVICE_IDENTIFIER_FIELD_NUMBER: builtins.int
    FUSION_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    batch: builtins.int
    in_depths: builtins.int
    out_depths: builtins.int
    data_format: builtins.int
    """data_format corresponds to type TensorFormat in
    third_party/tensorflow/core/util/tensor_format.h.
    """
    @property
    def filter(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def dilation(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def stride(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def padding(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    dtype: tensorflow.core.framework.types_pb2.DataType.ValueType
    group_count: builtins.int
    device_identifier: builtins.str
    """A string uniquely identifying a particular GPU model, e.g. V100 vs RTX
    2080.
    """
    @property
    def fusion(self) -> global___ConvParametersProto.Fusion: ...
    version: builtins.int
    """The version number of ConvParameters class. Offline autotune results
    whose version number is different from the runtime's version number
    (defined in ConvParameters::kVersion) will be rejected and ignored by
    LoadSerializedAutotuneMaps. This ensures that we will not load out-of-date
    autotune results.
    """
    def __init__(
        self,
        *,
        batch: builtins.int = ...,
        in_depths: builtins.int = ...,
        out_depths: builtins.int = ...,
        data_format: builtins.int = ...,
        filter: collections.abc.Iterable[builtins.int] | None = ...,
        dilation: collections.abc.Iterable[builtins.int] | None = ...,
        stride: collections.abc.Iterable[builtins.int] | None = ...,
        padding: collections.abc.Iterable[builtins.int] | None = ...,
        dtype: tensorflow.core.framework.types_pb2.DataType.ValueType = ...,
        group_count: builtins.int = ...,
        device_identifier: builtins.str = ...,
        fusion: global___ConvParametersProto.Fusion | None = ...,
        version: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["fusion", b"fusion"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["batch", b"batch", "data_format", b"data_format", "device_identifier", b"device_identifier", "dilation", b"dilation", "dtype", b"dtype", "filter", b"filter", "fusion", b"fusion", "group_count", b"group_count", "in", b"in", "in_depths", b"in_depths", "out_depths", b"out_depths", "padding", b"padding", "stride", b"stride", "version", b"version"]) -> None: ...

global___ConvParametersProto = ConvParametersProto

@typing_extensions.final
class MatmulParametersProto(google.protobuf.message.Message):
    """LINT.IfChange"""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    AB_DTYPE_FIELD_NUMBER: builtins.int
    C_DTYPE_FIELD_NUMBER: builtins.int
    TRANS_A_FIELD_NUMBER: builtins.int
    TRANS_B_FIELD_NUMBER: builtins.int
    M_FIELD_NUMBER: builtins.int
    N_FIELD_NUMBER: builtins.int
    K_FIELD_NUMBER: builtins.int
    LDA_FIELD_NUMBER: builtins.int
    LDB_FIELD_NUMBER: builtins.int
    LDC_FIELD_NUMBER: builtins.int
    ACTIVATION_MODE_FIELD_NUMBER: builtins.int
    DEVICE_IDENTIFIER_FIELD_NUMBER: builtins.int
    VERSION_FIELD_NUMBER: builtins.int
    ab_dtype: tensorflow.core.framework.types_pb2.DataType.ValueType
    c_dtype: tensorflow.core.framework.types_pb2.DataType.ValueType
    trans_a: builtins.bool
    trans_b: builtins.bool
    m: builtins.int
    n: builtins.int
    k: builtins.int
    lda: builtins.int
    ldb: builtins.int
    ldc: builtins.int
    activation_mode: tensorflow.compiler.xla.stream_executor.dnn_pb2.ActivationMode.ValueType
    device_identifier: builtins.str
    version: builtins.int
    def __init__(
        self,
        *,
        ab_dtype: tensorflow.core.framework.types_pb2.DataType.ValueType = ...,
        c_dtype: tensorflow.core.framework.types_pb2.DataType.ValueType = ...,
        trans_a: builtins.bool = ...,
        trans_b: builtins.bool = ...,
        m: builtins.int = ...,
        n: builtins.int = ...,
        k: builtins.int = ...,
        lda: builtins.int = ...,
        ldb: builtins.int = ...,
        ldc: builtins.int = ...,
        activation_mode: tensorflow.compiler.xla.stream_executor.dnn_pb2.ActivationMode.ValueType = ...,
        device_identifier: builtins.str = ...,
        version: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["ab_dtype", b"ab_dtype", "activation_mode", b"activation_mode", "c_dtype", b"c_dtype", "device_identifier", b"device_identifier", "k", b"k", "lda", b"lda", "ldb", b"ldb", "ldc", b"ldc", "m", b"m", "n", b"n", "trans_a", b"trans_a", "trans_b", b"trans_b", "version", b"version"]) -> None: ...

global___MatmulParametersProto = MatmulParametersProto
