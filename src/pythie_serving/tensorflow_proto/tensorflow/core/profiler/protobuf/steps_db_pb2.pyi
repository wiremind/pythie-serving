"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import tensorflow.core.profiler.protobuf.op_metrics_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class GenericStepBreakdown(google.protobuf.message.Message):
    """Breakdown of step-time on generic hardware. Note that these components are
    mutually exclusive so that adding them together is equal to the step time. If
    an execution time interval has multiple types of event happening, we need to
    pick one of the event type to attribute the time interval to.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class TypePsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.int
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TYPE_PS_FIELD_NUMBER: builtins.int
    @property
    def type_ps(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]:
        """Map event type to the accumulated duration in
        picoseconds of that type.
        """
        pass
    def __init__(self,
        *,
        type_ps: typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["type_ps",b"type_ps"]) -> None: ...
global___GenericStepBreakdown = GenericStepBreakdown

class DeviceMemoryTransfer(google.protobuf.message.Message):
    """Information about memory transfer to/from device memory."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    OCCURRENCE_FIELD_NUMBER: builtins.int
    TIME_US_FIELD_NUMBER: builtins.int
    BYTES_TRANSFERRED_FIELD_NUMBER: builtins.int
    occurrence: builtins.int
    time_us: builtins.float
    bytes_transferred: builtins.int
    def __init__(self,
        *,
        occurrence: builtins.int = ...,
        time_us: builtins.float = ...,
        bytes_transferred: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bytes_transferred",b"bytes_transferred","occurrence",b"occurrence","time_us",b"time_us"]) -> None: ...
global___DeviceMemoryTransfer = DeviceMemoryTransfer

class StepInfoResult(google.protobuf.message.Message):
    """Next ID: 6
    Result proto for StepInfo.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STEP_NUM_FIELD_NUMBER: builtins.int
    STEP_NAME_FIELD_NUMBER: builtins.int
    DURATION_PS_FIELD_NUMBER: builtins.int
    BEGIN_PS_FIELD_NUMBER: builtins.int
    STEP_BREAKDOWN_FIELD_NUMBER: builtins.int
    step_num: builtins.int
    """The step number."""

    step_name: typing.Text
    """The step name."""

    duration_ps: builtins.int
    """The step duration in picoseconds."""

    begin_ps: builtins.int
    """The start time of this step in picoseconds."""

    @property
    def step_breakdown(self) -> google.protobuf.any_pb2.Any:
        """Breakdown of the step-time. Can be unpacked into a GenericStepBreakdown."""
        pass
    def __init__(self,
        *,
        step_num: builtins.int = ...,
        step_name: typing.Text = ...,
        duration_ps: builtins.int = ...,
        begin_ps: builtins.int = ...,
        step_breakdown: typing.Optional[google.protobuf.any_pb2.Any] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["step_breakdown",b"step_breakdown"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["begin_ps",b"begin_ps","duration_ps",b"duration_ps","step_breakdown",b"step_breakdown","step_name",b"step_name","step_num",b"step_num"]) -> None: ...
global___StepInfoResult = StepInfoResult

class FlowEventInfo(google.protobuf.message.Message):
    """Result proto for metrics on flow events."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FLOW_ID_FIELD_NUMBER: builtins.int
    CHANNEL_ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    CATEGORY_FIELD_NUMBER: builtins.int
    START_TIME_PS_FIELD_NUMBER: builtins.int
    END_TIME_PS_FIELD_NUMBER: builtins.int
    BYTE_SIZE_FIELD_NUMBER: builtins.int
    REPLICA_ID_FIELD_NUMBER: builtins.int
    flow_id: builtins.int
    """Unique id for each send and recv pair."""

    channel_id: builtins.int
    """Channel id generated by the XLA compiler, it is statically unique within an
    HloModule.
    """

    name: typing.Text
    """The name of the hlo op."""

    category: typing.Text
    """Category of the hlo op."""

    start_time_ps: builtins.int
    """The start time in picoseconds of the op event."""

    end_time_ps: builtins.int
    """The end time in picoseconds of the op event."""

    byte_size: builtins.int
    """The size of the op in bytes."""

    replica_id: builtins.int
    """The replica id of the program running the flow event."""

    def __init__(self,
        *,
        flow_id: builtins.int = ...,
        channel_id: builtins.int = ...,
        name: typing.Text = ...,
        category: typing.Text = ...,
        start_time_ps: builtins.int = ...,
        end_time_ps: builtins.int = ...,
        byte_size: builtins.int = ...,
        replica_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["byte_size",b"byte_size","category",b"category","channel_id",b"channel_id","end_time_ps",b"end_time_ps","flow_id",b"flow_id","name",b"name","replica_id",b"replica_id","start_time_ps",b"start_time_ps"]) -> None: ...
global___FlowEventInfo = FlowEventInfo

class FlowDbResult(google.protobuf.message.Message):
    """Result database for core to core flow events."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FLOW_INFO_FIELD_NUMBER: builtins.int
    @property
    def flow_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___FlowEventInfo]: ...
    def __init__(self,
        *,
        flow_info: typing.Optional[typing.Iterable[global___FlowEventInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["flow_info",b"flow_info"]) -> None: ...
global___FlowDbResult = FlowDbResult

class AllReduceInfo(google.protobuf.message.Message):
    """Result proto for all -educe ops."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    ALL_REDUCE_ID_FIELD_NUMBER: builtins.int
    START_TIME_PS_FIELD_NUMBER: builtins.int
    END_TIME_PS_FIELD_NUMBER: builtins.int
    BYTE_SIZE_FIELD_NUMBER: builtins.int
    id: builtins.int
    """Unique id for all-reduce ops."""

    name: typing.Text
    """The name of the hlo op."""

    all_reduce_id: builtins.int
    """For all-reduce nodes from different modules, if they have the same
    all_reduce_id, they will be 'Allreduce'd'. If empty, AllReduce will not be
    applied across modules.
    """

    start_time_ps: builtins.int
    """The start time in picoseconds of the op event."""

    end_time_ps: builtins.int
    """The end time in picoseconds of the op event."""

    byte_size: builtins.int
    """The size of the op in bytes."""

    def __init__(self,
        *,
        id: builtins.int = ...,
        name: typing.Text = ...,
        all_reduce_id: builtins.int = ...,
        start_time_ps: builtins.int = ...,
        end_time_ps: builtins.int = ...,
        byte_size: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["all_reduce_id",b"all_reduce_id","byte_size",b"byte_size","end_time_ps",b"end_time_ps","id",b"id","name",b"name","start_time_ps",b"start_time_ps"]) -> None: ...
global___AllReduceInfo = AllReduceInfo

class AllReduceDbResult(google.protobuf.message.Message):
    """Result database for all-reduce ops."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    ALL_REDUCE_INFO_FIELD_NUMBER: builtins.int
    @property
    def all_reduce_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AllReduceInfo]: ...
    def __init__(self,
        *,
        all_reduce_info: typing.Optional[typing.Iterable[global___AllReduceInfo]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["all_reduce_info",b"all_reduce_info"]) -> None: ...
global___AllReduceDbResult = AllReduceDbResult

class PerCoreStepInfo(google.protobuf.message.Message):
    """Result proto for information in a step across all cores."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class StepInfoPerCoreEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___StepInfoResult: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___StepInfoResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class FlowDbPerCoreEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___FlowDbResult: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___FlowDbResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class CoreIdToReplicaIdMapEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.int
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class AllReduceDbPerCoreEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___AllReduceDbResult: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___AllReduceDbResult] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    STEP_NUM_FIELD_NUMBER: builtins.int
    STEP_INFO_PER_CORE_FIELD_NUMBER: builtins.int
    HLO_METRICS_DB_FIELD_NUMBER: builtins.int
    FLOW_DB_PER_CORE_FIELD_NUMBER: builtins.int
    CORE_ID_TO_REPLICA_ID_MAP_FIELD_NUMBER: builtins.int
    ALL_REDUCE_DB_PER_CORE_FIELD_NUMBER: builtins.int
    DEVICE_MEMORY_TRANSFERS_FIELD_NUMBER: builtins.int
    step_num: builtins.int
    """The step number."""

    @property
    def step_info_per_core(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___StepInfoResult]:
        """A map from core_id to StepInfo."""
        pass
    @property
    def hlo_metrics_db(self) -> tensorflow.core.profiler.protobuf.op_metrics_pb2.OpMetricsDb:
        """The result for the per-step HLO-metric database."""
        pass
    @property
    def flow_db_per_core(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___FlowDbResult]:
        """The result for send and recv flows."""
        pass
    @property
    def core_id_to_replica_id_map(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]:
        """A map from core ID to program replica id. Replica id map could change
        during a profile session, but should stay stable within a step.
        """
        pass
    @property
    def all_reduce_db_per_core(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___AllReduceDbResult]:
        """A map from core_id to all-reduce ops."""
        pass
    @property
    def device_memory_transfers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___DeviceMemoryTransfer]:
        """Information about deivce memory transfers, categoried by source and
        destination. Ordered by following categories:
        1. HostToDevice
        2. DeviceToHost
        3. DeviceToDevice
        """
        pass
    def __init__(self,
        *,
        step_num: builtins.int = ...,
        step_info_per_core: typing.Optional[typing.Mapping[builtins.int, global___StepInfoResult]] = ...,
        hlo_metrics_db: typing.Optional[tensorflow.core.profiler.protobuf.op_metrics_pb2.OpMetricsDb] = ...,
        flow_db_per_core: typing.Optional[typing.Mapping[builtins.int, global___FlowDbResult]] = ...,
        core_id_to_replica_id_map: typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        all_reduce_db_per_core: typing.Optional[typing.Mapping[builtins.int, global___AllReduceDbResult]] = ...,
        device_memory_transfers: typing.Optional[typing.Iterable[global___DeviceMemoryTransfer]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["hlo_metrics_db",b"hlo_metrics_db"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["all_reduce_db_per_core",b"all_reduce_db_per_core","core_id_to_replica_id_map",b"core_id_to_replica_id_map","device_memory_transfers",b"device_memory_transfers","flow_db_per_core",b"flow_db_per_core","hlo_metrics_db",b"hlo_metrics_db","step_info_per_core",b"step_info_per_core","step_num",b"step_num"]) -> None: ...
global___PerCoreStepInfo = PerCoreStepInfo

class StepDatabaseResult(google.protobuf.message.Message):
    """Result proto for a StepDatabase."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    STEP_SEQUENCE_FIELD_NUMBER: builtins.int
    USE_INCOMPLETE_STEP_FIELD_NUMBER: builtins.int
    NUM_STEPS_DROPPED_FIELD_NUMBER: builtins.int
    EMPTY_INTERSECT_FIELD_NUMBER: builtins.int
    @property
    def step_sequence(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___PerCoreStepInfo]:
        """A sequence of PerCoreStepInfo."""
        pass
    use_incomplete_step: builtins.bool
    """Whether the step db uses incomplete step information.
    This flag is set to true when:
    1) no step marker or annotation present.
    2) profiling duration is too short to cover a full step.
    If this flag is false, we will group and breakdown the
    profile by complete steps only and ignore incomplete steps.
    If this flag is true, we will simply aggregate and breakdown over the total
    profile as a single step.
    """

    num_steps_dropped: builtins.int
    """Number of steps dropped during post processing."""

    empty_intersect: builtins.bool
    """If the step_sequence is empty because:
      * there is no step profiled on any host, then empty_intersect is false.
      * there are steps profiled on some host, but the intersection of steps
        over all hosts is empty, then empty_intersect is true.
    """

    def __init__(self,
        *,
        step_sequence: typing.Optional[typing.Iterable[global___PerCoreStepInfo]] = ...,
        use_incomplete_step: builtins.bool = ...,
        num_steps_dropped: builtins.int = ...,
        empty_intersect: builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["empty_intersect",b"empty_intersect","num_steps_dropped",b"num_steps_dropped","step_sequence",b"step_sequence","use_incomplete_step",b"use_incomplete_step"]) -> None: ...
global___StepDatabaseResult = StepDatabaseResult
