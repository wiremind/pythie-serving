"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import tensorflow.core.profiler.protobuf.diagnostics_pb2
import tensorflow.core.profiler.protobuf.kernel_stats_pb2
import tensorflow.core.profiler.protobuf.op_metrics_pb2
import tensorflow.core.profiler.protobuf.steps_db_pb2
import tensorflow.core.profiler.protobuf.tf_function_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class PerfEnv(google.protobuf.message.Message):
    """Performance environment, e.g the peak performance capabilities of the device."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PEAK_TERA_FLOPS_PER_SECOND_FIELD_NUMBER: builtins.int
    PEAK_HBM_BW_GIGA_BYTES_PER_SECOND_FIELD_NUMBER: builtins.int
    RIDGE_POINT_FIELD_NUMBER: builtins.int
    peak_tera_flops_per_second: builtins.float
    """Peak performance of a TPU core or a GPU in TFLOP/s."""

    peak_hbm_bw_giga_bytes_per_second: builtins.float
    """Peak memory bandwidth of a TPU core or a GPU in GiBs/s."""

    ridge_point: builtins.float
    """The ridge point of roofline model in FLOP/Byte. (i.e., minimum operational
    intensity required to achieve maximum performance).
    """

    def __init__(self,
        *,
        peak_tera_flops_per_second: builtins.float = ...,
        peak_hbm_bw_giga_bytes_per_second: builtins.float = ...,
        ridge_point: builtins.float = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["peak_hbm_bw_giga_bytes_per_second",b"peak_hbm_bw_giga_bytes_per_second","peak_tera_flops_per_second",b"peak_tera_flops_per_second","ridge_point",b"ridge_point"]) -> None: ...
global___PerfEnv = PerfEnv

class HostIndependentJobInfoResult(google.protobuf.message.Message):
    """Result proto for host-independent job information."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CHANGE_LIST_FIELD_NUMBER: builtins.int
    BUILD_TIME_FIELD_NUMBER: builtins.int
    BUILD_TARGET_FIELD_NUMBER: builtins.int
    PROFILE_DURATION_MS_FIELD_NUMBER: builtins.int
    change_list: builtins.int
    """The change-list number of this build."""

    build_time: builtins.int
    """The time of this build (nanoseconds since the Unix epoch)."""

    build_target: typing.Text
    """The target of this build."""

    profile_duration_ms: builtins.int
    """Profiling duration (in ms)."""

    def __init__(self,
        *,
        change_list: builtins.int = ...,
        build_time: builtins.int = ...,
        build_target: typing.Text = ...,
        profile_duration_ms: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["build_target",b"build_target","build_time",b"build_time","change_list",b"change_list","profile_duration_ms",b"profile_duration_ms"]) -> None: ...
global___HostIndependentJobInfoResult = HostIndependentJobInfoResult

class HostDependentJobInfoResult(google.protobuf.message.Message):
    """Result proto for host-dependent job information."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HOST_ID_FIELD_NUMBER: builtins.int
    COMMAND_LINE_FIELD_NUMBER: builtins.int
    START_TIME_FIELD_NUMBER: builtins.int
    BNS_ADDRESS_FIELD_NUMBER: builtins.int
    PROFILE_TIME_NS_FIELD_NUMBER: builtins.int
    host_id: typing.Text
    """This ID of the host where the job was run on."""

    command_line: typing.Text
    """The command line used to run the job."""

    start_time: builtins.int
    """The start time of this run (nanoseconds since the Unix epoch)."""

    bns_address: typing.Text
    """BNS address specified by client at time of profiling request."""

    profile_time_ns: builtins.int
    """Profiling start walltime (in ns)."""

    def __init__(self,
        *,
        host_id: typing.Text = ...,
        command_line: typing.Text = ...,
        start_time: builtins.int = ...,
        bns_address: typing.Text = ...,
        profile_time_ns: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bns_address",b"bns_address","command_line",b"command_line","host_id",b"host_id","profile_time_ns",b"profile_time_ns","start_time",b"start_time"]) -> None: ...
global___HostDependentJobInfoResult = HostDependentJobInfoResult

class SystemTopology(google.protobuf.message.Message):
    """System topology, which describes the number of chips in a pod
    and the connectivity style.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    X_DIMENSION_FIELD_NUMBER: builtins.int
    Y_DIMENSION_FIELD_NUMBER: builtins.int
    Z_DIMENSION_FIELD_NUMBER: builtins.int
    NUM_EXPECTED_REDUCED_CHIPS_FIELD_NUMBER: builtins.int
    x_dimension: builtins.int
    """The X, Y, and Z dimensions of this topology. 0 means that dimension does
    not exist.
    """

    y_dimension: builtins.int
    z_dimension: builtins.int
    num_expected_reduced_chips: builtins.int
    """The number of expected bad chips in this system."""

    def __init__(self,
        *,
        x_dimension: builtins.int = ...,
        y_dimension: builtins.int = ...,
        z_dimension: builtins.int = ...,
        num_expected_reduced_chips: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["num_expected_reduced_chips",b"num_expected_reduced_chips","x_dimension",b"x_dimension","y_dimension",b"y_dimension","z_dimension",b"z_dimension"]) -> None: ...
global___SystemTopology = SystemTopology

class RunEnvironment(google.protobuf.message.Message):
    """The run environment of a profiling session."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class HostnamesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: builtins.bool
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: builtins.bool = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    HOST_COUNT_FIELD_NUMBER: builtins.int
    TASK_COUNT_FIELD_NUMBER: builtins.int
    HOSTNAMES_FIELD_NUMBER: builtins.int
    DEVICE_TYPE_FIELD_NUMBER: builtins.int
    DEVICE_CORE_COUNT_FIELD_NUMBER: builtins.int
    PER_CORE_BATCH_SIZE_FIELD_NUMBER: builtins.int
    HOST_INDEPENDENT_JOB_INFO_FIELD_NUMBER: builtins.int
    HOST_DEPENDENT_JOB_INFO_FIELD_NUMBER: builtins.int
    REPLICA_COUNT_FIELD_NUMBER: builtins.int
    NUM_CORES_PER_REPLICA_FIELD_NUMBER: builtins.int
    TOPOLOGY_FIELD_NUMBER: builtins.int
    HOST_TRACE_LEVEL_FIELD_NUMBER: builtins.int
    host_count: builtins.int
    """Number of hosts used."""

    task_count: builtins.int
    """Number of tasks used."""

    @property
    def hostnames(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, builtins.bool]:
        """Distinct hostnames seen."""
        pass
    device_type: typing.Text
    """The type of device used."""

    device_core_count: builtins.int
    """The number of device cores used.
      In TPU case, this corresponds to the number of TPU cores
      In GPU case, this corresponds to the number of GPUs (not the number of
      SMs).
    """

    per_core_batch_size: builtins.int
    """The per-device-core batch size."""

    @property
    def host_independent_job_info(self) -> global___HostIndependentJobInfoResult:
        """Host-independent information about this job."""
        pass
    @property
    def host_dependent_job_info(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___HostDependentJobInfoResult]:
        """Host-dependent information about this job."""
        pass
    replica_count: builtins.int
    """The number of replicas, corresponds to input parallelism.
    If there is no model parallelism, replica_count = device_core_count
    """

    num_cores_per_replica: builtins.int
    """The number of cores used for a single replica, e.g. model parallelism.
    If there is no model parallelism, then num_cores_per_replica = 1
    """

    @property
    def topology(self) -> global___SystemTopology:
        """The chip interconnection topology."""
        pass
    host_trace_level: builtins.int
    """Host trace level."""

    def __init__(self,
        *,
        host_count: builtins.int = ...,
        task_count: builtins.int = ...,
        hostnames: typing.Optional[typing.Mapping[typing.Text, builtins.bool]] = ...,
        device_type: typing.Text = ...,
        device_core_count: builtins.int = ...,
        per_core_batch_size: builtins.int = ...,
        host_independent_job_info: typing.Optional[global___HostIndependentJobInfoResult] = ...,
        host_dependent_job_info: typing.Optional[typing.Iterable[global___HostDependentJobInfoResult]] = ...,
        replica_count: builtins.int = ...,
        num_cores_per_replica: builtins.int = ...,
        topology: typing.Optional[global___SystemTopology] = ...,
        host_trace_level: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["host_independent_job_info",b"host_independent_job_info","topology",b"topology"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_core_count",b"device_core_count","device_type",b"device_type","host_count",b"host_count","host_dependent_job_info",b"host_dependent_job_info","host_independent_job_info",b"host_independent_job_info","host_trace_level",b"host_trace_level","hostnames",b"hostnames","num_cores_per_replica",b"num_cores_per_replica","per_core_batch_size",b"per_core_batch_size","replica_count",b"replica_count","task_count",b"task_count","topology",b"topology"]) -> None: ...
global___RunEnvironment = RunEnvironment

class CoreDetails(google.protobuf.message.Message):
    """Next ID: 7"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HOSTNAME_FIELD_NUMBER: builtins.int
    DEVICE_ORDINAL_FIELD_NUMBER: builtins.int
    CORE_NUM_FIELD_NUMBER: builtins.int
    LOCAL_CHIP_ID_FIELD_NUMBER: builtins.int
    GLOBAL_CHIP_ID_FIELD_NUMBER: builtins.int
    GLOBAL_CORE_ID_FIELD_NUMBER: builtins.int
    hostname: typing.Text
    device_ordinal: builtins.int
    """unique within host, TPU core only"""

    core_num: builtins.int
    """unique within chip per core type"""

    local_chip_id: builtins.int
    """unique within host"""

    global_chip_id: builtins.int
    """unique within mesh"""

    global_core_id: builtins.int
    """unique within mesh, TPU core only"""

    def __init__(self,
        *,
        hostname: typing.Text = ...,
        device_ordinal: builtins.int = ...,
        core_num: builtins.int = ...,
        local_chip_id: builtins.int = ...,
        global_chip_id: builtins.int = ...,
        global_core_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["core_num",b"core_num","device_ordinal",b"device_ordinal","global_chip_id",b"global_chip_id","global_core_id",b"global_core_id","hostname",b"hostname","local_chip_id",b"local_chip_id"]) -> None: ...
global___CoreDetails = CoreDetails

class OpStats(google.protobuf.message.Message):
    """Next ID: 12
    Operator Statistics.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class CoreIdToDetailsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___CoreDetails: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___CoreDetails] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    HOST_OP_METRICS_DB_FIELD_NUMBER: builtins.int
    DEVICE_OP_METRICS_DB_FIELD_NUMBER: builtins.int
    HLO_METRICS_DB_COMPLETE_STEPS_ONLY_FIELD_NUMBER: builtins.int
    PERF_ENV_FIELD_NUMBER: builtins.int
    STEP_DB_FIELD_NUMBER: builtins.int
    RUN_ENVIRONMENT_FIELD_NUMBER: builtins.int
    KERNEL_STATS_DB_FIELD_NUMBER: builtins.int
    TF_FUNCTION_DB_FIELD_NUMBER: builtins.int
    CORE_ID_TO_DETAILS_FIELD_NUMBER: builtins.int
    DIAGNOSTICS_FIELD_NUMBER: builtins.int
    @property
    def host_op_metrics_db(self) -> tensorflow.core.profiler.protobuf.op_metrics_pb2.OpMetricsDb:
        """The database for the op metrics collected from the host over the entire
        profiling session including incomplete steps.
        """
        pass
    @property
    def device_op_metrics_db(self) -> tensorflow.core.profiler.protobuf.op_metrics_pb2.OpMetricsDb:
        """The database for the op metrics collected from the device over the entire
        profiling session including incomplete steps.
        """
        pass
    @property
    def hlo_metrics_db_complete_steps_only(self) -> tensorflow.core.profiler.protobuf.op_metrics_pb2.OpMetricsDb:
        """The result for the HLO-metric database over the complete steps only."""
        pass
    @property
    def perf_env(self) -> global___PerfEnv:
        """Performance environment of the op metrics collected."""
        pass
    @property
    def step_db(self) -> tensorflow.core.profiler.protobuf.steps_db_pb2.StepDatabaseResult:
        """The database of step sequences."""
        pass
    @property
    def run_environment(self) -> global___RunEnvironment:
        """The run environment of this profiling session."""
        pass
    @property
    def kernel_stats_db(self) -> tensorflow.core.profiler.protobuf.kernel_stats_pb2.KernelStatsDb:
        """Kernel stats results from all GPUs."""
        pass
    @property
    def tf_function_db(self) -> tensorflow.core.profiler.protobuf.tf_function_pb2.TfFunctionDb:
        """Statistics for all tf-functions."""
        pass
    @property
    def core_id_to_details(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___CoreDetails]:
        """A map from core ID to details."""
        pass
    @property
    def diagnostics(self) -> tensorflow.core.profiler.protobuf.diagnostics_pb2.Diagnostics:
        """Error and warning messages for diagnosing profiling issues."""
        pass
    def __init__(self,
        *,
        host_op_metrics_db: typing.Optional[tensorflow.core.profiler.protobuf.op_metrics_pb2.OpMetricsDb] = ...,
        device_op_metrics_db: typing.Optional[tensorflow.core.profiler.protobuf.op_metrics_pb2.OpMetricsDb] = ...,
        hlo_metrics_db_complete_steps_only: typing.Optional[tensorflow.core.profiler.protobuf.op_metrics_pb2.OpMetricsDb] = ...,
        perf_env: typing.Optional[global___PerfEnv] = ...,
        step_db: typing.Optional[tensorflow.core.profiler.protobuf.steps_db_pb2.StepDatabaseResult] = ...,
        run_environment: typing.Optional[global___RunEnvironment] = ...,
        kernel_stats_db: typing.Optional[tensorflow.core.profiler.protobuf.kernel_stats_pb2.KernelStatsDb] = ...,
        tf_function_db: typing.Optional[tensorflow.core.profiler.protobuf.tf_function_pb2.TfFunctionDb] = ...,
        core_id_to_details: typing.Optional[typing.Mapping[builtins.int, global___CoreDetails]] = ...,
        diagnostics: typing.Optional[tensorflow.core.profiler.protobuf.diagnostics_pb2.Diagnostics] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_op_metrics_db",b"device_op_metrics_db","diagnostics",b"diagnostics","hlo_metrics_db_complete_steps_only",b"hlo_metrics_db_complete_steps_only","host_op_metrics_db",b"host_op_metrics_db","kernel_stats_db",b"kernel_stats_db","perf_env",b"perf_env","run_environment",b"run_environment","step_db",b"step_db","tf_function_db",b"tf_function_db"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["core_id_to_details",b"core_id_to_details","device_op_metrics_db",b"device_op_metrics_db","diagnostics",b"diagnostics","hlo_metrics_db_complete_steps_only",b"hlo_metrics_db_complete_steps_only","host_op_metrics_db",b"host_op_metrics_db","kernel_stats_db",b"kernel_stats_db","perf_env",b"perf_env","run_environment",b"run_environment","step_db",b"step_db","tf_function_db",b"tf_function_db"]) -> None: ...
global___OpStats = OpStats
