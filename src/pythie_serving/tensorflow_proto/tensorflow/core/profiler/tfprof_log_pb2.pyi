"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import tensorflow.core.framework.attr_value_pb2
import tensorflow.core.framework.step_stats_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class CodeDef(google.protobuf.message.Message):
    """It specifies the Python callstack that creates an op."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Trace(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        FILE_FIELD_NUMBER: builtins.int
        FILE_ID_FIELD_NUMBER: builtins.int
        LINENO_FIELD_NUMBER: builtins.int
        FUNCTION_FIELD_NUMBER: builtins.int
        FUNCTION_ID_FIELD_NUMBER: builtins.int
        LINE_FIELD_NUMBER: builtins.int
        LINE_ID_FIELD_NUMBER: builtins.int
        FUNC_START_LINE_FIELD_NUMBER: builtins.int
        file: typing.Text
        """deprecated by file_id."""

        file_id: builtins.int
        lineno: builtins.int
        function: typing.Text
        """deprecated by function_id."""

        function_id: builtins.int
        line: typing.Text
        """deprecated line_id."""

        line_id: builtins.int
        func_start_line: builtins.int
        def __init__(self,
            *,
            file: typing.Text = ...,
            file_id: builtins.int = ...,
            lineno: builtins.int = ...,
            function: typing.Text = ...,
            function_id: builtins.int = ...,
            line: typing.Text = ...,
            line_id: builtins.int = ...,
            func_start_line: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["file",b"file","file_id",b"file_id","func_start_line",b"func_start_line","function",b"function","function_id",b"function_id","line",b"line","line_id",b"line_id","lineno",b"lineno"]) -> None: ...

    TRACES_FIELD_NUMBER: builtins.int
    @property
    def traces(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___CodeDef.Trace]: ...
    def __init__(self,
        *,
        traces: typing.Optional[typing.Iterable[global___CodeDef.Trace]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["traces",b"traces"]) -> None: ...
global___CodeDef = CodeDef

class OpLogEntry(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    FLOAT_OPS_FIELD_NUMBER: builtins.int
    TYPES_FIELD_NUMBER: builtins.int
    CODE_DEF_FIELD_NUMBER: builtins.int
    name: typing.Text
    """op name."""

    float_ops: builtins.int
    """float_ops is filled by tfprof Python API when called. It requires the
    op has RegisterStatistics defined. Currently, Conv2D, MatMul, etc, are
    implemented.
    """

    @property
    def types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """User can define extra op type information for an op. This allows the user
        to select a group of ops precisely using op_type as a key.
        """
        pass
    @property
    def code_def(self) -> global___CodeDef:
        """Used to support tfprof "code" view."""
        pass
    def __init__(self,
        *,
        name: typing.Text = ...,
        float_ops: builtins.int = ...,
        types: typing.Optional[typing.Iterable[typing.Text]] = ...,
        code_def: typing.Optional[global___CodeDef] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["code_def",b"code_def"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["code_def",b"code_def","float_ops",b"float_ops","name",b"name","types",b"types"]) -> None: ...
global___OpLogEntry = OpLogEntry

class OpLogProto(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class IdToStringEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: typing.Text
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    LOG_ENTRIES_FIELD_NUMBER: builtins.int
    ID_TO_STRING_FIELD_NUMBER: builtins.int
    @property
    def log_entries(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___OpLogEntry]: ...
    @property
    def id_to_string(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, typing.Text]:
        """Maps from id of CodeDef file,function,line to its string
        In the future can also map other id of other fields to string.
        """
        pass
    def __init__(self,
        *,
        log_entries: typing.Optional[typing.Iterable[global___OpLogEntry]] = ...,
        id_to_string: typing.Optional[typing.Mapping[builtins.int, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id_to_string",b"id_to_string","log_entries",b"log_entries"]) -> None: ...
global___OpLogProto = OpLogProto

class ProfileProto(google.protobuf.message.Message):
    """A proto representation of the profiler's profile.
    It allows serialization, shipping around and deserialization of the profiles.

    Please don't depend on the internals of the profile proto.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class NodesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___ProfileNode: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___ProfileNode] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class IdToStringEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: typing.Text
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NODES_FIELD_NUMBER: builtins.int
    HAS_TRACE_FIELD_NUMBER: builtins.int
    MISS_ACCELERATOR_STREAM_FIELD_NUMBER: builtins.int
    STEPS_FIELD_NUMBER: builtins.int
    ID_TO_STRING_FIELD_NUMBER: builtins.int
    @property
    def nodes(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___ProfileNode]: ...
    has_trace: builtins.bool
    """Whether or not has code traces."""

    miss_accelerator_stream: builtins.bool
    """Whether or not the TF device tracer fails to return accelerator
    information (which could lead to 0 accelerator execution time).
    """

    @property
    def steps(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Traced steps."""
        pass
    @property
    def id_to_string(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, typing.Text]:
        """Maps from id of CodeDef file,function,line to its string
        In the future can also map other id of other fields to string.
        """
        pass
    def __init__(self,
        *,
        nodes: typing.Optional[typing.Mapping[builtins.int, global___ProfileNode]] = ...,
        has_trace: builtins.bool = ...,
        miss_accelerator_stream: builtins.bool = ...,
        steps: typing.Optional[typing.Iterable[builtins.int]] = ...,
        id_to_string: typing.Optional[typing.Mapping[builtins.int, typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["has_trace",b"has_trace","id_to_string",b"id_to_string","miss_accelerator_stream",b"miss_accelerator_stream","nodes",b"nodes","steps",b"steps"]) -> None: ...
global___ProfileProto = ProfileProto

class ProfileNode(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class InputsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.int
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class InputShapesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___Tuple: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___Tuple] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class OutputsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.int
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class OutputShapesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___Tuple: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___Tuple] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class SrcOutputIndexEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        value: builtins.int
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: builtins.int = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class AttrsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> tensorflow.core.framework.attr_value_pb2.AttrValue: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[tensorflow.core.framework.attr_value_pb2.AttrValue] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class ExecsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___ExecProfile: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___ExecProfile] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    OP_FIELD_NUMBER: builtins.int
    ID_FIELD_NUMBER: builtins.int
    INPUTS_FIELD_NUMBER: builtins.int
    INPUT_SHAPES_FIELD_NUMBER: builtins.int
    OUTPUTS_FIELD_NUMBER: builtins.int
    OUTPUT_SHAPES_FIELD_NUMBER: builtins.int
    SRC_OUTPUT_INDEX_FIELD_NUMBER: builtins.int
    SHAPE_FIELD_NUMBER: builtins.int
    OP_TYPES_FIELD_NUMBER: builtins.int
    CANONICAL_DEVICE_FIELD_NUMBER: builtins.int
    HOST_DEVICE_FIELD_NUMBER: builtins.int
    FLOAT_OPS_FIELD_NUMBER: builtins.int
    TRACE_FIELD_NUMBER: builtins.int
    ATTRS_FIELD_NUMBER: builtins.int
    EXECS_FIELD_NUMBER: builtins.int
    name: typing.Text
    """graph node name."""

    op: typing.Text
    """graph operation type."""

    id: builtins.int
    """A unique id for the node."""

    @property
    def inputs(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
    @property
    def input_shapes(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___Tuple]: ...
    @property
    def outputs(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]: ...
    @property
    def output_shapes(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___Tuple]: ...
    @property
    def src_output_index(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, builtins.int]:
        """A map from source node id to its output index to current node."""
        pass
    @property
    def shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def op_types(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    canonical_device: typing.Text
    host_device: typing.Text
    float_ops: builtins.int
    @property
    def trace(self) -> global___CodeDef: ...
    @property
    def attrs(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, tensorflow.core.framework.attr_value_pb2.AttrValue]: ...
    @property
    def execs(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___ExecProfile]: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        op: typing.Text = ...,
        id: builtins.int = ...,
        inputs: typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        input_shapes: typing.Optional[typing.Mapping[builtins.int, global___Tuple]] = ...,
        outputs: typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        output_shapes: typing.Optional[typing.Mapping[builtins.int, global___Tuple]] = ...,
        src_output_index: typing.Optional[typing.Mapping[builtins.int, builtins.int]] = ...,
        shape: typing.Optional[typing.Iterable[builtins.int]] = ...,
        op_types: typing.Optional[typing.Iterable[typing.Text]] = ...,
        canonical_device: typing.Text = ...,
        host_device: typing.Text = ...,
        float_ops: builtins.int = ...,
        trace: typing.Optional[global___CodeDef] = ...,
        attrs: typing.Optional[typing.Mapping[typing.Text, tensorflow.core.framework.attr_value_pb2.AttrValue]] = ...,
        execs: typing.Optional[typing.Mapping[builtins.int, global___ExecProfile]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["trace",b"trace"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["attrs",b"attrs","canonical_device",b"canonical_device","execs",b"execs","float_ops",b"float_ops","host_device",b"host_device","id",b"id","input_shapes",b"input_shapes","inputs",b"inputs","name",b"name","op",b"op","op_types",b"op_types","output_shapes",b"output_shapes","outputs",b"outputs","shape",b"shape","src_output_index",b"src_output_index","trace",b"trace"]) -> None: ...
global___ProfileNode = ProfileNode

class ExecProfile(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class AcceleratorExecsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___ExecTime: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___ExecTime] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    class CpuExecsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        @property
        def value(self) -> global___ExecTime: ...
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Optional[global___ExecTime] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    RUN_COUNT_FIELD_NUMBER: builtins.int
    ALL_START_MICROS_FIELD_NUMBER: builtins.int
    LATEST_END_MICROS_FIELD_NUMBER: builtins.int
    ACCELERATOR_EXECS_FIELD_NUMBER: builtins.int
    CPU_EXECS_FIELD_NUMBER: builtins.int
    MEMORY_EXECS_FIELD_NUMBER: builtins.int
    ALLOCATIONS_FIELD_NUMBER: builtins.int
    DEVICES_FIELD_NUMBER: builtins.int
    run_count: builtins.int
    """Can be larger than 1 if run multiple times in loop."""

    all_start_micros: builtins.int
    """The earliest/latest time including scheduling and execution."""

    latest_end_micros: builtins.int
    @property
    def accelerator_execs(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ExecTime]:
        """device -> vector of {op_start_micros, op_exec_micros} pairs.
        accelerator_execs: gpu:id/stream:all -> {op_start_micros, op_exec_micros}
        For accelerator, vector size can be larger than 1, multiple kernel fires
        or in tf.while_loop.
        """
        pass
    @property
    def cpu_execs(self) -> google.protobuf.internal.containers.MessageMap[typing.Text, global___ExecTime]:
        """cpu_execs: cpu/gpu:id -> {op_start_micros, op_exec_micros}
        For cpu, vector size can be larger than 1 if in tf.while_loop.
        """
        pass
    @property
    def memory_execs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ExecMemory]:
        """Each entry to memory information of a scheduling of the node.
        Normally, there will be multiple entries in while_loop.
        """
        pass
    @property
    def allocations(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.framework.step_stats_pb2.AllocationRecord]:
        """The allocation and deallocation times and sizes throughout execution."""
        pass
    @property
    def devices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """The devices related to this execution."""
        pass
    def __init__(self,
        *,
        run_count: builtins.int = ...,
        all_start_micros: builtins.int = ...,
        latest_end_micros: builtins.int = ...,
        accelerator_execs: typing.Optional[typing.Mapping[typing.Text, global___ExecTime]] = ...,
        cpu_execs: typing.Optional[typing.Mapping[typing.Text, global___ExecTime]] = ...,
        memory_execs: typing.Optional[typing.Iterable[global___ExecMemory]] = ...,
        allocations: typing.Optional[typing.Iterable[tensorflow.core.framework.step_stats_pb2.AllocationRecord]] = ...,
        devices: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accelerator_execs",b"accelerator_execs","all_start_micros",b"all_start_micros","allocations",b"allocations","cpu_execs",b"cpu_execs","devices",b"devices","latest_end_micros",b"latest_end_micros","memory_execs",b"memory_execs","run_count",b"run_count"]) -> None: ...
global___ExecProfile = ExecProfile

class ExecTime(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TIMES_FIELD_NUMBER: builtins.int
    @property
    def times(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Tuple]: ...
    def __init__(self,
        *,
        times: typing.Optional[typing.Iterable[global___Tuple]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["times",b"times"]) -> None: ...
global___ExecTime = ExecTime

class ExecMemory(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class OutputMemoryEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___Memory: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___Memory] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    MEMORY_MICROS_FIELD_NUMBER: builtins.int
    HOST_TEMP_BYTES_FIELD_NUMBER: builtins.int
    HOST_PERSISTENT_BYTES_FIELD_NUMBER: builtins.int
    ACCELERATOR_TEMP_BYTES_FIELD_NUMBER: builtins.int
    ACCELERATOR_PERSISTENT_BYTES_FIELD_NUMBER: builtins.int
    REQUESTED_BYTES_FIELD_NUMBER: builtins.int
    PEAK_BYTES_FIELD_NUMBER: builtins.int
    RESIDUAL_BYTES_FIELD_NUMBER: builtins.int
    OUTPUT_BYTES_FIELD_NUMBER: builtins.int
    ALLOCATOR_BYTES_IN_USE_FIELD_NUMBER: builtins.int
    OUTPUT_MEMORY_FIELD_NUMBER: builtins.int
    memory_micros: builtins.int
    """This is the timestamp when the memory information was tracked."""

    host_temp_bytes: builtins.int
    """NOTE: Please don't depend on the following 4 fields yet. Due to
    TensorFlow internal tracing issues, the numbers can be quite wrong.
    TODO(xpan): Fix the TensorFlow internal tracing.
    """

    host_persistent_bytes: builtins.int
    accelerator_temp_bytes: builtins.int
    accelerator_persistent_bytes: builtins.int
    requested_bytes: builtins.int
    """Total bytes requested by the op."""

    peak_bytes: builtins.int
    """Total bytes requested by the op and released before op end."""

    residual_bytes: builtins.int
    """Total bytes requested by the op and not released after op end."""

    output_bytes: builtins.int
    """Total bytes output by the op (not necessarily requested by the op)."""

    allocator_bytes_in_use: builtins.int
    """The total number of bytes currently allocated by the allocator if >0."""

    @property
    def output_memory(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___Memory]:
        """The memory of each output of the operation."""
        pass
    def __init__(self,
        *,
        memory_micros: builtins.int = ...,
        host_temp_bytes: builtins.int = ...,
        host_persistent_bytes: builtins.int = ...,
        accelerator_temp_bytes: builtins.int = ...,
        accelerator_persistent_bytes: builtins.int = ...,
        requested_bytes: builtins.int = ...,
        peak_bytes: builtins.int = ...,
        residual_bytes: builtins.int = ...,
        output_bytes: builtins.int = ...,
        allocator_bytes_in_use: builtins.int = ...,
        output_memory: typing.Optional[typing.Mapping[builtins.int, global___Memory]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["accelerator_persistent_bytes",b"accelerator_persistent_bytes","accelerator_temp_bytes",b"accelerator_temp_bytes","allocator_bytes_in_use",b"allocator_bytes_in_use","host_persistent_bytes",b"host_persistent_bytes","host_temp_bytes",b"host_temp_bytes","memory_micros",b"memory_micros","output_bytes",b"output_bytes","output_memory",b"output_memory","peak_bytes",b"peak_bytes","requested_bytes",b"requested_bytes","residual_bytes",b"residual_bytes"]) -> None: ...
global___ExecMemory = ExecMemory

class Tuple(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    INT64_VALUES_FIELD_NUMBER: builtins.int
    @property
    def int64_values(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(self,
        *,
        int64_values: typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["int64_values",b"int64_values"]) -> None: ...
global___Tuple = Tuple

class Memory(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    BYTES_FIELD_NUMBER: builtins.int
    PTR_FIELD_NUMBER: builtins.int
    bytes: builtins.int
    ptr: builtins.int
    def __init__(self,
        *,
        bytes: builtins.int = ...,
        ptr: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bytes",b"bytes","ptr",b"ptr"]) -> None: ...
global___Memory = Memory
