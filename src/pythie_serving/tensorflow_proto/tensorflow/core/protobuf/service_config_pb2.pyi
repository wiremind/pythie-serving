"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DispatcherConfig(google.protobuf.message.Message):
    """Configuration for a tf.data service DispatchServer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PORT_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    WORK_DIR_FIELD_NUMBER: builtins.int
    FAULT_TOLERANT_MODE_FIELD_NUMBER: builtins.int
    JOB_GC_CHECK_INTERVAL_MS_FIELD_NUMBER: builtins.int
    JOB_GC_TIMEOUT_MS_FIELD_NUMBER: builtins.int
    port: builtins.int
    """The port for the dispatcher to bind to. A value of 0 indicates that the
    dispatcher may bind to any available port.
    """

    protocol: typing.Text
    """The protocol for the dispatcher to use when connecting to workers."""

    work_dir: typing.Text
    """A work directory to use for storing dispatcher state, and for recovering
    during restarts. The empty string indicates not to use any work directory.
    """

    fault_tolerant_mode: builtins.bool
    """Whether to run in fault tolerant mode, where dispatcher state is saved
    across restarts. Requires that `work_dir` is nonempty.
    """

    job_gc_check_interval_ms: builtins.int
    """How often the dispatcher should scan through to delete old and unused jobs."""

    job_gc_timeout_ms: builtins.int
    """How long a job needs to be unused before it becomes a candidate for garbage
    collection. A value of -1 indicates that jobs should never be garbage
    collected.
    """

    def __init__(self,
        *,
        port: builtins.int = ...,
        protocol: typing.Text = ...,
        work_dir: typing.Text = ...,
        fault_tolerant_mode: builtins.bool = ...,
        job_gc_check_interval_ms: builtins.int = ...,
        job_gc_timeout_ms: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["fault_tolerant_mode",b"fault_tolerant_mode","job_gc_check_interval_ms",b"job_gc_check_interval_ms","job_gc_timeout_ms",b"job_gc_timeout_ms","port",b"port","protocol",b"protocol","work_dir",b"work_dir"]) -> None: ...
global___DispatcherConfig = DispatcherConfig

class WorkerConfig(google.protobuf.message.Message):
    """Configuration for a tf.data service WorkerServer."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PORT_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    DISPATCHER_ADDRESS_FIELD_NUMBER: builtins.int
    WORKER_ADDRESS_FIELD_NUMBER: builtins.int
    HEARTBEAT_INTERVAL_MS_FIELD_NUMBER: builtins.int
    DISPATCHER_TIMEOUT_MS_FIELD_NUMBER: builtins.int
    DATA_TRANSFER_PROTOCOL_FIELD_NUMBER: builtins.int
    DATA_TRANSFER_ADDRESS_FIELD_NUMBER: builtins.int
    SHUTDOWN_QUIET_PERIOD_MS_FIELD_NUMBER: builtins.int
    port: builtins.int
    """The port for the worker to bind to. A value of 0 indicates that the
    worker may bind to any available port.
    """

    protocol: typing.Text
    """The protocol for the worker to use when connecting to the dispatcher."""

    dispatcher_address: typing.Text
    """The address of the dispatcher to register with."""

    worker_address: typing.Text
    """The address of the worker server. The substring "%port%", if specified,
    will be replaced with the worker's bound port. This is useful when the port
    is set to `0`.
    """

    heartbeat_interval_ms: builtins.int
    """How often the worker should heartbeat to the master."""

    dispatcher_timeout_ms: builtins.int
    """How long to retry requests to the dispatcher before giving up and reporting
    an error.
    """

    data_transfer_protocol: typing.Text
    """The protocol for the worker to use when transferring data to clients."""

    data_transfer_address: typing.Text
    """The data transfer address of the worker server. The substring "%port%", if
    specified, will be replaced with the worker's bound port. This is useful
    when the port is set to `0`.
    """

    shutdown_quiet_period_ms: builtins.int
    """When shutting down a worker, how long to wait for the gRPC server to
    process the final requests. This is used to achieve clean shutdown in unit
    tests.
    """

    def __init__(self,
        *,
        port: builtins.int = ...,
        protocol: typing.Text = ...,
        dispatcher_address: typing.Text = ...,
        worker_address: typing.Text = ...,
        heartbeat_interval_ms: builtins.int = ...,
        dispatcher_timeout_ms: builtins.int = ...,
        data_transfer_protocol: typing.Text = ...,
        data_transfer_address: typing.Text = ...,
        shutdown_quiet_period_ms: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["data_transfer_address",b"data_transfer_address","data_transfer_protocol",b"data_transfer_protocol","dispatcher_address",b"dispatcher_address","dispatcher_timeout_ms",b"dispatcher_timeout_ms","heartbeat_interval_ms",b"heartbeat_interval_ms","port",b"port","protocol",b"protocol","shutdown_quiet_period_ms",b"shutdown_quiet_period_ms","worker_address",b"worker_address"]) -> None: ...
global___WorkerConfig = WorkerConfig
