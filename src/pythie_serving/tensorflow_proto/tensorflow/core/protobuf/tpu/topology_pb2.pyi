"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class TopologyProto(google.protobuf.message.Message):
    """Describes the geometry of a TPU mesh."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MESH_SHAPE_FIELD_NUMBER: builtins.int
    NUM_TASKS_FIELD_NUMBER: builtins.int
    NUM_TPU_DEVICES_PER_TASK_FIELD_NUMBER: builtins.int
    DEVICE_COORDINATES_FIELD_NUMBER: builtins.int
    @property
    def mesh_shape(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """The dimensions of the TPU topology, in cores. Typically, this is a 3D
        topology [x, y, core], where the major dimensions correspond to TPU chips,
        and the minor dimension describes the number of cores on a multicore chip.
        """
        pass
    num_tasks: builtins.int
    """Number of TensorFlow tasks in the cluster."""

    num_tpu_devices_per_task: builtins.int
    """Number of TPU devices per task."""

    @property
    def device_coordinates(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """A flattened rank 3 int32 array with shape
        [num_tasks, num_tpu_devices_per_task, len(mesh_shape)].
        `tasks` is the number of tasks in the TPU cluster, `devices` is the number
        of TPU devices per task, and the minor dimension corresponds to a position
        in the TPU mesh topology. Each entry [task, device, axis] gives the
        `axis`-th coordinate in the topology of a task/device pair.
        """
        pass
    def __init__(self,
        *,
        mesh_shape: typing.Optional[typing.Iterable[builtins.int]] = ...,
        num_tasks: builtins.int = ...,
        num_tpu_devices_per_task: builtins.int = ...,
        device_coordinates: typing.Optional[typing.Iterable[builtins.int]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_coordinates",b"device_coordinates","mesh_shape",b"mesh_shape","num_tasks",b"num_tasks","num_tpu_devices_per_task",b"num_tpu_devices_per_task"]) -> None: ...
global___TopologyProto = TopologyProto
