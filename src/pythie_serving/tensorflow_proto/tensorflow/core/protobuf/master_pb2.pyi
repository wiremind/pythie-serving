"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import tensorflow.core.framework.device_attributes_pb2
import tensorflow.core.framework.graph_pb2
import tensorflow.core.framework.tensor_pb2
import tensorflow.core.protobuf.config_pb2
import tensorflow.core.protobuf.error_codes_pb2
import tensorflow.core.protobuf.named_tensor_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class CreateSessionRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    CreateSession method request/response protos.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    GRAPH_DEF_FIELD_NUMBER: builtins.int
    CONFIG_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    @property
    def graph_def(self) -> tensorflow.core.framework.graph_pb2.GraphDef:
        """The initial graph definition."""
        pass
    @property
    def config(self) -> tensorflow.core.protobuf.config_pb2.ConfigProto:
        """Configuration options."""
        pass
    target: typing.Text
    """The target string used from the client's perspective."""

    def __init__(self,
        *,
        graph_def: typing.Optional[tensorflow.core.framework.graph_pb2.GraphDef] = ...,
        config: typing.Optional[tensorflow.core.protobuf.config_pb2.ConfigProto] = ...,
        target: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["config",b"config","graph_def",b"graph_def"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["config",b"config","graph_def",b"graph_def","target",b"target"]) -> None: ...
global___CreateSessionRequest = CreateSessionRequest

class CreateSessionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    GRAPH_VERSION_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """The session handle to be used in subsequent calls for the created session.

    The client must arrange to call CloseSession with this returned
    session handle to close the session.
    """

    graph_version: builtins.int
    """The initial version number for the graph, to be used in the next call
    to ExtendSession.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        graph_version: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["graph_version",b"graph_version","session_handle",b"session_handle"]) -> None: ...
global___CreateSessionResponse = CreateSessionResponse

class ExtendSessionRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    ExtendSession method request/response protos.

    The "graph_def" specifies a set of nodes to be added to the session's graph.

    A typical "graph_def" will contain:

    * Zero or more new nodes with names that do not exist in the server-side
      graph. These will be added to the graph.

    PRECONDITION: The server-side current version is req.current_version.
      None of the names in req.graph_def appeared in previous successful calls to
      CreateSession or ExtendSession with the same session_handle.
    POSTCONDITION: The server-side current version is resp.new_version.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    GRAPH_DEF_FIELD_NUMBER: builtins.int
    CURRENT_GRAPH_VERSION_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """REQUIRED: session_handle must be returned by a CreateSession call
    to the same master service.
    """

    @property
    def graph_def(self) -> tensorflow.core.framework.graph_pb2.GraphDef:
        """REQUIRED: The nodes to be added to the session's graph. If any node has
        the same name as an existing node, the operation will fail with
        ILLEGAL_ARGUMENT.
        """
        pass
    current_graph_version: builtins.int
    """REQUIRED: The version number of the graph to be extended. This will be
    tested against the current server-side version number, and the operation
    will fail with FAILED_PRECONDITION if they do not match.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        graph_def: typing.Optional[tensorflow.core.framework.graph_pb2.GraphDef] = ...,
        current_graph_version: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["graph_def",b"graph_def"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["current_graph_version",b"current_graph_version","graph_def",b"graph_def","session_handle",b"session_handle"]) -> None: ...
global___ExtendSessionRequest = ExtendSessionRequest

class ExtendSessionResponse(google.protobuf.message.Message):
    """TODO(mrry): Return something about the operation?"""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NEW_GRAPH_VERSION_FIELD_NUMBER: builtins.int
    new_graph_version: builtins.int
    """The new version number for the extended graph, to be used in the next call
    to ExtendSession.
    """

    def __init__(self,
        *,
        new_graph_version: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["new_graph_version",b"new_graph_version"]) -> None: ...
global___ExtendSessionResponse = ExtendSessionResponse

class RunStepRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    RunStep method request/response protos.

    The caller should provide the feeds needed by the graph and specify
    what nodes should be fetched.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    FEED_FIELD_NUMBER: builtins.int
    FETCH_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    PARTIAL_RUN_HANDLE_FIELD_NUMBER: builtins.int
    STORE_ERRORS_IN_RESPONSE_BODY_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """REQUIRED: session_handle must be returned by a CreateSession call
    to the same master service.
    """

    @property
    def feed(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto]:
        """Tensors to be fed in the step. Each feed is a named tensor."""
        pass
    @property
    def fetch(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Fetches. A list of tensor names. The caller expects a tensor to
        be returned for each fetch[i] (see RunStepResponse.tensor). The
        order of specified fetches does not change the execution order.
        """
        pass
    @property
    def target(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Target Nodes. A list of node names. The named nodes will be run
        to but their outputs will not be fetched.
        """
        pass
    @property
    def options(self) -> tensorflow.core.protobuf.config_pb2.RunOptions:
        """Options for the run call."""
        pass
    partial_run_handle: typing.Text
    """Partial run handle (optional). If specified, this will be a partial run
    execution, run up to the specified fetches.
    """

    store_errors_in_response_body: builtins.bool
    """If true then some errors, e.g., execution errors that have long
    error messages, may return an OK RunStepResponse with the actual
    error saved in the status_code/status_error_message fields of the
    response body. This is a workaround since the RPC subsystem may
    truncate long metadata messages.
    """

    request_id: builtins.int
    """Unique identifier for this request. Every RunStepRequest must
    have a unique request_id, and retried RunStepRequest must have
    the same request_id. If request_id is zero, retry detection is disabled.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        feed: typing.Optional[typing.Iterable[tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto]] = ...,
        fetch: typing.Optional[typing.Iterable[typing.Text]] = ...,
        target: typing.Optional[typing.Iterable[typing.Text]] = ...,
        options: typing.Optional[tensorflow.core.protobuf.config_pb2.RunOptions] = ...,
        partial_run_handle: typing.Text = ...,
        store_errors_in_response_body: builtins.bool = ...,
        request_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["options",b"options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["feed",b"feed","fetch",b"fetch","options",b"options","partial_run_handle",b"partial_run_handle","request_id",b"request_id","session_handle",b"session_handle","store_errors_in_response_body",b"store_errors_in_response_body","target",b"target"]) -> None: ...
global___RunStepRequest = RunStepRequest

class RunStepResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TENSOR_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    STATUS_CODE_FIELD_NUMBER: builtins.int
    STATUS_ERROR_MESSAGE_FIELD_NUMBER: builtins.int
    @property
    def tensor(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto]:
        """NOTE: The order of the returned tensors may or may not match
        the fetch order specified in RunStepRequest.
        """
        pass
    @property
    def metadata(self) -> tensorflow.core.protobuf.config_pb2.RunMetadata:
        """Returned metadata if requested in the options."""
        pass
    status_code: tensorflow.core.protobuf.error_codes_pb2.Code.ValueType
    """If store_errors_in_response_body is true in the request, then
    optionally the server may return an OK status for the RPC and
    fill the true status into the fields below, to allow for messages
    that are too long to fit in metadata.
    """

    status_error_message: typing.Text
    def __init__(self,
        *,
        tensor: typing.Optional[typing.Iterable[tensorflow.core.protobuf.named_tensor_pb2.NamedTensorProto]] = ...,
        metadata: typing.Optional[tensorflow.core.protobuf.config_pb2.RunMetadata] = ...,
        status_code: tensorflow.core.protobuf.error_codes_pb2.Code.ValueType = ...,
        status_error_message: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata",b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["metadata",b"metadata","status_code",b"status_code","status_error_message",b"status_error_message","tensor",b"tensor"]) -> None: ...
global___RunStepResponse = RunStepResponse

class PartialRunSetupRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    PartialRunSetup method request/response protos.

    The caller should provide the future partial run feeds, fetches, and targets.
    Then the caller can use RunStepRequest with is_partial set to make partial
    run calls.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    FEED_FIELD_NUMBER: builtins.int
    FETCH_FIELD_NUMBER: builtins.int
    TARGET_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """REQUIRED: session_handle must be returned by a CreateSession call
    to the same master service.
    """

    @property
    def feed(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Tensors to be fed in future steps."""
        pass
    @property
    def fetch(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Fetches. A list of tensor names. The caller expects a tensor to be returned
        for each fetch[i] (see RunStepResponse.tensor), for corresponding partial
        RunStepRequests. The order of specified fetches does not change the
        execution order.
        """
        pass
    @property
    def target(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """Target Nodes. A list of node names. The named nodes will be run in future
        steps, but their outputs will not be fetched.
        """
        pass
    request_id: builtins.int
    """Unique identifier for this request. Every PartialRunSetupRequest must
    have a unique request_id, and retried PartialRunSetupRequest must have
    the same request_id. If request_id is zero, retry detection is disabled.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        feed: typing.Optional[typing.Iterable[typing.Text]] = ...,
        fetch: typing.Optional[typing.Iterable[typing.Text]] = ...,
        target: typing.Optional[typing.Iterable[typing.Text]] = ...,
        request_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["feed",b"feed","fetch",b"fetch","request_id",b"request_id","session_handle",b"session_handle","target",b"target"]) -> None: ...
global___PartialRunSetupRequest = PartialRunSetupRequest

class PartialRunSetupResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    PARTIAL_RUN_HANDLE_FIELD_NUMBER: builtins.int
    partial_run_handle: typing.Text
    """The unique handle corresponding to the ongoing partial run call setup by
    the invocation to PartialRunSetup. This handle may be passed to
    RunStepRequest to send and receive tensors for this partial run.
    """

    def __init__(self,
        *,
        partial_run_handle: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["partial_run_handle",b"partial_run_handle"]) -> None: ...
global___PartialRunSetupResponse = PartialRunSetupResponse

class CloseSessionRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    CloseSession method request/response protos.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """REQUIRED: session_handle must be returned by a CreateSession call
    to the same master service.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["session_handle",b"session_handle"]) -> None: ...
global___CloseSessionRequest = CloseSessionRequest

class CloseSessionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___CloseSessionResponse = CloseSessionResponse

class ResetRequest(google.protobuf.message.Message):
    """Reset() allows misbehaving or slow sessions to be aborted and closed, and
    causes their resources eventually to be released.  Reset() does not wait
    for the computations in old sessions to cease; it merely starts the
    process of tearing them down.  However, if a new session is started after
    a Reset(), the new session is isolated from changes that old sessions
    (started prior to the Reset()) may continue to make to resources, provided
    all those resources are in containers listed in "containers".

    Old sessions may continue to have side-effects on resources not in
    containers listed in "containers", and thus may affect future
    sessions' results in ways that are hard to predict.  Thus, if well-defined
    behavior is desired, is it recommended that all containers be listed in
    "containers".  Similarly, if a device_filter is specified, results may be
    hard to predict.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CONTAINER_FIELD_NUMBER: builtins.int
    DEVICE_FILTERS_FIELD_NUMBER: builtins.int
    @property
    def container(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """A list of container names, which may be empty.

        If 'container' is not empty, releases resources in the given
        containers in all devices.

        If 'container' is empty, releases resources in the default
        container in all devices.
        """
        pass
    @property
    def device_filters(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """When any filters are present, only devices that match the filters
        will be reset. Each filter can be partially specified,
        e.g. "/job:ps" "/job:worker/replica:3", etc.
        """
        pass
    def __init__(self,
        *,
        container: typing.Optional[typing.Iterable[typing.Text]] = ...,
        device_filters: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["container",b"container","device_filters",b"device_filters"]) -> None: ...
global___ResetRequest = ResetRequest

class ResetResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___ResetResponse = ResetResponse

class ListDevicesRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    ListDevices method request/response protos.

    Returns information about the TensorFlow devices that are available
    to this master.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """Optional: session_handle must be returned by a CreateSession call to the
    same master service.

    When session_handle is empty, the ClusterSpec provided when the master was
    started is used to compute the available devices. If the session_handle is
    provided but not recognized, an error is returned. Finally, if a valid
    session_handle is provided, the cluster configuration for that session is
    used when computing the response.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["session_handle",b"session_handle"]) -> None: ...
global___ListDevicesRequest = ListDevicesRequest

class ListDevicesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOCAL_DEVICE_FIELD_NUMBER: builtins.int
    REMOTE_DEVICE_FIELD_NUMBER: builtins.int
    @property
    def local_device(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.framework.device_attributes_pb2.DeviceAttributes]: ...
    @property
    def remote_device(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.framework.device_attributes_pb2.DeviceAttributes]: ...
    def __init__(self,
        *,
        local_device: typing.Optional[typing.Iterable[tensorflow.core.framework.device_attributes_pb2.DeviceAttributes]] = ...,
        remote_device: typing.Optional[typing.Iterable[tensorflow.core.framework.device_attributes_pb2.DeviceAttributes]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["local_device",b"local_device","remote_device",b"remote_device"]) -> None: ...
global___ListDevicesResponse = ListDevicesResponse

class MakeCallableRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    MakeCallable method request/response protos.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    OPTIONS_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """REQUIRED: session_handle must be returned by a CreateSession call
    to the same master service.
    """

    @property
    def options(self) -> tensorflow.core.protobuf.config_pb2.CallableOptions:
        """Options that define the behavior of the created callable."""
        pass
    request_id: builtins.int
    """Unique identifier for this request. Every MakeCallableRequest must
    have a unique request_id, and retried MakeCallableRequest must have
    the same request_id. If request_id is zero, retry detection is disabled.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        options: typing.Optional[tensorflow.core.protobuf.config_pb2.CallableOptions] = ...,
        request_id: builtins.int = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["options",b"options"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["options",b"options","request_id",b"request_id","session_handle",b"session_handle"]) -> None: ...
global___MakeCallableRequest = MakeCallableRequest

class MakeCallableResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    HANDLE_FIELD_NUMBER: builtins.int
    handle: builtins.int
    """A handle to the created callable."""

    def __init__(self,
        *,
        handle: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["handle",b"handle"]) -> None: ...
global___MakeCallableResponse = MakeCallableResponse

class RunCallableRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    RunCallable method request/response protos.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    HANDLE_FIELD_NUMBER: builtins.int
    FEED_FIELD_NUMBER: builtins.int
    REQUEST_ID_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """REQUIRED: session_handle must be returned by a CreateSession call
    to the same master service.
    """

    handle: builtins.int
    """REQUIRED: handle must be returned by a MakeCallable call to the same
    master service.
    """

    @property
    def feed(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.framework.tensor_pb2.TensorProto]:
        """Values of the tensors passed as arguments to the callable, in the order
        defined in the CallableOptions.feed field passed to MakeCallable.
        """
        pass
    request_id: builtins.int
    """Unique identifier for this request. Every RunCallableRequest must
    have a unique request_id, and retried RunCallableRequest must have
    the same request_id. If request_id is zero, retry detection is disabled.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        handle: builtins.int = ...,
        feed: typing.Optional[typing.Iterable[tensorflow.core.framework.tensor_pb2.TensorProto]] = ...,
        request_id: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["feed",b"feed","handle",b"handle","request_id",b"request_id","session_handle",b"session_handle"]) -> None: ...
global___RunCallableRequest = RunCallableRequest

class RunCallableResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    FETCH_FIELD_NUMBER: builtins.int
    METADATA_FIELD_NUMBER: builtins.int
    @property
    def fetch(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.framework.tensor_pb2.TensorProto]:
        """Values of the tensors returned by the callable, in the order defined in the
        CallableOptions.fetch field passed to MakeCallable.
        """
        pass
    @property
    def metadata(self) -> tensorflow.core.protobuf.config_pb2.RunMetadata:
        """Returned metadata if requested in the options."""
        pass
    def __init__(self,
        *,
        fetch: typing.Optional[typing.Iterable[tensorflow.core.framework.tensor_pb2.TensorProto]] = ...,
        metadata: typing.Optional[tensorflow.core.protobuf.config_pb2.RunMetadata] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["metadata",b"metadata"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fetch",b"fetch","metadata",b"metadata"]) -> None: ...
global___RunCallableResponse = RunCallableResponse

class ReleaseCallableRequest(google.protobuf.message.Message):
    """//////////////////////////////////////////////////////////////////////////////

    ReleaseCallable method request/response protos.

    //////////////////////////////////////////////////////////////////////////////

    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    SESSION_HANDLE_FIELD_NUMBER: builtins.int
    HANDLE_FIELD_NUMBER: builtins.int
    session_handle: typing.Text
    """REQUIRED: session_handle must be returned by a CreateSession call
    to the same master service.
    """

    handle: builtins.int
    """REQUIRED: handle must be returned by a MakeCallable call to the same
    master service.
    """

    def __init__(self,
        *,
        session_handle: typing.Text = ...,
        handle: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["handle",b"handle","session_handle",b"session_handle"]) -> None: ...
global___ReleaseCallableRequest = ReleaseCallableRequest

class ReleaseCallableResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    def __init__(self,
        ) -> None: ...
global___ReleaseCallableResponse = ReleaseCallableResponse
