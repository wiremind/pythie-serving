"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class TaskDeviceFilters(google.protobuf.message.Message):
    """This file contains protos to be used when defining a TensorFlow
    cluster.

    Configure device filters for remote tasks in the cluster. When associated
    with a ClusterDef in setting up the cluster, a remote task will ignore all
    devices which do not match any of its filters. Device filters must be
    configured at the cluster startup, and cannot be updated once the cluster is
    up and running.

    EXAMPLES
    --------

    A two-job cluster with the following ClusterDef:

     Cluster:
       job { name: 'worker' tasks { key: 0 value: 'worker1:2222' }
                            tasks { key: 1 value: 'worker2:2222' } }
       job { name: 'ps'     tasks { key: 0 value: 'ps0:2222' }
                            tasks { key: 1 value: 'ps1:2222' } }

    Set device filters to isolate worker tasks:

     ClusterDeviceFilters:
       job { name: 'worker' tasks { key: 0
                                    value: device_filter '/job:ps'
                                           device_filter '/job:worker/task:0' }
                            tasks { key: 1
                                    value: device_filter '/job:ps'
                                           device_filter '/job:worker/task:1' } }

    Defines the device filters for a remote task.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICE_FILTERS_FIELD_NUMBER: builtins.int
    @property
    def device_filters(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]: ...
    def __init__(self,
        *,
        device_filters: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["device_filters",b"device_filters"]) -> None: ...
global___TaskDeviceFilters = TaskDeviceFilters

class JobDeviceFilters(google.protobuf.message.Message):
    """Defines the device filters for tasks in a job."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class TasksEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.int
        @property
        def value(self) -> global___TaskDeviceFilters: ...
        def __init__(self,
            *,
            key: builtins.int = ...,
            value: typing.Optional[global___TaskDeviceFilters] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    NAME_FIELD_NUMBER: builtins.int
    TASKS_FIELD_NUMBER: builtins.int
    name: typing.Text
    """The name of this job."""

    @property
    def tasks(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, global___TaskDeviceFilters]:
        """Mapping from task ID to task device filters."""
        pass
    def __init__(self,
        *,
        name: typing.Text = ...,
        tasks: typing.Optional[typing.Mapping[builtins.int, global___TaskDeviceFilters]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","tasks",b"tasks"]) -> None: ...
global___JobDeviceFilters = JobDeviceFilters

class ClusterDeviceFilters(google.protobuf.message.Message):
    """Defines the device filters for jobs in a cluster."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    JOBS_FIELD_NUMBER: builtins.int
    @property
    def jobs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___JobDeviceFilters]: ...
    def __init__(self,
        *,
        jobs: typing.Optional[typing.Iterable[global___JobDeviceFilters]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["jobs",b"jobs"]) -> None: ...
global___ClusterDeviceFilters = ClusterDeviceFilters
