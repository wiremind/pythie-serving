"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class DeviceProperties(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class EnvironmentEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: typing.Text
        value: typing.Text
        def __init__(self,
            *,
            key: typing.Text = ...,
            value: typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["key",b"key","value",b"value"]) -> None: ...

    TYPE_FIELD_NUMBER: builtins.int
    VENDOR_FIELD_NUMBER: builtins.int
    MODEL_FIELD_NUMBER: builtins.int
    FREQUENCY_FIELD_NUMBER: builtins.int
    NUM_CORES_FIELD_NUMBER: builtins.int
    ENVIRONMENT_FIELD_NUMBER: builtins.int
    NUM_REGISTERS_FIELD_NUMBER: builtins.int
    L1_CACHE_SIZE_FIELD_NUMBER: builtins.int
    L2_CACHE_SIZE_FIELD_NUMBER: builtins.int
    L3_CACHE_SIZE_FIELD_NUMBER: builtins.int
    SHARED_MEMORY_SIZE_PER_MULTIPROCESSOR_FIELD_NUMBER: builtins.int
    MEMORY_SIZE_FIELD_NUMBER: builtins.int
    BANDWIDTH_FIELD_NUMBER: builtins.int
    type: typing.Text
    """Device type (CPU, GPU, ...)"""

    vendor: typing.Text
    """Vendor (Intel, nvidia, ...)"""

    model: typing.Text
    """Model (Haswell, K40, ...)"""

    frequency: builtins.int
    """Core Frequency in Mhz"""

    num_cores: builtins.int
    """Number of cores"""

    @property
    def environment(self) -> google.protobuf.internal.containers.ScalarMap[typing.Text, typing.Text]:
        """Version of the tools and libraries used with this device (e.g. gcc 4.9,
        cudnn 5.1)
        """
        pass
    num_registers: builtins.int
    """Number of registers per core."""

    l1_cache_size: builtins.int
    """L1 cache size in bytes"""

    l2_cache_size: builtins.int
    """L2 cache size in bytes"""

    l3_cache_size: builtins.int
    """L3 cache size in bytes"""

    shared_memory_size_per_multiprocessor: builtins.int
    """Shared memory size per multiprocessor in bytes. This field is
    applicable to GPUs only.
    """

    memory_size: builtins.int
    """Memory size in bytes"""

    bandwidth: builtins.int
    """Memory bandwidth in KB/s"""

    def __init__(self,
        *,
        type: typing.Text = ...,
        vendor: typing.Text = ...,
        model: typing.Text = ...,
        frequency: builtins.int = ...,
        num_cores: builtins.int = ...,
        environment: typing.Optional[typing.Mapping[typing.Text, typing.Text]] = ...,
        num_registers: builtins.int = ...,
        l1_cache_size: builtins.int = ...,
        l2_cache_size: builtins.int = ...,
        l3_cache_size: builtins.int = ...,
        shared_memory_size_per_multiprocessor: builtins.int = ...,
        memory_size: builtins.int = ...,
        bandwidth: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["bandwidth",b"bandwidth","environment",b"environment","frequency",b"frequency","l1_cache_size",b"l1_cache_size","l2_cache_size",b"l2_cache_size","l3_cache_size",b"l3_cache_size","memory_size",b"memory_size","model",b"model","num_cores",b"num_cores","num_registers",b"num_registers","shared_memory_size_per_multiprocessor",b"shared_memory_size_per_multiprocessor","type",b"type","vendor",b"vendor"]) -> None: ...
global___DeviceProperties = DeviceProperties

class NamedDevice(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    PROPERTIES_FIELD_NUMBER: builtins.int
    name: typing.Text
    @property
    def properties(self) -> global___DeviceProperties: ...
    def __init__(self,
        *,
        name: typing.Text = ...,
        properties: typing.Optional[global___DeviceProperties] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["properties",b"properties"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["name",b"name","properties",b"properties"]) -> None: ...
global___NamedDevice = NamedDevice
