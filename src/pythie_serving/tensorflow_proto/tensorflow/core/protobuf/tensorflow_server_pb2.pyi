"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import tensorflow.core.protobuf.cluster_pb2
import tensorflow.core.protobuf.config_pb2
import tensorflow.core.protobuf.device_filters_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ServerDef(google.protobuf.message.Message):
    """Defines the configuration of a single TensorFlow server."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    CLUSTER_FIELD_NUMBER: builtins.int
    JOB_NAME_FIELD_NUMBER: builtins.int
    TASK_INDEX_FIELD_NUMBER: builtins.int
    DEFAULT_SESSION_CONFIG_FIELD_NUMBER: builtins.int
    PROTOCOL_FIELD_NUMBER: builtins.int
    PORT_FIELD_NUMBER: builtins.int
    CLUSTER_DEVICE_FILTERS_FIELD_NUMBER: builtins.int
    @property
    def cluster(self) -> tensorflow.core.protobuf.cluster_pb2.ClusterDef:
        """The cluster of which this server is a member."""
        pass
    job_name: typing.Text
    """The name of the job of which this server is a member.

    NOTE(mrry): The `cluster` field must contain a `JobDef` with a `name` field
    that matches this name.
    """

    task_index: builtins.int
    """The task index of this server in its job.

    NOTE: The `cluster` field must contain a `JobDef` with a matching `name`
    and a mapping in its `tasks` field for this index.
    """

    @property
    def default_session_config(self) -> tensorflow.core.protobuf.config_pb2.ConfigProto:
        """The default configuration for sessions that run on this server."""
        pass
    protocol: typing.Text
    """The protocol to be used by this server.

    Acceptable values include: "grpc", "grpc+verbs".
    """

    port: builtins.int
    """The server port. If not set, then we identify the port from the job_name."""

    @property
    def cluster_device_filters(self) -> tensorflow.core.protobuf.device_filters_pb2.ClusterDeviceFilters:
        """Device filters for remote tasks in the cluster.
        NOTE: This is an experimental feature and only effective in TensorFlow 2.x.
        """
        pass
    def __init__(self,
        *,
        cluster: typing.Optional[tensorflow.core.protobuf.cluster_pb2.ClusterDef] = ...,
        job_name: typing.Text = ...,
        task_index: builtins.int = ...,
        default_session_config: typing.Optional[tensorflow.core.protobuf.config_pb2.ConfigProto] = ...,
        protocol: typing.Text = ...,
        port: builtins.int = ...,
        cluster_device_filters: typing.Optional[tensorflow.core.protobuf.device_filters_pb2.ClusterDeviceFilters] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["cluster",b"cluster","cluster_device_filters",b"cluster_device_filters","default_session_config",b"default_session_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster",b"cluster","cluster_device_filters",b"cluster_device_filters","default_session_config",b"default_session_config","job_name",b"job_name","port",b"port","protocol",b"protocol","task_index",b"task_index"]) -> None: ...
global___ServerDef = ServerDef
