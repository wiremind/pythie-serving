"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _CompilationCacheFetchTarget:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType
class _CompilationCacheFetchTargetEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_CompilationCacheFetchTarget.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    INVALID: _CompilationCacheFetchTarget.ValueType  # 0
    MAIN: _CompilationCacheFetchTarget.ValueType  # 1
    SHARDING: _CompilationCacheFetchTarget.ValueType  # 2
    UNSHARDING: _CompilationCacheFetchTarget.ValueType  # 3
class CompilationCacheFetchTarget(_CompilationCacheFetchTarget, metaclass=_CompilationCacheFetchTargetEnumTypeWrapper):
    """Target type for compilation cache fetch operation."""
    pass

INVALID: CompilationCacheFetchTarget.ValueType  # 0
MAIN: CompilationCacheFetchTarget.ValueType  # 1
SHARDING: CompilationCacheFetchTarget.ValueType  # 2
UNSHARDING: CompilationCacheFetchTarget.ValueType  # 3
global___CompilationCacheFetchTarget = CompilationCacheFetchTarget


class TpuCompilationUidAndIndex(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    UID_FIELD_NUMBER: builtins.int
    PROTO_INDEX_FIELD_NUMBER: builtins.int
    uid: builtins.int
    proto_index: builtins.int
    def __init__(self,
        *,
        uid: builtins.int = ...,
        proto_index: builtins.int = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["proto_index",b"proto_index","uid",b"uid"]) -> None: ...
global___TpuCompilationUidAndIndex = TpuCompilationUidAndIndex

class GetTpuProgramRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    KEY_FIELD_NUMBER: builtins.int
    UID_AND_INDEX_FIELD_NUMBER: builtins.int
    FETCH_TARGET_FIELD_NUMBER: builtins.int
    key: typing.Text
    @property
    def uid_and_index(self) -> global___TpuCompilationUidAndIndex: ...
    fetch_target: global___CompilationCacheFetchTarget.ValueType
    def __init__(self,
        *,
        key: typing.Text = ...,
        uid_and_index: typing.Optional[global___TpuCompilationUidAndIndex] = ...,
        fetch_target: global___CompilationCacheFetchTarget.ValueType = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["key",b"key","key_oneof",b"key_oneof","uid_and_index",b"uid_and_index"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["fetch_target",b"fetch_target","key",b"key","key_oneof",b"key_oneof","uid_and_index",b"uid_and_index"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["key_oneof",b"key_oneof"]) -> typing.Optional[typing_extensions.Literal["key","uid_and_index"]]: ...
global___GetTpuProgramRequest = GetTpuProgramRequest
