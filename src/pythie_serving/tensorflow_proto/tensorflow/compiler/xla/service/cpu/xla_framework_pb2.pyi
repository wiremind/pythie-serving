"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2022 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class XlaFrameworkMappingProto(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INPUTS_FIELD_NUMBER: builtins.int
    FLATTENED_OUTPUTS_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    OUTPUT_IS_TUPLE_FIELD_NUMBER: builtins.int
    @property
    def inputs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def flattened_outputs(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    result: builtins.int
    output_is_tuple: builtins.bool
    def __init__(
        self,
        *,
        inputs: collections.abc.Iterable[builtins.int] | None = ...,
        flattened_outputs: collections.abc.Iterable[builtins.int] | None = ...,
        result: builtins.int | None = ...,
        output_is_tuple: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["output_is_tuple", b"output_is_tuple", "result", b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["flattened_outputs", b"flattened_outputs", "inputs", b"inputs", "output_is_tuple", b"output_is_tuple", "result", b"result"]) -> None: ...

global___XlaFrameworkMappingProto = XlaFrameworkMappingProto
