# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tensorflow/compiler/xrt/xrt.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from pythie_serving.tensorflow_proto.tensorflow.compiler.tf2xla import host_compute_metadata_pb2 as tensorflow_dot_compiler_dot_tf2xla_dot_host__compute__metadata__pb2
from pythie_serving.tensorflow_proto.tensorflow.compiler.xla.service import hlo_pb2 as tensorflow_dot_compiler_dot_xla_dot_service_dot_hlo__pb2
from pythie_serving.tensorflow_proto.tensorflow.compiler.xla import xla_pb2 as tensorflow_dot_compiler_dot_xla_dot_xla__pb2
from pythie_serving.tensorflow_proto.tensorflow.compiler.xla import xla_data_pb2 as tensorflow_dot_compiler_dot_xla_dot_xla__data__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n!tensorflow/compiler/xrt/xrt.proto\x12\x03xrt\x1a\x36tensorflow/compiler/tf2xla/host_compute_metadata.proto\x1a)tensorflow/compiler/xla/service/hlo.proto\x1a!tensorflow/compiler/xla/xla.proto\x1a&tensorflow/compiler/xla/xla_data.proto\"\xee\x01\n\x10\x44\x65viceAssignment\x12\x44\n\x13\x63omputation_devices\x18\x01 \x03(\x0b\x32\'.xrt.DeviceAssignment.ComputationDevice\x1a\x93\x01\n\x11\x43omputationDevice\x12V\n\x0freplica_devices\x18\x01 \x03(\x0b\x32=.xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates\x1a&\n\x15\x44\x65viceMeshCoordinates\x12\r\n\x05value\x18\x01 \x03(\x05\"\xaf\x04\n\x14XLAComputationConfig\x12\x14\n\x0cnum_replicas\x18\x01 \x01(\x05\x12\x1d\n\x15num_cores_per_replica\x18\x02 \x01(\x05\x12\x45\n\x15host_compute_metadata\x18\x03 \x01(\x0b\x32&.tensorflow.tf2xla.HostComputeMetadata\x12-\n\rprogram_shape\x18\x04 \x01(\x0b\x32\x16.xla.ProgramShapeProto\x12\x36\n\x16per_core_program_shape\x18\x05 \x03(\x0b\x32\x16.xla.ProgramShapeProto\x12\x30\n\x11\x64\x65vice_assignment\x18\x06 \x01(\x0b\x32\x15.xrt.DeviceAssignment\x12(\n\rdebug_options\x18\x07 \x01(\x0b\x32\x11.xla.DebugOptions\x12<\n\x0c\x65xperimental\x18\x08 \x01(\x0b\x32&.xrt.XLAComputationConfig.Experimental\x1a\x99\x01\n\x0c\x45xperimental\x12V\n\x16stateful_input_indices\x18\x01 \x03(\x0b\x32\x36.xrt.XLAComputationConfig.Experimental.UpdateIndexPair\x1a\x31\n\x0fUpdateIndexPair\x12\r\n\x05index\x18\x01 \x01(\x05\x12\x0f\n\x07updated\x18\x02 \x01(\x08\"c\n\x0eXLAComputation\x12)\n\x06\x63onfig\x18\x01 \x01(\x0b\x32\x19.xrt.XLAComputationConfig\x12&\n\x0chlo_snapshot\x18\x02 \x01(\x0b\x32\x10.xla.HloSnapshot\"7\n\rXLAAllocation\x12 \n\x05value\x18\x02 \x01(\x0b\x32\x11.xla.LiteralProtoJ\x04\x08\x01\x10\x02\"d\n\x0cXLATupleNode\x12\x13\n\x0binput_index\x18\x01 \x01(\x05\x12\x1c\n\x14release_input_handle\x18\x02 \x01(\x08\x12!\n\x06tuples\x18\x03 \x03(\x0b\x32\x11.xrt.XLATupleNode\"Z\n\x15\x43ommonExecutionConfig\x12\x12\n\nreplica_id\x18\x01 \x01(\x05\x12\x1d\n\x15local_replica_mapping\x18\x02 \x03(\x05\x12\x0e\n\x06run_id\x18\x03 \x01(\x03\"\x98\x02\n\x12XRTExecutionConfig\x12\x16\n\x0e\x64\x65vice_ordinal\x18\x01 \x01(\x05\x12\x1d\n\x15\x63ore_index_in_replica\x18\x02 \x01(\x05\x12\x1e\n\x16\x65xecution_instance_key\x18\x03 \x01(\t\x12\x10\n\x08rng_seed\x18\x04 \x01(\r\x12\x1d\n\x15release_input_handles\x18\x05 \x01(\x08\x12\"\n\x1arelease_compilation_handle\x18\x06 \x01(\x08\x12\x1d\n\x15return_exploded_tuple\x18\x07 \x01(\x08\x12\x31\n\rcommon_config\x18\t \x01(\x0b\x32\x1a.xrt.CommonExecutionConfigJ\x04\x08\x08\x10\t\"\xa3\x01\n\x17XRTChainedExecuteConfig\x12\x10\n\x08rng_seed\x18\x01 \x01(\r\x12\x1d\n\x15\x63ore_index_in_replica\x18\x02 \x01(\x05\x12\x1e\n\x16\x65xecution_instance_key\x18\x03 \x01(\t\x12\x31\n\rcommon_config\x18\x05 \x01(\x0b\x32\x1a.xrt.CommonExecutionConfigJ\x04\x08\x04\x10\x05\"\x9f\x02\n\x13XRTChainedExecuteOp\x12\x15\n\x0b\x64\x61ta_handle\x18\x01 \x01(\x03H\x00\x12\x1c\n\x12\x63omputation_handle\x18\x02 \x01(\x03H\x00\x12\x30\n\x07outputs\x18\x03 \x03(\x0b\x32\x1f.xrt.XRTChainedExecuteOp.Output\x12.\n\x06inputs\x18\x04 \x03(\x0b\x32\x1e.xrt.XRTChainedExecuteOp.Input\x1a/\n\x05Input\x12\x10\n\x08op_index\x18\x01 \x01(\x03\x12\x14\n\x0coutput_index\x18\x02 \x01(\x03\x1a\x34\n\x06Output\x12\x14\n\x0coutput_index\x18\x01 \x01(\x03\x12\x14\n\x0cresult_index\x18\x02 \x01(\x03\x42\n\n\x08op_oneof\">\n\x15XRTChainedExecutePlan\x12%\n\x03ops\x18\x01 \x03(\x0b\x32\x18.xrt.XRTChainedExecuteOp\"*\n\x11XRTMetricsCollect\x12\x15\n\rmetrics_regex\x18\x01 \x03(\t\"\x90\x02\n\x0bPercentiles\x12\x14\n\x0cstart_nstime\x18\x01 \x01(\x04\x12\x12\n\nend_nstime\x18\x02 \x01(\x04\x12\x11\n\tmin_value\x18\x03 \x01(\x01\x12\x11\n\tmax_value\x18\x04 \x01(\x01\x12\x0c\n\x04mean\x18\x05 \x01(\x01\x12\x0e\n\x06stddev\x18\x06 \x01(\x01\x12\x13\n\x0bnum_samples\x18\x07 \x01(\x04\x12\x15\n\rtotal_samples\x18\x08 \x01(\x04\x12\x13\n\x0b\x61\x63\x63umulator\x18\t \x01(\x01\x12&\n\x06points\x18\n \x03(\x0b\x32\x16.xrt.Percentiles.Point\x1a*\n\x05Point\x12\x12\n\npercentile\x18\x01 \x01(\x01\x12\r\n\x05value\x18\x02 \x01(\x01\"\xeb\x01\n\x0cMetricValues\x12\x0c\n\x04name\x18\x01 \x01(\t\x12-\n\x11percentiles_value\x18\x02 \x01(\x0b\x32\x10.xrt.PercentilesH\x00\x12\x15\n\x0bint64_value\x18\x03 \x01(\x03H\x00\x12\x38\n\x0funit_of_measure\x18\x04 \x01(\x0e\x32\x1f.xrt.MetricValues.UnitOfMeasure\"=\n\rUnitOfMeasure\x12\x0b\n\x07INVALID\x10\x00\x12\n\n\x06NUMBER\x10\x01\x12\x08\n\x04TIME\x10\x02\x12\t\n\x05\x42YTES\x10\x03\x42\x0e\n\x0cvalues_oneof\"3\n\rMetricsReport\x12\"\n\x07metrics\x18\x01 \x03(\x0b\x32\x11.xrt.MetricValues\"/\n\nMemoryInfo\x12\x10\n\x08kb_total\x18\x01 \x01(\x03\x12\x0f\n\x07kb_free\x18\x02 \x01(\x03\x62\x06proto3')



_DEVICEASSIGNMENT = DESCRIPTOR.message_types_by_name['DeviceAssignment']
_DEVICEASSIGNMENT_COMPUTATIONDEVICE = _DEVICEASSIGNMENT.nested_types_by_name['ComputationDevice']
_DEVICEASSIGNMENT_COMPUTATIONDEVICE_DEVICEMESHCOORDINATES = _DEVICEASSIGNMENT_COMPUTATIONDEVICE.nested_types_by_name['DeviceMeshCoordinates']
_XLACOMPUTATIONCONFIG = DESCRIPTOR.message_types_by_name['XLAComputationConfig']
_XLACOMPUTATIONCONFIG_EXPERIMENTAL = _XLACOMPUTATIONCONFIG.nested_types_by_name['Experimental']
_XLACOMPUTATIONCONFIG_EXPERIMENTAL_UPDATEINDEXPAIR = _XLACOMPUTATIONCONFIG_EXPERIMENTAL.nested_types_by_name['UpdateIndexPair']
_XLACOMPUTATION = DESCRIPTOR.message_types_by_name['XLAComputation']
_XLAALLOCATION = DESCRIPTOR.message_types_by_name['XLAAllocation']
_XLATUPLENODE = DESCRIPTOR.message_types_by_name['XLATupleNode']
_COMMONEXECUTIONCONFIG = DESCRIPTOR.message_types_by_name['CommonExecutionConfig']
_XRTEXECUTIONCONFIG = DESCRIPTOR.message_types_by_name['XRTExecutionConfig']
_XRTCHAINEDEXECUTECONFIG = DESCRIPTOR.message_types_by_name['XRTChainedExecuteConfig']
_XRTCHAINEDEXECUTEOP = DESCRIPTOR.message_types_by_name['XRTChainedExecuteOp']
_XRTCHAINEDEXECUTEOP_INPUT = _XRTCHAINEDEXECUTEOP.nested_types_by_name['Input']
_XRTCHAINEDEXECUTEOP_OUTPUT = _XRTCHAINEDEXECUTEOP.nested_types_by_name['Output']
_XRTCHAINEDEXECUTEPLAN = DESCRIPTOR.message_types_by_name['XRTChainedExecutePlan']
_XRTMETRICSCOLLECT = DESCRIPTOR.message_types_by_name['XRTMetricsCollect']
_PERCENTILES = DESCRIPTOR.message_types_by_name['Percentiles']
_PERCENTILES_POINT = _PERCENTILES.nested_types_by_name['Point']
_METRICVALUES = DESCRIPTOR.message_types_by_name['MetricValues']
_METRICSREPORT = DESCRIPTOR.message_types_by_name['MetricsReport']
_MEMORYINFO = DESCRIPTOR.message_types_by_name['MemoryInfo']
_METRICVALUES_UNITOFMEASURE = _METRICVALUES.enum_types_by_name['UnitOfMeasure']
DeviceAssignment = _reflection.GeneratedProtocolMessageType('DeviceAssignment', (_message.Message,), {

  'ComputationDevice' : _reflection.GeneratedProtocolMessageType('ComputationDevice', (_message.Message,), {

    'DeviceMeshCoordinates' : _reflection.GeneratedProtocolMessageType('DeviceMeshCoordinates', (_message.Message,), {
      'DESCRIPTOR' : _DEVICEASSIGNMENT_COMPUTATIONDEVICE_DEVICEMESHCOORDINATES,
      '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
      # @@protoc_insertion_point(class_scope:xrt.DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)
      })
    ,
    'DESCRIPTOR' : _DEVICEASSIGNMENT_COMPUTATIONDEVICE,
    '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
    # @@protoc_insertion_point(class_scope:xrt.DeviceAssignment.ComputationDevice)
    })
  ,
  'DESCRIPTOR' : _DEVICEASSIGNMENT,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.DeviceAssignment)
  })
_sym_db.RegisterMessage(DeviceAssignment)
_sym_db.RegisterMessage(DeviceAssignment.ComputationDevice)
_sym_db.RegisterMessage(DeviceAssignment.ComputationDevice.DeviceMeshCoordinates)

XLAComputationConfig = _reflection.GeneratedProtocolMessageType('XLAComputationConfig', (_message.Message,), {

  'Experimental' : _reflection.GeneratedProtocolMessageType('Experimental', (_message.Message,), {

    'UpdateIndexPair' : _reflection.GeneratedProtocolMessageType('UpdateIndexPair', (_message.Message,), {
      'DESCRIPTOR' : _XLACOMPUTATIONCONFIG_EXPERIMENTAL_UPDATEINDEXPAIR,
      '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
      # @@protoc_insertion_point(class_scope:xrt.XLAComputationConfig.Experimental.UpdateIndexPair)
      })
    ,
    'DESCRIPTOR' : _XLACOMPUTATIONCONFIG_EXPERIMENTAL,
    '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
    # @@protoc_insertion_point(class_scope:xrt.XLAComputationConfig.Experimental)
    })
  ,
  'DESCRIPTOR' : _XLACOMPUTATIONCONFIG,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XLAComputationConfig)
  })
_sym_db.RegisterMessage(XLAComputationConfig)
_sym_db.RegisterMessage(XLAComputationConfig.Experimental)
_sym_db.RegisterMessage(XLAComputationConfig.Experimental.UpdateIndexPair)

XLAComputation = _reflection.GeneratedProtocolMessageType('XLAComputation', (_message.Message,), {
  'DESCRIPTOR' : _XLACOMPUTATION,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XLAComputation)
  })
_sym_db.RegisterMessage(XLAComputation)

XLAAllocation = _reflection.GeneratedProtocolMessageType('XLAAllocation', (_message.Message,), {
  'DESCRIPTOR' : _XLAALLOCATION,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XLAAllocation)
  })
_sym_db.RegisterMessage(XLAAllocation)

XLATupleNode = _reflection.GeneratedProtocolMessageType('XLATupleNode', (_message.Message,), {
  'DESCRIPTOR' : _XLATUPLENODE,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XLATupleNode)
  })
_sym_db.RegisterMessage(XLATupleNode)

CommonExecutionConfig = _reflection.GeneratedProtocolMessageType('CommonExecutionConfig', (_message.Message,), {
  'DESCRIPTOR' : _COMMONEXECUTIONCONFIG,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.CommonExecutionConfig)
  })
_sym_db.RegisterMessage(CommonExecutionConfig)

XRTExecutionConfig = _reflection.GeneratedProtocolMessageType('XRTExecutionConfig', (_message.Message,), {
  'DESCRIPTOR' : _XRTEXECUTIONCONFIG,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XRTExecutionConfig)
  })
_sym_db.RegisterMessage(XRTExecutionConfig)

XRTChainedExecuteConfig = _reflection.GeneratedProtocolMessageType('XRTChainedExecuteConfig', (_message.Message,), {
  'DESCRIPTOR' : _XRTCHAINEDEXECUTECONFIG,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XRTChainedExecuteConfig)
  })
_sym_db.RegisterMessage(XRTChainedExecuteConfig)

XRTChainedExecuteOp = _reflection.GeneratedProtocolMessageType('XRTChainedExecuteOp', (_message.Message,), {

  'Input' : _reflection.GeneratedProtocolMessageType('Input', (_message.Message,), {
    'DESCRIPTOR' : _XRTCHAINEDEXECUTEOP_INPUT,
    '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
    # @@protoc_insertion_point(class_scope:xrt.XRTChainedExecuteOp.Input)
    })
  ,

  'Output' : _reflection.GeneratedProtocolMessageType('Output', (_message.Message,), {
    'DESCRIPTOR' : _XRTCHAINEDEXECUTEOP_OUTPUT,
    '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
    # @@protoc_insertion_point(class_scope:xrt.XRTChainedExecuteOp.Output)
    })
  ,
  'DESCRIPTOR' : _XRTCHAINEDEXECUTEOP,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XRTChainedExecuteOp)
  })
_sym_db.RegisterMessage(XRTChainedExecuteOp)
_sym_db.RegisterMessage(XRTChainedExecuteOp.Input)
_sym_db.RegisterMessage(XRTChainedExecuteOp.Output)

XRTChainedExecutePlan = _reflection.GeneratedProtocolMessageType('XRTChainedExecutePlan', (_message.Message,), {
  'DESCRIPTOR' : _XRTCHAINEDEXECUTEPLAN,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XRTChainedExecutePlan)
  })
_sym_db.RegisterMessage(XRTChainedExecutePlan)

XRTMetricsCollect = _reflection.GeneratedProtocolMessageType('XRTMetricsCollect', (_message.Message,), {
  'DESCRIPTOR' : _XRTMETRICSCOLLECT,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.XRTMetricsCollect)
  })
_sym_db.RegisterMessage(XRTMetricsCollect)

Percentiles = _reflection.GeneratedProtocolMessageType('Percentiles', (_message.Message,), {

  'Point' : _reflection.GeneratedProtocolMessageType('Point', (_message.Message,), {
    'DESCRIPTOR' : _PERCENTILES_POINT,
    '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
    # @@protoc_insertion_point(class_scope:xrt.Percentiles.Point)
    })
  ,
  'DESCRIPTOR' : _PERCENTILES,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.Percentiles)
  })
_sym_db.RegisterMessage(Percentiles)
_sym_db.RegisterMessage(Percentiles.Point)

MetricValues = _reflection.GeneratedProtocolMessageType('MetricValues', (_message.Message,), {
  'DESCRIPTOR' : _METRICVALUES,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.MetricValues)
  })
_sym_db.RegisterMessage(MetricValues)

MetricsReport = _reflection.GeneratedProtocolMessageType('MetricsReport', (_message.Message,), {
  'DESCRIPTOR' : _METRICSREPORT,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.MetricsReport)
  })
_sym_db.RegisterMessage(MetricsReport)

MemoryInfo = _reflection.GeneratedProtocolMessageType('MemoryInfo', (_message.Message,), {
  'DESCRIPTOR' : _MEMORYINFO,
  '__module__' : 'tensorflow.compiler.xrt.xrt_pb2'
  # @@protoc_insertion_point(class_scope:xrt.MemoryInfo)
  })
_sym_db.RegisterMessage(MemoryInfo)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _DEVICEASSIGNMENT._serialized_start=217
  _DEVICEASSIGNMENT._serialized_end=455
  _DEVICEASSIGNMENT_COMPUTATIONDEVICE._serialized_start=308
  _DEVICEASSIGNMENT_COMPUTATIONDEVICE._serialized_end=455
  _DEVICEASSIGNMENT_COMPUTATIONDEVICE_DEVICEMESHCOORDINATES._serialized_start=417
  _DEVICEASSIGNMENT_COMPUTATIONDEVICE_DEVICEMESHCOORDINATES._serialized_end=455
  _XLACOMPUTATIONCONFIG._serialized_start=458
  _XLACOMPUTATIONCONFIG._serialized_end=1017
  _XLACOMPUTATIONCONFIG_EXPERIMENTAL._serialized_start=864
  _XLACOMPUTATIONCONFIG_EXPERIMENTAL._serialized_end=1017
  _XLACOMPUTATIONCONFIG_EXPERIMENTAL_UPDATEINDEXPAIR._serialized_start=968
  _XLACOMPUTATIONCONFIG_EXPERIMENTAL_UPDATEINDEXPAIR._serialized_end=1017
  _XLACOMPUTATION._serialized_start=1019
  _XLACOMPUTATION._serialized_end=1118
  _XLAALLOCATION._serialized_start=1120
  _XLAALLOCATION._serialized_end=1175
  _XLATUPLENODE._serialized_start=1177
  _XLATUPLENODE._serialized_end=1277
  _COMMONEXECUTIONCONFIG._serialized_start=1279
  _COMMONEXECUTIONCONFIG._serialized_end=1369
  _XRTEXECUTIONCONFIG._serialized_start=1372
  _XRTEXECUTIONCONFIG._serialized_end=1652
  _XRTCHAINEDEXECUTECONFIG._serialized_start=1655
  _XRTCHAINEDEXECUTECONFIG._serialized_end=1818
  _XRTCHAINEDEXECUTEOP._serialized_start=1821
  _XRTCHAINEDEXECUTEOP._serialized_end=2108
  _XRTCHAINEDEXECUTEOP_INPUT._serialized_start=1995
  _XRTCHAINEDEXECUTEOP_INPUT._serialized_end=2042
  _XRTCHAINEDEXECUTEOP_OUTPUT._serialized_start=2044
  _XRTCHAINEDEXECUTEOP_OUTPUT._serialized_end=2096
  _XRTCHAINEDEXECUTEPLAN._serialized_start=2110
  _XRTCHAINEDEXECUTEPLAN._serialized_end=2172
  _XRTMETRICSCOLLECT._serialized_start=2174
  _XRTMETRICSCOLLECT._serialized_end=2216
  _PERCENTILES._serialized_start=2219
  _PERCENTILES._serialized_end=2491
  _PERCENTILES_POINT._serialized_start=2449
  _PERCENTILES_POINT._serialized_end=2491
  _METRICVALUES._serialized_start=2494
  _METRICVALUES._serialized_end=2729
  _METRICVALUES_UNITOFMEASURE._serialized_start=2652
  _METRICVALUES_UNITOFMEASURE._serialized_end=2713
  _METRICSREPORT._serialized_start=2731
  _METRICSREPORT._serialized_end=2782
  _MEMORYINFO._serialized_start=2784
  _MEMORYINFO._serialized_end=2831
# @@protoc_insertion_point(module_scope)
