"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class CompatibilityAnalysisReportProto(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    UNKNOWN_DIALECT_FIELD_NUMBER: builtins.int
    REF_VARIABLE_FIELD_NUMBER: builtins.int
    INCOMPATIBLE_VARIABLE_FIELD_NUMBER: builtins.int
    INCOMPATIBLE_ATTRIBUTE_FIELD_NUMBER: builtins.int
    CONTROL_FLOW_V1_FIELD_NUMBER: builtins.int
    METHOD_NAME_FIELD_NUMBER: builtins.int
    unknown_dialect: builtins.bool
    ref_variable: builtins.bool
    incompatible_variable: builtins.bool
    incompatible_attribute: builtins.bool
    control_flow_v1: builtins.bool
    method_name: builtins.str
    def __init__(
        self,
        *,
        unknown_dialect: builtins.bool = ...,
        ref_variable: builtins.bool = ...,
        incompatible_variable: builtins.bool = ...,
        incompatible_attribute: builtins.bool = ...,
        control_flow_v1: builtins.bool = ...,
        method_name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["control_flow_v1", b"control_flow_v1", "incompatible_attribute", b"incompatible_attribute", "incompatible_variable", b"incompatible_variable", "method_name", b"method_name", "ref_variable", b"ref_variable", "unknown_dialect", b"unknown_dialect"]) -> None: ...

global___CompatibilityAnalysisReportProto = CompatibilityAnalysisReportProto

@typing_extensions.final
class CompatibilityAnalysisProto(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class OpInfo(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        COUNT_FIELD_NUMBER: builtins.int
        REPORT_FIELD_NUMBER: builtins.int
        count: builtins.int
        @property
        def report(self) -> global___CompatibilityAnalysisReportProto: ...
        def __init__(
            self,
            *,
            count: builtins.int = ...,
            report: global___CompatibilityAnalysisReportProto | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["report", b"report"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["count", b"count", "report", b"report"]) -> None: ...

    @typing_extensions.final
    class OpsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        @property
        def value(self) -> global___CompatibilityAnalysisProto.OpInfo: ...
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: global___CompatibilityAnalysisProto.OpInfo | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["value", b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["key", b"key", "value", b"value"]) -> None: ...

    SUMMARY_FIELD_NUMBER: builtins.int
    OPS_FIELD_NUMBER: builtins.int
    @property
    def summary(self) -> global___CompatibilityAnalysisReportProto: ...
    @property
    def ops(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___CompatibilityAnalysisProto.OpInfo]: ...
    def __init__(
        self,
        *,
        summary: global___CompatibilityAnalysisReportProto | None = ...,
        ops: collections.abc.Mapping[builtins.str, global___CompatibilityAnalysisProto.OpInfo] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["summary", b"summary"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ops", b"ops", "summary", b"summary"]) -> None: ...

global___CompatibilityAnalysisProto = CompatibilityAnalysisProto
