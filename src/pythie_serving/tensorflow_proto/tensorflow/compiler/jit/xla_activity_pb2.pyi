"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2019 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import tensorflow.core.protobuf.config_pb2
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class XlaAutoClusteringSummary(google.protobuf.message.Message):
    """Summarizes the results of auto-clustering a TensorFlow graph.

    Next ID: 5
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class OpAndCount(google.protobuf.message.Message):
        """Represents a single element in a histogram of ops ("op" as in "TensorFlow
        operation").

        Next ID: 3
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        OP_FIELD_NUMBER: builtins.int
        COUNT_FIELD_NUMBER: builtins.int
        op: builtins.str
        """The TensorFlow operation (like MatMult, Add etc.)"""
        count: builtins.int
        """The number of times this occurs."""
        def __init__(
            self,
            *,
            op: builtins.str = ...,
            count: builtins.int = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["count", b"count", "op", b"op"]) -> None: ...

    @typing_extensions.final
    class Cluster(google.protobuf.message.Message):
        """Describes a single XLA cluster.

        Next ID: 4
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        NAME_FIELD_NUMBER: builtins.int
        SIZE_FIELD_NUMBER: builtins.int
        OP_HISTOGRAM_FIELD_NUMBER: builtins.int
        name: builtins.str
        size: builtins.int
        """The number of nodes in the cluster."""
        @property
        def op_histogram(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___XlaAutoClusteringSummary.OpAndCount]:
            """A histogram of the TF operations in this cluster."""
        def __init__(
            self,
            *,
            name: builtins.str = ...,
            size: builtins.int = ...,
            op_histogram: collections.abc.Iterable[global___XlaAutoClusteringSummary.OpAndCount] | None = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "op_histogram", b"op_histogram", "size", b"size"]) -> None: ...

    UNCLUSTERED_NODE_COUNT_FIELD_NUMBER: builtins.int
    CLUSTERED_NODE_COUNT_FIELD_NUMBER: builtins.int
    CLUSTERS_FIELD_NUMBER: builtins.int
    UNCLUSTERED_OP_HISTOGRAM_FIELD_NUMBER: builtins.int
    unclustered_node_count: builtins.int
    """The number of nodes in the graph that are not inside an XLA cluster."""
    clustered_node_count: builtins.int
    """The number of nodes in the graph that are in an XLA cluster."""
    @property
    def clusters(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___XlaAutoClusteringSummary.Cluster]:
        """All of the XLA clusters in the TF graph."""
    @property
    def unclustered_op_histogram(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___XlaAutoClusteringSummary.OpAndCount]:
        """A histogram of the TF operations that were not clustered."""
    def __init__(
        self,
        *,
        unclustered_node_count: builtins.int = ...,
        clustered_node_count: builtins.int = ...,
        clusters: collections.abc.Iterable[global___XlaAutoClusteringSummary.Cluster] | None = ...,
        unclustered_op_histogram: collections.abc.Iterable[global___XlaAutoClusteringSummary.OpAndCount] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["clustered_node_count", b"clustered_node_count", "clusters", b"clusters", "unclustered_node_count", b"unclustered_node_count", "unclustered_op_histogram", b"unclustered_op_histogram"]) -> None: ...

global___XlaAutoClusteringSummary = XlaAutoClusteringSummary

@typing_extensions.final
class XlaAutoClusteringActivity(google.protobuf.message.Message):
    """Listeners listening for auto clustering events get messages of this type.

    Next ID: 4
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    GLOBAL_JIT_LEVEL_FIELD_NUMBER: builtins.int
    CPU_GLOBAL_JIT_ENABLED_FIELD_NUMBER: builtins.int
    SUMMARY_FIELD_NUMBER: builtins.int
    global_jit_level: tensorflow.core.protobuf.config_pb2.OptimizerOptions.GlobalJitLevel.ValueType
    """The value of GlobalJitLevel, as determined by `GetGlobalJitLevelForGraph`.
    This determines if global auto-clustering is enabled.
    """
    cpu_global_jit_enabled: builtins.bool
    """Whether --tf_xla_cpu_global_jit is enabled in TF_XLA_FLAGS."""
    @property
    def summary(self) -> global___XlaAutoClusteringSummary: ...
    def __init__(
        self,
        *,
        global_jit_level: tensorflow.core.protobuf.config_pb2.OptimizerOptions.GlobalJitLevel.ValueType = ...,
        cpu_global_jit_enabled: builtins.bool = ...,
        summary: global___XlaAutoClusteringSummary | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["summary", b"summary"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["cpu_global_jit_enabled", b"cpu_global_jit_enabled", "global_jit_level", b"global_jit_level", "summary", b"summary"]) -> None: ...

global___XlaAutoClusteringActivity = XlaAutoClusteringActivity

@typing_extensions.final
class XlaJitCompilationActivity(google.protobuf.message.Message):
    """Listeners listening for JIT compilation events get messages of this type.
    Each instance of XlaJitCompilationActivity corresponds to a single
    compilation of a single XLA cluster.  E.g. if a graph has two clusters, A and
    B, and A is compiled 5 times and B is compiled 2 times then we will generate
    7 instances of XlaJitCompilationActivity.

    Next ID: 6
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CLUSTER_NAME_FIELD_NUMBER: builtins.int
    COMPILE_COUNT_FIELD_NUMBER: builtins.int
    COMPILE_TIME_US_FIELD_NUMBER: builtins.int
    CUMULATIVE_COMPILE_TIME_US_FIELD_NUMBER: builtins.int
    USED_PERSISTENT_CACHE_FIELD_NUMBER: builtins.int
    cluster_name: builtins.str
    compile_count: builtins.int
    """The number of time this cluster has been compiled."""
    compile_time_us: builtins.int
    """Microseconds spent in the individual compilation being reported."""
    cumulative_compile_time_us: builtins.int
    """Total microseconds spent in (re-)compiling this cluster so far."""
    used_persistent_cache: builtins.bool
    """Whether a persistent compilation cache entry was used."""
    def __init__(
        self,
        *,
        cluster_name: builtins.str = ...,
        compile_count: builtins.int = ...,
        compile_time_us: builtins.int = ...,
        cumulative_compile_time_us: builtins.int = ...,
        used_persistent_cache: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["cluster_name", b"cluster_name", "compile_count", b"compile_count", "compile_time_us", b"compile_time_us", "cumulative_compile_time_us", b"cumulative_compile_time_us", "used_persistent_cache", b"used_persistent_cache"]) -> None: ...

global___XlaJitCompilationActivity = XlaJitCompilationActivity

@typing_extensions.final
class XlaOptimizationRemark(google.protobuf.message.Message):
    """LINT.IfChange

    Used for logging situations seen in Tensorflow models being optimized that
    are known to not perform well with XLA.

    Next ID: 3
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Warning:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _WarningEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[XlaOptimizationRemark._Warning.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NONE: XlaOptimizationRemark._Warning.ValueType  # 0
        INACCURATE_OPERATION: XlaOptimizationRemark._Warning.ValueType  # 1
        SLOW_OPERATION: XlaOptimizationRemark._Warning.ValueType  # 2
        UNIMPLEMENTED_OPERATION: XlaOptimizationRemark._Warning.ValueType  # 3
        SLOW_IMAGE_RESIZE_DIMENSIONS: XlaOptimizationRemark._Warning.ValueType  # 4
        MEGAMORPHIC_FUNCTION: XlaOptimizationRemark._Warning.ValueType  # 5

    class Warning(_Warning, metaclass=_WarningEnumTypeWrapper):
        """Next ID: 6"""

    NONE: XlaOptimizationRemark.Warning.ValueType  # 0
    INACCURATE_OPERATION: XlaOptimizationRemark.Warning.ValueType  # 1
    SLOW_OPERATION: XlaOptimizationRemark.Warning.ValueType  # 2
    UNIMPLEMENTED_OPERATION: XlaOptimizationRemark.Warning.ValueType  # 3
    SLOW_IMAGE_RESIZE_DIMENSIONS: XlaOptimizationRemark.Warning.ValueType  # 4
    MEGAMORPHIC_FUNCTION: XlaOptimizationRemark.Warning.ValueType  # 5

    WARNING_FIELD_NUMBER: builtins.int
    DEBUG_INFORMATION_FIELD_NUMBER: builtins.int
    warning: global___XlaOptimizationRemark.Warning.ValueType
    debug_information: builtins.str
    """Information such as which node was the problem."""
    def __init__(
        self,
        *,
        warning: global___XlaOptimizationRemark.Warning.ValueType = ...,
        debug_information: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["debug_information", b"debug_information", "warning", b"warning"]) -> None: ...

global___XlaOptimizationRemark = XlaOptimizationRemark
