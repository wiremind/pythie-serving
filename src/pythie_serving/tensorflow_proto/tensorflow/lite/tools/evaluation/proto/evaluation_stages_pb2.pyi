"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2019 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import tensorflow.lite.tools.evaluation.proto.preprocessing_steps_pb2
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ProcessSpecification(google.protobuf.message.Message):
    """Defines the functionality executed by an EvaluationStage.

    Next ID: 7
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_PREPROCESSING_PARAMS_FIELD_NUMBER: builtins.int
    TOPK_ACCURACY_EVAL_PARAMS_FIELD_NUMBER: builtins.int
    TFLITE_INFERENCE_PARAMS_FIELD_NUMBER: builtins.int
    IMAGE_CLASSIFICATION_PARAMS_FIELD_NUMBER: builtins.int
    OBJECT_DETECTION_AVERAGE_PRECISION_PARAMS_FIELD_NUMBER: builtins.int
    OBJECT_DETECTION_PARAMS_FIELD_NUMBER: builtins.int
    @property
    def image_preprocessing_params(self) -> global___ImagePreprocessingParams: ...
    @property
    def topk_accuracy_eval_params(self) -> global___TopkAccuracyEvalParams: ...
    @property
    def tflite_inference_params(self) -> global___TfliteInferenceParams: ...
    @property
    def image_classification_params(self) -> global___ImageClassificationParams: ...
    @property
    def object_detection_average_precision_params(self) -> global___ObjectDetectionAveragePrecisionParams: ...
    @property
    def object_detection_params(self) -> global___ObjectDetectionParams: ...
    def __init__(
        self,
        *,
        image_preprocessing_params: global___ImagePreprocessingParams | None = ...,
        topk_accuracy_eval_params: global___TopkAccuracyEvalParams | None = ...,
        tflite_inference_params: global___TfliteInferenceParams | None = ...,
        image_classification_params: global___ImageClassificationParams | None = ...,
        object_detection_average_precision_params: global___ObjectDetectionAveragePrecisionParams | None = ...,
        object_detection_params: global___ObjectDetectionParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image_classification_params", b"image_classification_params", "image_preprocessing_params", b"image_preprocessing_params", "object_detection_average_precision_params", b"object_detection_average_precision_params", "object_detection_params", b"object_detection_params", "params", b"params", "tflite_inference_params", b"tflite_inference_params", "topk_accuracy_eval_params", b"topk_accuracy_eval_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_classification_params", b"image_classification_params", "image_preprocessing_params", b"image_preprocessing_params", "object_detection_average_precision_params", b"object_detection_average_precision_params", "object_detection_params", b"object_detection_params", "params", b"params", "tflite_inference_params", b"tflite_inference_params", "topk_accuracy_eval_params", b"topk_accuracy_eval_params"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["params", b"params"]) -> typing_extensions.Literal["image_preprocessing_params", "topk_accuracy_eval_params", "tflite_inference_params", "image_classification_params", "object_detection_average_precision_params", "object_detection_params"] | None: ...

global___ProcessSpecification = ProcessSpecification

@typing_extensions.final
class LatencyMetrics(google.protobuf.message.Message):
    """Latency numbers in microseconds, based on all EvaluationStage::Run() calls so
    far.

    Next ID: 7
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LAST_US_FIELD_NUMBER: builtins.int
    MAX_US_FIELD_NUMBER: builtins.int
    MIN_US_FIELD_NUMBER: builtins.int
    SUM_US_FIELD_NUMBER: builtins.int
    AVG_US_FIELD_NUMBER: builtins.int
    STD_DEVIATION_US_FIELD_NUMBER: builtins.int
    last_us: builtins.int
    """Latency for the last Run."""
    max_us: builtins.int
    """Maximum latency observed for any Run."""
    min_us: builtins.int
    """Minimum latency observed for any Run."""
    sum_us: builtins.int
    """Sum of all Run latencies."""
    avg_us: builtins.float
    """Average latency across all Runs."""
    std_deviation_us: builtins.int
    """Standard deviation for latency across all Runs."""
    def __init__(
        self,
        *,
        last_us: builtins.int | None = ...,
        max_us: builtins.int | None = ...,
        min_us: builtins.int | None = ...,
        sum_us: builtins.int | None = ...,
        avg_us: builtins.float | None = ...,
        std_deviation_us: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["avg_us", b"avg_us", "last_us", b"last_us", "max_us", b"max_us", "min_us", b"min_us", "std_deviation_us", b"std_deviation_us", "sum_us", b"sum_us"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["avg_us", b"avg_us", "last_us", b"last_us", "max_us", b"max_us", "min_us", b"min_us", "std_deviation_us", b"std_deviation_us", "sum_us", b"sum_us"]) -> None: ...

global___LatencyMetrics = LatencyMetrics

@typing_extensions.final
class AccuracyMetrics(google.protobuf.message.Message):
    """Statistics for an accuracy value over multiple runs of evaluation.

    Next ID: 5
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MAX_VALUE_FIELD_NUMBER: builtins.int
    MIN_VALUE_FIELD_NUMBER: builtins.int
    AVG_VALUE_FIELD_NUMBER: builtins.int
    STD_DEVIATION_FIELD_NUMBER: builtins.int
    max_value: builtins.float
    """Maximum value observed for any Run."""
    min_value: builtins.float
    """Minimum value observed for any Run."""
    avg_value: builtins.float
    """Average value across all Runs."""
    std_deviation: builtins.float
    """Standard deviation across all Runs."""
    def __init__(
        self,
        *,
        max_value: builtins.float | None = ...,
        min_value: builtins.float | None = ...,
        avg_value: builtins.float | None = ...,
        std_deviation: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["avg_value", b"avg_value", "max_value", b"max_value", "min_value", b"min_value", "std_deviation", b"std_deviation"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["avg_value", b"avg_value", "max_value", b"max_value", "min_value", b"min_value", "std_deviation", b"std_deviation"]) -> None: ...

global___AccuracyMetrics = AccuracyMetrics

@typing_extensions.final
class ProcessMetrics(google.protobuf.message.Message):
    """Contains process-specific metrics, which may differ based on what an
    EvaluationStage does.

    Next ID: 8
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOTAL_LATENCY_FIELD_NUMBER: builtins.int
    TOPK_ACCURACY_METRICS_FIELD_NUMBER: builtins.int
    TFLITE_INFERENCE_METRICS_FIELD_NUMBER: builtins.int
    IMAGE_CLASSIFICATION_METRICS_FIELD_NUMBER: builtins.int
    INFERENCE_PROFILER_METRICS_FIELD_NUMBER: builtins.int
    OBJECT_DETECTION_AVERAGE_PRECISION_METRICS_FIELD_NUMBER: builtins.int
    OBJECT_DETECTION_METRICS_FIELD_NUMBER: builtins.int
    @property
    def total_latency(self) -> global___LatencyMetrics: ...
    @property
    def topk_accuracy_metrics(self) -> global___TopkAccuracyEvalMetrics: ...
    @property
    def tflite_inference_metrics(self) -> global___TfliteInferenceMetrics: ...
    @property
    def image_classification_metrics(self) -> global___ImageClassificationMetrics: ...
    @property
    def inference_profiler_metrics(self) -> global___InferenceProfilerMetrics: ...
    @property
    def object_detection_average_precision_metrics(self) -> global___ObjectDetectionAveragePrecisionMetrics: ...
    @property
    def object_detection_metrics(self) -> global___ObjectDetectionMetrics: ...
    def __init__(
        self,
        *,
        total_latency: global___LatencyMetrics | None = ...,
        topk_accuracy_metrics: global___TopkAccuracyEvalMetrics | None = ...,
        tflite_inference_metrics: global___TfliteInferenceMetrics | None = ...,
        image_classification_metrics: global___ImageClassificationMetrics | None = ...,
        inference_profiler_metrics: global___InferenceProfilerMetrics | None = ...,
        object_detection_average_precision_metrics: global___ObjectDetectionAveragePrecisionMetrics | None = ...,
        object_detection_metrics: global___ObjectDetectionMetrics | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image_classification_metrics", b"image_classification_metrics", "inference_profiler_metrics", b"inference_profiler_metrics", "object_detection_average_precision_metrics", b"object_detection_average_precision_metrics", "object_detection_metrics", b"object_detection_metrics", "stage_metrics", b"stage_metrics", "tflite_inference_metrics", b"tflite_inference_metrics", "topk_accuracy_metrics", b"topk_accuracy_metrics", "total_latency", b"total_latency"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_classification_metrics", b"image_classification_metrics", "inference_profiler_metrics", b"inference_profiler_metrics", "object_detection_average_precision_metrics", b"object_detection_average_precision_metrics", "object_detection_metrics", b"object_detection_metrics", "stage_metrics", b"stage_metrics", "tflite_inference_metrics", b"tflite_inference_metrics", "topk_accuracy_metrics", b"topk_accuracy_metrics", "total_latency", b"total_latency"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["stage_metrics", b"stage_metrics"]) -> typing_extensions.Literal["topk_accuracy_metrics", "tflite_inference_metrics", "image_classification_metrics", "inference_profiler_metrics", "object_detection_average_precision_metrics", "object_detection_metrics"] | None: ...

global___ProcessMetrics = ProcessMetrics

@typing_extensions.final
class ImagePreprocessingParams(google.protobuf.message.Message):
    """Parameters that define how images are preprocessed.

    Next ID: 3
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    STEPS_FIELD_NUMBER: builtins.int
    OUTPUT_TYPE_FIELD_NUMBER: builtins.int
    @property
    def steps(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.lite.tools.evaluation.proto.preprocessing_steps_pb2.ImagePreprocessingStepParams]:
        """Required."""
    output_type: builtins.int
    """Same as tflite::TfLiteType."""
    def __init__(
        self,
        *,
        steps: collections.abc.Iterable[tensorflow.lite.tools.evaluation.proto.preprocessing_steps_pb2.ImagePreprocessingStepParams] | None = ...,
        output_type: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["output_type", b"output_type"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["output_type", b"output_type", "steps", b"steps"]) -> None: ...

global___ImagePreprocessingParams = ImagePreprocessingParams

@typing_extensions.final
class TfliteInferenceParams(google.protobuf.message.Message):
    """Parameters that control TFLite inference.

    Next ID: 5
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _Delegate:
        ValueType = typing.NewType("ValueType", builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _DelegateEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[TfliteInferenceParams._Delegate.ValueType], builtins.type):  # noqa: F821
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        NONE: TfliteInferenceParams._Delegate.ValueType  # 0
        NNAPI: TfliteInferenceParams._Delegate.ValueType  # 1
        GPU: TfliteInferenceParams._Delegate.ValueType  # 2
        HEXAGON: TfliteInferenceParams._Delegate.ValueType  # 3
        XNNPACK: TfliteInferenceParams._Delegate.ValueType  # 4
        COREML: TfliteInferenceParams._Delegate.ValueType  # 5

    class Delegate(_Delegate, metaclass=_DelegateEnumTypeWrapper): ...
    NONE: TfliteInferenceParams.Delegate.ValueType  # 0
    NNAPI: TfliteInferenceParams.Delegate.ValueType  # 1
    GPU: TfliteInferenceParams.Delegate.ValueType  # 2
    HEXAGON: TfliteInferenceParams.Delegate.ValueType  # 3
    XNNPACK: TfliteInferenceParams.Delegate.ValueType  # 4
    COREML: TfliteInferenceParams.Delegate.ValueType  # 5

    MODEL_FILE_PATH_FIELD_NUMBER: builtins.int
    DELEGATE_FIELD_NUMBER: builtins.int
    NUM_THREADS_FIELD_NUMBER: builtins.int
    INVOCATIONS_PER_RUN_FIELD_NUMBER: builtins.int
    model_file_path: builtins.str
    """Required"""
    delegate: global___TfliteInferenceParams.Delegate.ValueType
    num_threads: builtins.int
    """Number of threads available to the TFLite Interpreter."""
    invocations_per_run: builtins.int
    """Defines how many times the TFLite Interpreter is invoked for every input.
    This helps benchmark cases where extensive pre-processing might not be
    required for every input.
    """
    def __init__(
        self,
        *,
        model_file_path: builtins.str | None = ...,
        delegate: global___TfliteInferenceParams.Delegate.ValueType | None = ...,
        num_threads: builtins.int | None = ...,
        invocations_per_run: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["delegate", b"delegate", "invocations_per_run", b"invocations_per_run", "model_file_path", b"model_file_path", "num_threads", b"num_threads"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["delegate", b"delegate", "invocations_per_run", b"invocations_per_run", "model_file_path", b"model_file_path", "num_threads", b"num_threads"]) -> None: ...

global___TfliteInferenceParams = TfliteInferenceParams

@typing_extensions.final
class TfliteInferenceMetrics(google.protobuf.message.Message):
    """Metrics specific to TFLite inference.

    Next ID: 2
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NUM_INFERENCES_FIELD_NUMBER: builtins.int
    num_inferences: builtins.int
    """Number of times the interpreter is invoked."""
    def __init__(
        self,
        *,
        num_inferences: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["num_inferences", b"num_inferences"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["num_inferences", b"num_inferences"]) -> None: ...

global___TfliteInferenceMetrics = TfliteInferenceMetrics

@typing_extensions.final
class TopkAccuracyEvalParams(google.protobuf.message.Message):
    """Parameters that define how top-K accuracy is evaluated.

    Next ID: 2
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    K_FIELD_NUMBER: builtins.int
    k: builtins.int
    """Required."""
    def __init__(
        self,
        *,
        k: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["k", b"k"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["k", b"k"]) -> None: ...

global___TopkAccuracyEvalParams = TopkAccuracyEvalParams

@typing_extensions.final
class TopkAccuracyEvalMetrics(google.protobuf.message.Message):
    """Metrics from top-K accuracy evaluation.

    Next ID: 2
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOPK_ACCURACIES_FIELD_NUMBER: builtins.int
    @property
    def topk_accuracies(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """A repeated field of size |k| where the ith element denotes the fraction of
        samples for which the correct label was present in the top (i + 1) model
        outputs.
        For example, topk_accuracies(1) will contain the fraction of
        samples for which the model returned the correct label as the top first or
        second output.
        """
    def __init__(
        self,
        *,
        topk_accuracies: collections.abc.Iterable[builtins.float] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["topk_accuracies", b"topk_accuracies"]) -> None: ...

global___TopkAccuracyEvalMetrics = TopkAccuracyEvalMetrics

@typing_extensions.final
class ImageClassificationParams(google.protobuf.message.Message):
    """Parameters that define how the Image Classification task is evaluated
    end-to-end.

    Next ID: 3
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INFERENCE_PARAMS_FIELD_NUMBER: builtins.int
    TOPK_ACCURACY_EVAL_PARAMS_FIELD_NUMBER: builtins.int
    @property
    def inference_params(self) -> global___TfliteInferenceParams:
        """Required.
        TfLite model should have 1 input & 1 output tensor.
        Input shape: {1, image_height, image_width, 3}
        Output shape: {1, num_total_labels}
        """
    @property
    def topk_accuracy_eval_params(self) -> global___TopkAccuracyEvalParams:
        """Optional.
        If not set, accuracy evaluation is not performed.
        """
    def __init__(
        self,
        *,
        inference_params: global___TfliteInferenceParams | None = ...,
        topk_accuracy_eval_params: global___TopkAccuracyEvalParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["inference_params", b"inference_params", "topk_accuracy_eval_params", b"topk_accuracy_eval_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inference_params", b"inference_params", "topk_accuracy_eval_params", b"topk_accuracy_eval_params"]) -> None: ...

global___ImageClassificationParams = ImageClassificationParams

@typing_extensions.final
class ImageClassificationMetrics(google.protobuf.message.Message):
    """Metrics from evaluation of the image classification task.

    Next ID: 5
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRE_PROCESSING_LATENCY_FIELD_NUMBER: builtins.int
    INFERENCE_LATENCY_FIELD_NUMBER: builtins.int
    INFERENCE_METRICS_FIELD_NUMBER: builtins.int
    TOPK_ACCURACY_METRICS_FIELD_NUMBER: builtins.int
    @property
    def pre_processing_latency(self) -> global___LatencyMetrics: ...
    @property
    def inference_latency(self) -> global___LatencyMetrics: ...
    @property
    def inference_metrics(self) -> global___TfliteInferenceMetrics: ...
    @property
    def topk_accuracy_metrics(self) -> global___TopkAccuracyEvalMetrics:
        """Not set if topk_accuracy_eval_params was not populated in
        ImageClassificationParams.
        """
    def __init__(
        self,
        *,
        pre_processing_latency: global___LatencyMetrics | None = ...,
        inference_latency: global___LatencyMetrics | None = ...,
        inference_metrics: global___TfliteInferenceMetrics | None = ...,
        topk_accuracy_metrics: global___TopkAccuracyEvalMetrics | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["inference_latency", b"inference_latency", "inference_metrics", b"inference_metrics", "pre_processing_latency", b"pre_processing_latency", "topk_accuracy_metrics", b"topk_accuracy_metrics"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["inference_latency", b"inference_latency", "inference_metrics", b"inference_metrics", "pre_processing_latency", b"pre_processing_latency", "topk_accuracy_metrics", b"topk_accuracy_metrics"]) -> None: ...

global___ImageClassificationMetrics = ImageClassificationMetrics

@typing_extensions.final
class InferenceProfilerMetrics(google.protobuf.message.Message):
    """Metrics computed from comparing TFLite execution in two settings:
    1. User-defined TfliteInferenceParams (The 'test' setting)
    2. Default TfliteInferenceParams (The 'reference' setting)

    Next ID: 4
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REFERENCE_LATENCY_FIELD_NUMBER: builtins.int
    TEST_LATENCY_FIELD_NUMBER: builtins.int
    OUTPUT_ERRORS_FIELD_NUMBER: builtins.int
    @property
    def reference_latency(self) -> global___LatencyMetrics:
        """Latency metrics from Single-thread CPU inference."""
    @property
    def test_latency(self) -> global___LatencyMetrics:
        """Latency from TfliteInferenceParams under test."""
    @property
    def output_errors(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AccuracyMetrics]:
        """For reference & test output vectors {R, T}, the error is computed as:
        Mean([Abs(R[i] - T[i]) for i in num_elements])
        output_errors[v] : statistics for the error value of the vth output vector
          across all Runs.
        """
    def __init__(
        self,
        *,
        reference_latency: global___LatencyMetrics | None = ...,
        test_latency: global___LatencyMetrics | None = ...,
        output_errors: collections.abc.Iterable[global___AccuracyMetrics] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["reference_latency", b"reference_latency", "test_latency", b"test_latency"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["output_errors", b"output_errors", "reference_latency", b"reference_latency", "test_latency", b"test_latency"]) -> None: ...

global___InferenceProfilerMetrics = InferenceProfilerMetrics

@typing_extensions.final
class ObjectDetectionResult(google.protobuf.message.Message):
    """Proto containing information about all the objects (predicted or
    ground-truth) contained in an image.

    Next ID: 4
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class ObjectInstance(google.protobuf.message.Message):
        """One instance of an object detected in an image.
        Next ID: 4
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        @typing_extensions.final
        class NormalizedBoundingBox(google.protobuf.message.Message):
            """Defines the bounding box for a detected object.
            Next ID: 5
            """

            DESCRIPTOR: google.protobuf.descriptor.Descriptor

            NORMALIZED_TOP_FIELD_NUMBER: builtins.int
            NORMALIZED_BOTTOM_FIELD_NUMBER: builtins.int
            NORMALIZED_LEFT_FIELD_NUMBER: builtins.int
            NORMALIZED_RIGHT_FIELD_NUMBER: builtins.int
            normalized_top: builtins.float
            """All boundaries defined below are required.
            Each boundary value should be normalized with respect to the image
            dimensions. This helps evaluate detections independent of image size.
            For example, normalized_top = top_boundary / image_height.
            """
            normalized_bottom: builtins.float
            normalized_left: builtins.float
            normalized_right: builtins.float
            def __init__(
                self,
                *,
                normalized_top: builtins.float | None = ...,
                normalized_bottom: builtins.float | None = ...,
                normalized_left: builtins.float | None = ...,
                normalized_right: builtins.float | None = ...,
            ) -> None: ...
            def HasField(self, field_name: typing_extensions.Literal["normalized_bottom", b"normalized_bottom", "normalized_left", b"normalized_left", "normalized_right", b"normalized_right", "normalized_top", b"normalized_top"]) -> builtins.bool: ...
            def ClearField(self, field_name: typing_extensions.Literal["normalized_bottom", b"normalized_bottom", "normalized_left", b"normalized_left", "normalized_right", b"normalized_right", "normalized_top", b"normalized_top"]) -> None: ...

        CLASS_ID_FIELD_NUMBER: builtins.int
        BOUNDING_BOX_FIELD_NUMBER: builtins.int
        SCORE_FIELD_NUMBER: builtins.int
        class_id: builtins.int
        """Required."""
        @property
        def bounding_box(self) -> global___ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox:
            """Required"""
        score: builtins.float
        """Value in (0, 1.0] denoting confidence in this prediction.
        Default value of 1.0 for ground-truth data.
        """
        def __init__(
            self,
            *,
            class_id: builtins.int | None = ...,
            bounding_box: global___ObjectDetectionResult.ObjectInstance.NormalizedBoundingBox | None = ...,
            score: builtins.float | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["bounding_box", b"bounding_box", "class_id", b"class_id", "score", b"score"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["bounding_box", b"bounding_box", "class_id", b"class_id", "score", b"score"]) -> None: ...

    OBJECTS_FIELD_NUMBER: builtins.int
    IMAGE_NAME_FIELD_NUMBER: builtins.int
    IMAGE_ID_FIELD_NUMBER: builtins.int
    @property
    def objects(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectDetectionResult.ObjectInstance]: ...
    image_name: builtins.str
    """Filename of the image."""
    image_id: builtins.int
    """Unique id for the image."""
    def __init__(
        self,
        *,
        objects: collections.abc.Iterable[global___ObjectDetectionResult.ObjectInstance] | None = ...,
        image_name: builtins.str | None = ...,
        image_id: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["image_id", b"image_id", "image_name", b"image_name"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_id", b"image_id", "image_name", b"image_name", "objects", b"objects"]) -> None: ...

global___ObjectDetectionResult = ObjectDetectionResult

@typing_extensions.final
class ObjectDetectionGroundTruth(google.protobuf.message.Message):
    """Proto containing ground-truth ObjectsSets for all images in a COCO validation
    set.

    Next ID: 2
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    DETECTION_RESULTS_FIELD_NUMBER: builtins.int
    @property
    def detection_results(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectDetectionResult]: ...
    def __init__(
        self,
        *,
        detection_results: collections.abc.Iterable[global___ObjectDetectionResult] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["detection_results", b"detection_results"]) -> None: ...

global___ObjectDetectionGroundTruth = ObjectDetectionGroundTruth

@typing_extensions.final
class ObjectDetectionAveragePrecisionParams(google.protobuf.message.Message):
    """Parameters that define how Average Precision is computed for Object Detection
    task.
    Refer for details: http://cocodataset.org/#detection-eval

    Next ID: 4
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NUM_CLASSES_FIELD_NUMBER: builtins.int
    IOU_THRESHOLDS_FIELD_NUMBER: builtins.int
    NUM_RECALL_POINTS_FIELD_NUMBER: builtins.int
    num_classes: builtins.int
    """Total object classes. The AP value returned for each IoU threshold is an
    average over all classes encountered in predicted/ground truth sets.
    """
    @property
    def iou_thresholds(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.float]:
        """A predicted box matches a ground truth box if and only if
        IoU between these two are larger than an IoU threshold.
        AP is computed for all relevant {IoU threshold, class} combinations and
        averaged to get mAP.
        If left empty, evaluation is done for all IoU threshods in the range
        0.5:0.05:0.95 (min:increment:max).
        """
    num_recall_points: builtins.int
    """AP is computed as the average of maximum precision at (1
    + num_recall_points) recall levels. E.g., if num_recall_points is 10,
    recall levels are 0., 0.1, 0.2, ..., 0.9, 1.0.
    Default: 100
    """
    def __init__(
        self,
        *,
        num_classes: builtins.int | None = ...,
        iou_thresholds: collections.abc.Iterable[builtins.float] | None = ...,
        num_recall_points: builtins.int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["num_classes", b"num_classes", "num_recall_points", b"num_recall_points"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["iou_thresholds", b"iou_thresholds", "num_classes", b"num_classes", "num_recall_points", b"num_recall_points"]) -> None: ...

global___ObjectDetectionAveragePrecisionParams = ObjectDetectionAveragePrecisionParams

@typing_extensions.final
class ObjectDetectionAveragePrecisionMetrics(google.protobuf.message.Message):
    """Average Precision metrics from Object Detection task.

    Next ID: 3
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing_extensions.final
    class AveragePrecision(google.protobuf.message.Message):
        """Average Precision value for a particular IoU threshold.
        Next ID: 3
        """

        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        IOU_THRESHOLD_FIELD_NUMBER: builtins.int
        AVERAGE_PRECISION_FIELD_NUMBER: builtins.int
        iou_threshold: builtins.float
        average_precision: builtins.float
        def __init__(
            self,
            *,
            iou_threshold: builtins.float | None = ...,
            average_precision: builtins.float | None = ...,
        ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["average_precision", b"average_precision", "iou_threshold", b"iou_threshold"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["average_precision", b"average_precision", "iou_threshold", b"iou_threshold"]) -> None: ...

    INDIVIDUAL_AVERAGE_PRECISIONS_FIELD_NUMBER: builtins.int
    OVERALL_MEAN_AVERAGE_PRECISION_FIELD_NUMBER: builtins.int
    @property
    def individual_average_precisions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ObjectDetectionAveragePrecisionMetrics.AveragePrecision]:
        """One entry for each in
        ObjectDetectionAveragePrecisionParams::iou_thresholds, averaged over all
        classes.
        """
    overall_mean_average_precision: builtins.float
    """Average of Average Precision across all IoU thresholds."""
    def __init__(
        self,
        *,
        individual_average_precisions: collections.abc.Iterable[global___ObjectDetectionAveragePrecisionMetrics.AveragePrecision] | None = ...,
        overall_mean_average_precision: builtins.float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["overall_mean_average_precision", b"overall_mean_average_precision"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["individual_average_precisions", b"individual_average_precisions", "overall_mean_average_precision", b"overall_mean_average_precision"]) -> None: ...

global___ObjectDetectionAveragePrecisionMetrics = ObjectDetectionAveragePrecisionMetrics

@typing_extensions.final
class ObjectDetectionParams(google.protobuf.message.Message):
    """Parameters that define how the Object Detection task is evaluated
    end-to-end.

    Next ID: 4
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    INFERENCE_PARAMS_FIELD_NUMBER: builtins.int
    CLASS_OFFSET_FIELD_NUMBER: builtins.int
    AP_PARAMS_FIELD_NUMBER: builtins.int
    @property
    def inference_params(self) -> global___TfliteInferenceParams:
        """Required.
        Model's outputs should be same as a TFLite-compatible SSD model.
        Refer:
        https://www.tensorflow.org/lite/examples/object_detection/overview#output_signature
        """
    class_offset: builtins.int
    """Optional. Used to match ground-truth categories with model output.
    SSD Mobilenet V1 Model trained on COCO assumes class 0 is background class
    in the label file and class labels start from 1 to number_of_classes+1.
    Therefore, default value is set as 1.
    """
    @property
    def ap_params(self) -> global___ObjectDetectionAveragePrecisionParams: ...
    def __init__(
        self,
        *,
        inference_params: global___TfliteInferenceParams | None = ...,
        class_offset: builtins.int | None = ...,
        ap_params: global___ObjectDetectionAveragePrecisionParams | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["ap_params", b"ap_params", "class_offset", b"class_offset", "inference_params", b"inference_params"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["ap_params", b"ap_params", "class_offset", b"class_offset", "inference_params", b"inference_params"]) -> None: ...

global___ObjectDetectionParams = ObjectDetectionParams

@typing_extensions.final
class ObjectDetectionMetrics(google.protobuf.message.Message):
    """Metrics from evaluation of the object detection task.

    Next ID: 5
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    PRE_PROCESSING_LATENCY_FIELD_NUMBER: builtins.int
    INFERENCE_LATENCY_FIELD_NUMBER: builtins.int
    INFERENCE_METRICS_FIELD_NUMBER: builtins.int
    AVERAGE_PRECISION_METRICS_FIELD_NUMBER: builtins.int
    @property
    def pre_processing_latency(self) -> global___LatencyMetrics: ...
    @property
    def inference_latency(self) -> global___LatencyMetrics: ...
    @property
    def inference_metrics(self) -> global___TfliteInferenceMetrics: ...
    @property
    def average_precision_metrics(self) -> global___ObjectDetectionAveragePrecisionMetrics: ...
    def __init__(
        self,
        *,
        pre_processing_latency: global___LatencyMetrics | None = ...,
        inference_latency: global___LatencyMetrics | None = ...,
        inference_metrics: global___TfliteInferenceMetrics | None = ...,
        average_precision_metrics: global___ObjectDetectionAveragePrecisionMetrics | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["average_precision_metrics", b"average_precision_metrics", "inference_latency", b"inference_latency", "inference_metrics", b"inference_metrics", "pre_processing_latency", b"pre_processing_latency"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["average_precision_metrics", b"average_precision_metrics", "inference_latency", b"inference_latency", "inference_metrics", b"inference_metrics", "pre_processing_latency", b"pre_processing_latency"]) -> None: ...

global___ObjectDetectionMetrics = ObjectDetectionMetrics
