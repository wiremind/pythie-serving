"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2022 The TensorFlow Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ShardingSpec(google.protobuf.message.Message):
    """Defines a sharding spec over a tensor.
    A sharding spec can either be a mesh dimension of the associated mesh or the
    special values scalar, or not_sharded.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHARDING_SPEC_FIELD_NUMBER: builtins.int
    sharding_spec: builtins.str
    """If set, the mesh dimension this tensor dimension is sharded over."""
    def __init__(
        self,
        *,
        sharding_spec: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["sharding_spec", b"sharding_spec"]) -> None: ...

global___ShardingSpec = ShardingSpec

@typing_extensions.final
class MeshDimensionProto(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    NAME_FIELD_NUMBER: builtins.int
    SIZE_FIELD_NUMBER: builtins.int
    name: builtins.str
    """Name of mesh dimension, required to create Mesh."""
    size: builtins.int
    """Length of mesh dimension."""
    def __init__(
        self,
        *,
        name: builtins.str = ...,
        size: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["name", b"name", "size", b"size"]) -> None: ...

global___MeshDimensionProto = MeshDimensionProto

@typing_extensions.final
class LayoutProto(google.protobuf.message.Message):
    """Proto representation of a Layout."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    SHARDING_SPECS_FIELD_NUMBER: builtins.int
    MESH_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def sharding_specs(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ShardingSpec]: ...
    @property
    def mesh_config(self) -> global___MeshProto: ...
    def __init__(
        self,
        *,
        sharding_specs: collections.abc.Iterable[global___ShardingSpec] | None = ...,
        mesh_config: global___MeshProto | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["mesh_config", b"mesh_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["mesh_config", b"mesh_config", "sharding_specs", b"sharding_specs"]) -> None: ...

global___LayoutProto = LayoutProto

@typing_extensions.final
class MeshProto(google.protobuf.message.Message):
    """Proto representation of a Mesh.
    TODO(allenl): Add a unique mesh ID so we have an efficient way to identify
    meshes in mappings.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MESH_DIMENSIONS_FIELD_NUMBER: builtins.int
    GLOBAL_DEVICE_IDS_FIELD_NUMBER: builtins.int
    LOCAL_DEVICE_IDS_FIELD_NUMBER: builtins.int
    LOCAL_DEVICES_FIELD_NUMBER: builtins.int
    GLOBAL_DEVICES_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    @property
    def mesh_dimensions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___MeshDimensionProto]: ...
    @property
    def global_device_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """A list of global devices ids."""
    @property
    def local_device_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]:
        """Devices ids handled by the local process."""
    @property
    def local_devices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Devices handled by the local process."""
    @property
    def global_devices(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Global device names (Optional). Set when multiple device meshes are in use."""
    name: builtins.str
    """Required name which uniquely identifies this mesh in a program."""
    def __init__(
        self,
        *,
        mesh_dimensions: collections.abc.Iterable[global___MeshDimensionProto] | None = ...,
        global_device_ids: collections.abc.Iterable[builtins.int] | None = ...,
        local_device_ids: collections.abc.Iterable[builtins.int] | None = ...,
        local_devices: collections.abc.Iterable[builtins.str] | None = ...,
        global_devices: collections.abc.Iterable[builtins.str] | None = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["global_device_ids", b"global_device_ids", "global_devices", b"global_devices", "local_device_ids", b"local_device_ids", "local_devices", b"local_devices", "mesh_dimensions", b"mesh_dimensions", "name", b"name"]) -> None: ...

global___MeshProto = MeshProto
