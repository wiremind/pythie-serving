"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import google.protobuf.wrappers_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class Resource(google.protobuf.message.Message):
    """One kind of resource on one device (or type of device)."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    DEVICE_FIELD_NUMBER: builtins.int
    DEVICE_INSTANCE_FIELD_NUMBER: builtins.int
    KIND_FIELD_NUMBER: builtins.int
    device: typing.Text
    """The type of device on which the resource resides, e.g. CPU or GPU."""

    @property
    def device_instance(self) -> google.protobuf.wrappers_pb2.UInt32Value:
        """A specific instance of the device of type 'device' to which the resources
        are bound (instances are assumed to be numbered 0, 1, ...).

        When representing the resources required by a servable that has yet to be
        loaded, this field is optional. If not set, it denotes that the servable's
        resources are not (yet) bound to a specific instance.
        """
        pass
    kind: typing.Text
    """The kind of resource on the device (instance), e.g. RAM or compute share.

    A given type of resource should have a standard unit that represents the
    smallest useful quantization. We strongly recommend including the unit
    (e.g. bytes or millicores) in this string, as in "ram_bytes".
    """

    def __init__(self,
        *,
        device: typing.Text = ...,
        device_instance: typing.Optional[google.protobuf.wrappers_pb2.UInt32Value] = ...,
        kind: typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["device_instance",b"device_instance"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["device",b"device","device_instance",b"device_instance","kind",b"kind"]) -> None: ...
global___Resource = Resource

class ResourceAllocation(google.protobuf.message.Message):
    """An allocation of one or more kinds of resources, along with the quantity of
    each. Used to denote the resources that a servable (or collection of
    servables) will use or is currently using. Also used to denote resources
    available to the serving system for loading more servables.
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    class Entry(google.protobuf.message.Message):
        """A collection of resources, each with a quantity. Treated as a resource->
        quantity map, i.e. no resource can repeat and the order is immaterial.
        """
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        RESOURCE_FIELD_NUMBER: builtins.int
        QUANTITY_FIELD_NUMBER: builtins.int
        @property
        def resource(self) -> global___Resource: ...
        quantity: builtins.int
        def __init__(self,
            *,
            resource: typing.Optional[global___Resource] = ...,
            quantity: builtins.int = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal["resource",b"resource"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal["quantity",b"quantity","resource",b"resource"]) -> None: ...

    RESOURCE_QUANTITIES_FIELD_NUMBER: builtins.int
    @property
    def resource_quantities(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ResourceAllocation.Entry]: ...
    def __init__(self,
        *,
        resource_quantities: typing.Optional[typing.Iterable[global___ResourceAllocation.Entry]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["resource_quantities",b"resource_quantities"]) -> None: ...
global___ResourceAllocation = ResourceAllocation
