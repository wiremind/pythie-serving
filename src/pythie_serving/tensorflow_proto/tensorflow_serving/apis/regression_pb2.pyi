"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import sys
import tensorflow_serving.apis.input_pb2
import tensorflow_serving.apis.model_pb2

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class Regression(google.protobuf.message.Message):
    """Regression result for a single item (tensorflow.Example)."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    VALUE_FIELD_NUMBER: builtins.int
    value: builtins.float
    def __init__(
        self,
        *,
        value: builtins.float = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["value", b"value"]) -> None: ...

global___Regression = Regression

@typing_extensions.final
class RegressionResult(google.protobuf.message.Message):
    """Contains one result per input example, in the same order as the input in
    RegressionRequest.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    REGRESSIONS_FIELD_NUMBER: builtins.int
    @property
    def regressions(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Regression]: ...
    def __init__(
        self,
        *,
        regressions: collections.abc.Iterable[global___Regression] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["regressions", b"regressions"]) -> None: ...

global___RegressionResult = RegressionResult

@typing_extensions.final
class RegressionRequest(google.protobuf.message.Message):
    """RPC interfaces."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_SPEC_FIELD_NUMBER: builtins.int
    INPUT_FIELD_NUMBER: builtins.int
    @property
    def model_spec(self) -> tensorflow_serving.apis.model_pb2.ModelSpec:
        """Model Specification. If version is not specified, will use the latest
        (numerical) version.
        """
    @property
    def input(self) -> tensorflow_serving.apis.input_pb2.Input:
        """Input data."""
    def __init__(
        self,
        *,
        model_spec: tensorflow_serving.apis.model_pb2.ModelSpec | None = ...,
        input: tensorflow_serving.apis.input_pb2.Input | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["input", b"input", "model_spec", b"model_spec"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["input", b"input", "model_spec", b"model_spec"]) -> None: ...

global___RegressionRequest = RegressionRequest

@typing_extensions.final
class RegressionResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    MODEL_SPEC_FIELD_NUMBER: builtins.int
    RESULT_FIELD_NUMBER: builtins.int
    @property
    def model_spec(self) -> tensorflow_serving.apis.model_pb2.ModelSpec:
        """Effective Model Specification used for regression."""
    @property
    def result(self) -> global___RegressionResult: ...
    def __init__(
        self,
        *,
        model_spec: tensorflow_serving.apis.model_pb2.ModelSpec | None = ...,
        result: global___RegressionResult | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_spec", b"model_spec", "result", b"result"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_spec", b"model_spec", "result", b"result"]) -> None: ...

global___RegressionResponse = RegressionResponse
