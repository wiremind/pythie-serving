"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.message
import tensorflow_serving.apis.classification_pb2
import tensorflow_serving.apis.inference_pb2
import tensorflow_serving.apis.logging_pb2
import tensorflow_serving.apis.predict_pb2
import tensorflow_serving.apis.regression_pb2
import tensorflow_serving.apis.session_service_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ClassifyLog(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUEST_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> tensorflow_serving.apis.classification_pb2.ClassificationRequest: ...
    @property
    def response(self) -> tensorflow_serving.apis.classification_pb2.ClassificationResponse: ...
    def __init__(self,
        *,
        request: typing.Optional[tensorflow_serving.apis.classification_pb2.ClassificationRequest] = ...,
        response: typing.Optional[tensorflow_serving.apis.classification_pb2.ClassificationResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> None: ...
global___ClassifyLog = ClassifyLog

class RegressLog(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUEST_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> tensorflow_serving.apis.regression_pb2.RegressionRequest: ...
    @property
    def response(self) -> tensorflow_serving.apis.regression_pb2.RegressionResponse: ...
    def __init__(self,
        *,
        request: typing.Optional[tensorflow_serving.apis.regression_pb2.RegressionRequest] = ...,
        response: typing.Optional[tensorflow_serving.apis.regression_pb2.RegressionResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> None: ...
global___RegressLog = RegressLog

class PredictLog(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUEST_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> tensorflow_serving.apis.predict_pb2.PredictRequest: ...
    @property
    def response(self) -> tensorflow_serving.apis.predict_pb2.PredictResponse: ...
    def __init__(self,
        *,
        request: typing.Optional[tensorflow_serving.apis.predict_pb2.PredictRequest] = ...,
        response: typing.Optional[tensorflow_serving.apis.predict_pb2.PredictResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> None: ...
global___PredictLog = PredictLog

class MultiInferenceLog(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUEST_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> tensorflow_serving.apis.inference_pb2.MultiInferenceRequest: ...
    @property
    def response(self) -> tensorflow_serving.apis.inference_pb2.MultiInferenceResponse: ...
    def __init__(self,
        *,
        request: typing.Optional[tensorflow_serving.apis.inference_pb2.MultiInferenceRequest] = ...,
        response: typing.Optional[tensorflow_serving.apis.inference_pb2.MultiInferenceResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> None: ...
global___MultiInferenceLog = MultiInferenceLog

class SessionRunLog(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    REQUEST_FIELD_NUMBER: builtins.int
    RESPONSE_FIELD_NUMBER: builtins.int
    @property
    def request(self) -> tensorflow_serving.apis.session_service_pb2.SessionRunRequest: ...
    @property
    def response(self) -> tensorflow_serving.apis.session_service_pb2.SessionRunResponse: ...
    def __init__(self,
        *,
        request: typing.Optional[tensorflow_serving.apis.session_service_pb2.SessionRunRequest] = ...,
        response: typing.Optional[tensorflow_serving.apis.session_service_pb2.SessionRunResponse] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["request",b"request","response",b"response"]) -> None: ...
global___SessionRunLog = SessionRunLog

class PredictionLog(google.protobuf.message.Message):
    """Logged model inference request."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    LOG_METADATA_FIELD_NUMBER: builtins.int
    CLASSIFY_LOG_FIELD_NUMBER: builtins.int
    REGRESS_LOG_FIELD_NUMBER: builtins.int
    PREDICT_LOG_FIELD_NUMBER: builtins.int
    MULTI_INFERENCE_LOG_FIELD_NUMBER: builtins.int
    SESSION_RUN_LOG_FIELD_NUMBER: builtins.int
    @property
    def log_metadata(self) -> tensorflow_serving.apis.logging_pb2.LogMetadata: ...
    @property
    def classify_log(self) -> global___ClassifyLog: ...
    @property
    def regress_log(self) -> global___RegressLog: ...
    @property
    def predict_log(self) -> global___PredictLog: ...
    @property
    def multi_inference_log(self) -> global___MultiInferenceLog: ...
    @property
    def session_run_log(self) -> global___SessionRunLog: ...
    def __init__(self,
        *,
        log_metadata: typing.Optional[tensorflow_serving.apis.logging_pb2.LogMetadata] = ...,
        classify_log: typing.Optional[global___ClassifyLog] = ...,
        regress_log: typing.Optional[global___RegressLog] = ...,
        predict_log: typing.Optional[global___PredictLog] = ...,
        multi_inference_log: typing.Optional[global___MultiInferenceLog] = ...,
        session_run_log: typing.Optional[global___SessionRunLog] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["classify_log",b"classify_log","log_metadata",b"log_metadata","log_type",b"log_type","multi_inference_log",b"multi_inference_log","predict_log",b"predict_log","regress_log",b"regress_log","session_run_log",b"session_run_log"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["classify_log",b"classify_log","log_metadata",b"log_metadata","log_type",b"log_type","multi_inference_log",b"multi_inference_log","predict_log",b"predict_log","regress_log",b"regress_log","session_run_log",b"session_run_log"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["log_type",b"log_type"]) -> typing.Optional[typing_extensions.Literal["classify_log","regress_log","predict_log","multi_inference_log","session_run_log"]]: ...
global___PredictionLog = PredictionLog
