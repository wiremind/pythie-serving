"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import tensorflow.core.example.example_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class ExampleList(google.protobuf.message.Message):
    """Specifies one or more fully independent input Examples.
    See examples at:
        https://github.com/tensorflow/tensorflow/blob/master/tensorflow/core/example/example.proto
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXAMPLES_FIELD_NUMBER: builtins.int
    @property
    def examples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.example.example_pb2.Example]: ...
    def __init__(self,
        *,
        examples: typing.Optional[typing.Iterable[tensorflow.core.example.example_pb2.Example]] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["examples",b"examples"]) -> None: ...
global___ExampleList = ExampleList

class ExampleListWithContext(google.protobuf.message.Message):
    """Specifies one or more independent input Examples, with a common context
    Example.

    The common use case for context is to cleanly and optimally specify some
    features that are common across multiple examples.

    See example below with a search query as the context and multiple restaurants
    to perform some inference on.

    context: {
      features: {
        feature: {
          key  : "query"
          value: {
            bytes_list: {
              value: [ "pizza" ]
            }
          }
        }
      }
    }
    examples: {
      features: {
        feature: {
          key  : "cuisine"
          value: {
            bytes_list: {
              value: [ "Pizzeria" ]
            }
          }
        }
      }
    }
    examples: {
      features: {
        feature: {
          key  : "cuisine"
          value: {
            bytes_list: {
              value: [ "Taqueria" ]
            }
          }
        }
      }
    }

    Implementations of ExampleListWithContext merge the context Example into each
    of the Examples. Note that feature keys must not be duplicated between the
    Examples and context Example, or the behavior is undefined.

    See also:
        tensorflow/core/example/example.proto
        https://developers.google.com/protocol-buffers/docs/proto3#maps
    """
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXAMPLES_FIELD_NUMBER: builtins.int
    CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def examples(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[tensorflow.core.example.example_pb2.Example]: ...
    @property
    def context(self) -> tensorflow.core.example.example_pb2.Example: ...
    def __init__(self,
        *,
        examples: typing.Optional[typing.Iterable[tensorflow.core.example.example_pb2.Example]] = ...,
        context: typing.Optional[tensorflow.core.example.example_pb2.Example] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["context",b"context"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["context",b"context","examples",b"examples"]) -> None: ...
global___ExampleListWithContext = ExampleListWithContext

class Input(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    EXAMPLE_LIST_FIELD_NUMBER: builtins.int
    EXAMPLE_LIST_WITH_CONTEXT_FIELD_NUMBER: builtins.int
    @property
    def example_list(self) -> global___ExampleList: ...
    @property
    def example_list_with_context(self) -> global___ExampleListWithContext: ...
    def __init__(self,
        *,
        example_list: typing.Optional[global___ExampleList] = ...,
        example_list_with_context: typing.Optional[global___ExampleListWithContext] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["example_list",b"example_list","example_list_with_context",b"example_list_with_context","kind",b"kind"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["example_list",b"example_list","example_list_with_context",b"example_list_with_context","kind",b"kind"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["kind",b"kind"]) -> typing.Optional[typing_extensions.Literal["example_list","example_list_with_context"]]: ...
global___Input = Input
