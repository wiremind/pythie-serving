"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import tensorflow_serving.apis.model_pb2
import tensorflow_serving.config.logging_config_pb2
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class LogMetadata(google.protobuf.message.Message):
    """Metadata logged along with the request logs."""
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODEL_SPEC_FIELD_NUMBER: builtins.int
    SAMPLING_CONFIG_FIELD_NUMBER: builtins.int
    SAVED_MODEL_TAGS_FIELD_NUMBER: builtins.int
    @property
    def model_spec(self) -> tensorflow_serving.apis.model_pb2.ModelSpec: ...
    @property
    def sampling_config(self) -> tensorflow_serving.config.logging_config_pb2.SamplingConfig: ...
    @property
    def saved_model_tags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text]:
        """List of tags used to load the relevant MetaGraphDef from SavedModel.
        TODO(b/33279154): Add more metadata as mentioned in the bug.
        """
        pass
    def __init__(self,
        *,
        model_spec: typing.Optional[tensorflow_serving.apis.model_pb2.ModelSpec] = ...,
        sampling_config: typing.Optional[tensorflow_serving.config.logging_config_pb2.SamplingConfig] = ...,
        saved_model_tags: typing.Optional[typing.Iterable[typing.Text]] = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["model_spec",b"model_spec","sampling_config",b"sampling_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["model_spec",b"model_spec","sampling_config",b"sampling_config","saved_model_tags",b"saved_model_tags"]) -> None: ...
global___LogMetadata = LogMetadata
