"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
Copyright 2020 Google Inc. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================
"""
import builtins
import google.protobuf.any_pb2
import google.protobuf.descriptor
import google.protobuf.message
import sys

if sys.version_info >= (3, 8):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing_extensions.final
class ThreadPoolFactoryConfig(google.protobuf.message.Message):
    """Configuration for a thread pool factory."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    THREAD_POOL_FACTORY_CONFIG_FIELD_NUMBER: builtins.int
    @property
    def thread_pool_factory_config(self) -> google.protobuf.any_pb2.Any:
        """The config proto for a ThreadPoolFactory in the ThreadPoolFactory registry."""
    def __init__(
        self,
        *,
        thread_pool_factory_config: google.protobuf.any_pb2.Any | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["thread_pool_factory_config", b"thread_pool_factory_config"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["thread_pool_factory_config", b"thread_pool_factory_config"]) -> None: ...

global___ThreadPoolFactoryConfig = ThreadPoolFactoryConfig
